{
"version":3,
"file":"goog.module.modulemanager.js",
"lineCount":600,
"mappings":"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",
"sources":["goog/module/modulemanager.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview A default implementation for managing JavaScript code modules.\n * @enhanceable\n */\n\ngoog.provide('goog.module.ModuleManager');\ngoog.provide('goog.module.ModuleManager.CallbackType');\ngoog.provide('goog.module.ModuleManager.FailureType');\n\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.async.Deferred');\ngoog.require('goog.debug.Error');\ngoog.require('goog.disposable.IDisposable');\ngoog.require('goog.disposeAll');\ngoog.require('goog.loader.AbstractModuleManager');\ngoog.require('goog.loader.activeModuleManager');\ngoog.require('goog.log');\n/** @suppress {extraRequire} */\ngoog.require('goog.module');\ngoog.require('goog.module.ModuleInfo');\ngoog.require('goog.module.ModuleLoadCallback');\ngoog.require('goog.module.ModuleLoadFailureType');\ngoog.require('goog.object');\ngoog.requireType('goog.module.AbstractModuleLoader');\n\ngoog.scope(() => {\n/**\n * A fake module ID used to handle synthetic module callbacks when their\n * overhead is excluded.\n *\n * Background:\n *   1. A synthetic module is generated by factoring out common code depended on\n *      by multiple modules.\n *   2. When a module is loaded, the module manager expects it to begin\n *      with a call to beforeLoadModuleCode('module_id') and end with\n *      setLoaded(). Module registration callbacks registered inbetween these\n *      calls are executed when setLoaded() is called.\n *\n * As a code size optimization, synthetic modules may omit these calls, which\n * prevents us from identifying their beginning and end. In order to make\n * registration callbacks work, we track them using this fake module id.\n */\nconst SYNTHETIC_MODULE_OVERHEAD_ID = 'synthetic_module_overhead';\n\n/**\n * The ModuleManager keeps track of all modules in the environment.\n * Since modules may not have their code loaded, we must keep track of them.\n * @constructor\n * @extends {goog.loader.AbstractModuleManager}\n * @implements {goog.disposable.IDisposable}\n * @struct\n */\ngoog.module.ModuleManager = function() {\n  'use strict';\n  goog.module.ModuleManager.base(this, 'constructor');\n\n  /**\n   * A mapping from module id to ModuleInfo object.\n   * @protected {!Object<string, !goog.module.ModuleInfo>}\n   */\n  this.moduleInfoMap = {};\n\n  // TODO (malteubl): Switch this to a reentrant design.\n  /**\n   * The ids of the currently loading modules. If batch mode is disabled, then\n   * this array will never contain more than one element at a time.\n   * @type {!Array<string>}\n   * @private\n   */\n  this.loadingModuleIds_ = [];\n\n  /**\n   * The requested ids of the currently loading modules. This does not include\n   * module dependencies that may also be loading.\n   * @type {!Array<string>}\n   * @private\n   */\n  this.requestedLoadingModuleIds_ = [];\n\n  // TODO(malteubl): Make these and other arrays that are used as sets be\n  // actual sets.\n  /**\n   * All module ids that have ever been requested. In concurrent loading these\n   * are the ones to subtract from future requests.\n   * @type {!Array<string>}\n   * @private\n   */\n  this.requestedModuleIds_ = [];\n\n  /**\n   * A queue of the ids of requested but not-yet-loaded modules. The zero\n   * position is the front of the queue. This is a 2-D array to group modules\n   * together with other modules that should be batch loaded with them, if\n   * batch loading is enabled.\n   * @type {!Array<!Array<string>>}\n   * @private\n   */\n  this.requestedModuleIdsQueue_ = [];\n\n  /**\n   * The ids of the currently loading modules which have been initiated by user\n   * actions.\n   * @type {!Array<string>}\n   * @private\n   */\n  this.userInitiatedLoadingModuleIds_ = [];\n\n  /**\n   * @private @const {!goog.module.AbstractModuleLoader.ExtraEdgesMap} Map of\n   *     extra edges to traverse in the module graph\n   */\n  this.extraEdges_ = {};\n\n  /**\n   * A map of callback types to the functions to call for the specified\n   * callback type.\n   * @type {!Object<!goog.loader.AbstractModuleManager.CallbackType,\n   *     !Array<!Function>>}\n   * @private\n   */\n  this.callbackMap_ = {};\n\n  /**\n   * Module info for the base module (the one that contains the module\n   * manager code), which we set as the loading module so one can\n   * register initialization callbacks in the base module.\n   *\n   * The base module is considered loaded when #setAllModuleInfo is called or\n   * #setModuleContext is called, whichever comes first.\n   *\n   * @type {!goog.module.ModuleInfo}\n   * @private\n   */\n  this.baseModuleInfo_ = new goog.module.ModuleInfo([], '');\n\n  /**\n   * The module that is currently loading, or null if not loading anything.\n   * @type {?goog.module.ModuleInfo}\n   * @private\n   */\n  this.currentlyLoadingModule_ = this.baseModuleInfo_;\n\n  /**\n   * The id of the last requested initial module. When it loaded\n   * the deferred in `this.initialModulesLoaded_` resolves.\n   * @private {?string}\n   */\n  this.lastInitialModuleId_ = null;\n\n  /**\n   * Deferred for when all initial modules have loaded. We currently block\n   * sending additional module requests until this deferred resolves. In a\n   * future optimization it may be possible to use the initial modules as\n   * seeds for the module loader \"requested module ids\" and start making new\n   * requests even sooner.\n   * @private {!goog.async.Deferred}\n   */\n  this.initialModulesLoaded_ = new goog.async.Deferred();\n\n  /**\n   * A logger.\n   * @private {?goog.log.Logger}\n   */\n  this.logger_ = goog.log.getLogger('goog.module.ModuleManager');\n\n  /**\n   * Whether the batch mode (i.e. the loading of multiple modules with just one\n   * request) has been enabled.\n   * @private {boolean}\n   */\n  this.batchModeEnabled_ = false;\n\n  /**\n   * Whether the module requests may be sent out of order.\n   * @private {boolean}\n   */\n  this.concurrentLoadingEnabled_ = false;\n\n  /**\n   * The number of consecutive failures that have happened upon module load\n   * requests.\n   * @private {number}\n   */\n  this.consecutiveFailures_ = 0;\n\n  /**\n   * Determines if the module manager was just active before the processing of\n   * the last data.\n   * @private {boolean}\n   */\n  this.lastActive_ = false;\n\n  /**\n   * Determines if the module manager was just user active before the processing\n   * of the last data. The module manager is user active if any of the\n   * user-initiated modules are loading or queued up to load.\n   * @private {boolean}\n   */\n  this.userLastActive_ = false;\n\n  /**\n   * @private {boolean}\n   */\n  this.isDisposed_ = false;\n};\ngoog.inherits(goog.module.ModuleManager, goog.loader.AbstractModuleManager);\n\n\n/**\n * Error used to indicate a module has failed.\n *\n * @param {string} moduleID The id of the module that didn't load.\n * @param {?goog.loader.AbstractModuleManager.FailureType} failureType\n * @constructor\n * @extends {goog.debug.Error}\n * @final\n */\ngoog.module.ModuleManager.ModuleFailureError = function(moduleID, failureType) {\n  'use strict';\n  /** @type {string} */\n  const msg = `Error loading ${moduleID}: ${\n      goog.module.ModuleLoadFailureType.getReadableError(failureType)}`;\n\n  goog.module.ModuleManager.ModuleFailureError.base(this, 'constructor', msg);\n\n  /** @type {?goog.loader.AbstractModuleManager.FailureType} */\n  this.failureType = failureType;\n};\ngoog.inherits(goog.module.ModuleManager.ModuleFailureError, goog.debug.Error);\n\n\n/**\n * The type of callbacks that can be registered with the module manager,.\n * @enum {string}\n */\ngoog.module.ModuleManager.CallbackType =\n    goog.loader.AbstractModuleManager.CallbackType;\n\n\n/**\n * The possible reasons for a module load failure callback being fired.\n * @enum {number}\n */\ngoog.module.ModuleManager.FailureType = goog.module.ModuleLoadFailureType;\n\n\n/**\n * A non-HTTP status code indicating a corruption in loaded module.\n * This should be used by a ModuleLoader as a replacement for the HTTP code\n * given to the error handler function to indicated that the module was\n * corrupted.\n * This will set the forceReload flag on the loadModules method when retrying\n * module loading.\n * @type {number}\n */\ngoog.module.ModuleManager.CORRUPT_RESPONSE_STATUS_CODE =\n    goog.loader.AbstractModuleManager.CORRUPT_RESPONSE_STATUS_CODE;\n\n\n/** @return {!goog.loader.AbstractModuleManager} */\ngoog.module.ModuleManager.getInstance = function() {\n  'use strict';\n  return goog.loader.activeModuleManager.get();\n};\n\n\n/** @override */\ngoog.module.ModuleManager.prototype.setBatchModeEnabled = function(enabled) {\n  'use strict';\n  this.batchModeEnabled_ = enabled;\n};\n\n\n/** @override */\ngoog.module.ModuleManager.prototype.setConcurrentLoadingEnabled = function(\n    enabled) {\n  'use strict';\n  this.concurrentLoadingEnabled_ = enabled;\n};\n\n\n/** @override */\ngoog.module.ModuleManager.prototype.setAllModuleInfo = function(infoMap) {\n  'use strict';\n  for (var id in infoMap) {\n    this.addOrUpdateModuleInfo_(id, infoMap[id]);\n  }\n  if (!this.initialModulesLoaded_.hasFired()) {\n    this.initialModulesLoaded_.callback();\n  }\n  this.maybeFinishBaseLoad_();\n};\n\n\n/** @override */\ngoog.module.ModuleManager.prototype.setAllModuleInfoString = function(\n    opt_info, opt_loadingModuleIds) {\n  'use strict';\n  // Check for legacy direct-from-prototype usage.\n  if (!(this instanceof goog.module.ModuleManager)) {\n    this.setAllModuleInfoString(opt_info, opt_loadingModuleIds);\n    return;\n  }\n  if (typeof (opt_info) !== 'string') {\n    // The call to this method is generated in two steps, the argument is added\n    // after some of the compilation passes.  This means that the initial code\n    // doesn't have any arguments and causes compiler errors.  We make it\n    // optional to satisfy this constraint.\n    return;\n  }\n\n  var modules = opt_info.split('/');\n  var moduleIds = [];\n\n  // Split the string into the infoMap of id->deps\n  for (var i = 0; i < modules.length; i++) {\n    var parts = modules[i].split(':');\n    var id = parts[0];\n    var deps;\n    if (parts[1]) {\n      deps = parts[1].split(',');\n      for (var j = 0; j < deps.length; j++) {\n        var index = parseInt(deps[j], 36);\n        goog.asserts.assert(\n            moduleIds[index], 'No module @ %s, dep of %s @ %s', index, id, i);\n        deps[j] = moduleIds[index];\n      }\n    } else {\n      deps = [];\n    }\n    moduleIds.push(id);\n    this.addOrUpdateModuleInfo_(id, deps);\n  }\n  if (opt_loadingModuleIds && opt_loadingModuleIds.length) {\n    goog.array.extend(this.loadingModuleIds_, opt_loadingModuleIds);\n    // The last module in the list of initial modules. When it has loaded all\n    // initial modules have loaded.\n    this.lastInitialModuleId_ =\n        /** @type {?string}  */ (goog.array.peek(opt_loadingModuleIds));\n  } else {\n    if (!this.initialModulesLoaded_.hasFired()) {\n      this.initialModulesLoaded_.callback();\n    }\n  }\n  this.maybeFinishBaseLoad_();\n};\n\n/**\n * @define {boolean} Whether subtractive module loading is enabled. The main\n * difference is the module graph is no longer in the client, i.e.,\n * setAllModuleInfoString is never been called. Instead, the module manager\n * will keep track of the already loaded modules, and add them to the subsequent\n * loader requests. The serving system is able to figure out the list of desired\n * modules.\n *\n * The default is false, but new code is encouraged to use this.\n * Search, Gmail, and many Google applications has been using subtractive\n * module loading for years and see significantly performance benefits.\n */\ngoog.module.ModuleManager.SUBTRACTIVE_MODULE_LOADING =\n    goog.define('goog.module.ModuleManager.SUBTRACTIVE_MODULE_LOADING', false);\n\n/** @override */\ngoog.module.ModuleManager.prototype.getModuleInfo = function(id) {\n  'use strict';\n  if (goog.module.ModuleManager.SUBTRACTIVE_MODULE_LOADING &&\n      !(id in this.moduleInfoMap)) {\n    this.moduleInfoMap[id] = new goog.module.ModuleInfo([], id);\n  }\n  return this.moduleInfoMap[id];\n};\n\n\n/** @override */\ngoog.module.ModuleManager.prototype.addExtraEdge = function(\n    fromModule, toModule) {\n  'use strict';\n  if (!this.getLoader().supportsExtraEdges) {\n    throw new Error('Extra edges are not supported by the module loader.');\n  }\n  if (!this.extraEdges_[fromModule]) {\n    this.extraEdges_[fromModule] = {};\n  }\n  this.extraEdges_[fromModule][toModule] = true;\n};\n\n/** @override */\ngoog.module.ModuleManager.prototype.removeExtraEdge = function(\n    fromModule, toModule) {\n  'use strict';\n  if (!this.extraEdges_[fromModule]) {\n    return;\n  }\n  delete this.extraEdges_[fromModule][toModule];\n};\n\n\n/** @override */\ngoog.module.ModuleManager.prototype.setModuleTrustedUris = function(\n    moduleUriMap) {\n  'use strict';\n  for (var id in moduleUriMap) {\n    this.moduleInfoMap[id].setTrustedUris(moduleUriMap[id]);\n  }\n};\n\n\n/** @override */\ngoog.module.ModuleManager.prototype.setModuleContext = function(context) {\n  'use strict';\n  goog.module.ModuleManager.base(this, 'setModuleContext', context);\n  this.maybeFinishBaseLoad_();\n};\n\n\n/** @override */\ngoog.module.ModuleManager.prototype.isActive = function() {\n  'use strict';\n  return this.loadingModuleIds_.length > 0;\n};\n\n\n/** @override */\ngoog.module.ModuleManager.prototype.isUserActive = function() {\n  'use strict';\n  return this.userInitiatedLoadingModuleIds_.length > 0;\n};\n\n\n/**\n * Dispatches an ACTIVE or IDLE event if necessary.\n * @private\n */\ngoog.module.ModuleManager.prototype.dispatchActiveIdleChangeIfNeeded_ =\n    function() {\n  'use strict';\n  var lastActive = this.lastActive_;\n  var active = this.isActive();\n  if (active != lastActive) {\n    this.executeCallbacks_(\n        active ? goog.loader.AbstractModuleManager.CallbackType.ACTIVE :\n                 goog.loader.AbstractModuleManager.CallbackType.IDLE);\n\n    // Flip the last active value.\n    this.lastActive_ = active;\n  }\n\n  // Check if the module manager is user active i.e., there are user initiated\n  // modules being loaded or queued up to be loaded.\n  var userLastActive = this.userLastActive_;\n  var userActive = this.isUserActive();\n  if (userActive != userLastActive) {\n    this.executeCallbacks_(\n        userActive ?\n            goog.loader.AbstractModuleManager.CallbackType.USER_ACTIVE :\n            goog.loader.AbstractModuleManager.CallbackType.USER_IDLE);\n\n    // Flip the last user active value.\n    this.userLastActive_ = userActive;\n  }\n};\n\n\n/** @override */\ngoog.module.ModuleManager.prototype.preloadModule = function(id, opt_timeout) {\n  'use strict';\n  var d = new goog.async.Deferred();\n  // Call setTimeout on global object so that it can be called from within\n  // webworkers.\n  goog.global.setTimeout(\n      goog.bind(this.addLoadModule_, this, id, d), opt_timeout || 0);\n  return d;\n};\n\n\n/** @override */\ngoog.module.ModuleManager.prototype.prefetchModule = function(id) {\n  'use strict';\n  var moduleInfo = this.getModuleInfo(id);\n  if (moduleInfo.isLoaded() || this.isModuleLoading(id)) {\n    throw new Error('Module load already requested: ' + id);\n  } else if (this.batchModeEnabled_) {\n    throw new Error('Modules prefetching is not supported in batch mode');\n  } else {\n    var idWithDeps = this.getNotYetLoadedTransitiveDepIds_(id);\n    for (var i = 0; i < idWithDeps.length; i++) {\n      this.getLoader().prefetchModule(\n          idWithDeps[i], this.moduleInfoMap[idWithDeps[i]]);\n    }\n  }\n};\n\n\n/**\n * Loads a single module for use with a given deferred.\n *\n * @param {string} id The id of the module to load.\n * @param {!goog.async.Deferred} d A deferred object.\n * @private\n */\ngoog.module.ModuleManager.prototype.addLoadModule_ = function(id, d) {\n  'use strict';\n  var moduleInfo = this.getModuleInfo(id);\n  if (moduleInfo.isLoaded()) {\n    d.callback(this.getModuleContext());\n    return;\n  }\n\n  this.registerModuleLoadCallbacks_(id, moduleInfo, false, d);\n  if (!this.isModuleLoading(id)) {\n    this.loadModulesOrEnqueue_([id]);\n  }\n};\n\n\n/**\n * Updates the module info map with either a new ModuleInfo instance or by doing\n * an in-place update of the dependencies to persist the existing loaded state\n * and registered callbacks.\n *\n * @param {string} id\n * @param {!Array<string>} deps\n * @private\n */\ngoog.module.ModuleManager.prototype.addOrUpdateModuleInfo_ = function(\n    id, deps) {\n  'use strict';\n  if (this.moduleInfoMap[id]) {\n    const moduleDeps = this.moduleInfoMap[id].getDependencies();\n    if (moduleDeps != deps) {\n      moduleDeps.splice(0, moduleDeps.length, ...deps);\n    }\n  } else {\n    this.moduleInfoMap[id] = new goog.module.ModuleInfo(deps, id);\n  }\n};\n\n\n/**\n * Loads a list of modules or, if some other module is currently being\n * loaded, appends the ids to the queue of requested module ids. Registers\n * callbacks a module that is currently loading and returns a fired deferred\n * for a module that is already loaded.\n *\n * @param {!Array<string>} ids The id of the module to load.\n * @param {boolean=} opt_userInitiated If the load is a result of a user action.\n * @return {!Object<string, !goog.async.Deferred>} A mapping from id (String)\n *     to deferred objects that will callback or errback when the load for that\n *     id is finished.\n * @private\n */\ngoog.module.ModuleManager.prototype.loadModulesOrEnqueueIfNotLoadedOrLoading_ =\n    function(ids, opt_userInitiated) {\n  'use strict';\n  var uniqueIds = [];\n  goog.array.removeDuplicates(ids, uniqueIds);\n  var idsToLoad = [];\n  var deferredMap = {};\n  for (var i = 0; i < uniqueIds.length; i++) {\n    var id = uniqueIds[i];\n    var moduleInfo = this.getModuleInfo(id);\n    if (!moduleInfo) {\n      throw new Error('Unknown module: ' + id);\n    }\n    var d = new goog.async.Deferred();\n    deferredMap[id] = d;\n    if (moduleInfo.isLoaded()) {\n      d.callback(this.getModuleContext());\n    } else {\n      this.registerModuleLoadCallbacks_(id, moduleInfo, !!opt_userInitiated, d);\n      if (!this.isModuleLoading(id)) {\n        idsToLoad.push(id);\n      }\n    }\n  }\n\n  // If there are ids to load, load them, otherwise, they are all loading or\n  // loaded.\n  if (idsToLoad.length > 0) {\n    this.loadModulesOrEnqueue_(idsToLoad);\n  }\n  return deferredMap;\n};\n\n\n/**\n * Registers the callbacks and handles logic if it is a user initiated module\n * load.\n *\n * @param {string} id The id of the module to possibly load.\n * @param {!goog.module.ModuleInfo} moduleInfo The module identifier for the\n *     given id.\n * @param {boolean} userInitiated If the load was user initiated.\n * @param {!goog.async.Deferred} d A deferred object.\n * @private\n */\ngoog.module.ModuleManager.prototype.registerModuleLoadCallbacks_ = function(\n    id, moduleInfo, userInitiated, d) {\n  'use strict';\n  moduleInfo.registerCallback(d.callback, d);\n  moduleInfo.registerErrback(function(err) {\n    'use strict';\n    d.errback(new goog.module.ModuleManager.ModuleFailureError(id, err));\n  });\n  // If it's already loading, we don't have to do anything besides handle\n  // if it was user initiated\n  if (this.isModuleLoading(id)) {\n    if (userInitiated) {\n      goog.log.fine(\n          this.logger_, 'User initiated module already loading: ' + id);\n      this.addUserInitiatedLoadingModule_(id);\n      this.dispatchActiveIdleChangeIfNeeded_();\n    }\n  } else {\n    if (userInitiated) {\n      goog.log.fine(this.logger_, 'User initiated module load: ' + id);\n      this.addUserInitiatedLoadingModule_(id);\n    } else {\n      goog.log.fine(this.logger_, 'Initiating module load: ' + id);\n    }\n  }\n};\n\n\n/**\n * Initiates loading of a list of modules or, if a module is currently being\n * loaded, appends the modules to the queue of requested module ids.\n *\n * The caller should verify that the requested modules are not already loaded or\n * loading. {@link #loadModulesOrEnqueueIfNotLoadedOrLoading_} is a more lenient\n * alternative to this method.\n *\n * @param {!Array<string>} ids The ids of the modules to load.\n * @private\n */\ngoog.module.ModuleManager.prototype.loadModulesOrEnqueue_ = function(ids) {\n  'use strict';\n  // With concurrent loading we always just send off the request.\n  if (this.concurrentLoadingEnabled_) {\n    // For now we wait for initial modules to have downloaded as this puts the\n    // loader in a good state for calculating the needed deps of additional\n    // loads.\n    // TODO(malteubl): Make this wait unnecessary.\n    this.initialModulesLoaded_.addCallback(\n        goog.bind(this.loadModules_, this, ids));\n  } else {\n    if (this.loadingModuleIds_.length === 0) {\n      this.loadModules_(ids);\n    } else {\n      this.requestedModuleIdsQueue_.push(ids);\n      this.dispatchActiveIdleChangeIfNeeded_();\n    }\n  }\n};\n\n\n/**\n * Gets the amount of delay to wait before sending a request for more modules.\n * If a certain module request fails, we backoff a little bit and try again.\n * @return {number} Delay, in ms.\n * @private\n */\ngoog.module.ModuleManager.prototype.getBackOff_ = function() {\n  'use strict';\n  // 5 seconds after one error, 20 seconds after 2.\n  return Math.pow(this.consecutiveFailures_, 2) * 5000;\n};\n\n\n/**\n * Loads a list of modules and any of their not-yet-loaded prerequisites.\n * If batch mode is enabled, the prerequisites will be loaded together with the\n * requested modules and all requested modules will be loaded at the same time.\n *\n * The caller should verify that the requested modules are not already loaded\n * and that no modules are currently loading before calling this method.\n *\n * @param {!Array<string>} ids The ids of the modules to load.\n * @param {boolean=} opt_isRetry If the load is a retry of a previous load\n *     attempt.\n * @param {boolean=} opt_forceReload Whether to bypass cache while loading the\n *     module.\n * @private\n */\ngoog.module.ModuleManager.prototype.loadModules_ = function(\n    ids, opt_isRetry, opt_forceReload) {\n  'use strict';\n  if (!opt_isRetry) {\n    this.consecutiveFailures_ = 0;\n  }\n\n  // Not all modules may be loaded immediately if batch mode is not enabled.\n  var idsToLoadImmediately = this.processModulesForLoad_(ids);\n\n  goog.log.fine(this.logger_, 'Loading module(s): ' + idsToLoadImmediately);\n\n  if (this.concurrentLoadingEnabled_) {\n    goog.array.extend(this.loadingModuleIds_, idsToLoadImmediately);\n  } else {\n    this.loadingModuleIds_ = idsToLoadImmediately;\n  }\n\n  if (this.batchModeEnabled_) {\n    this.requestedLoadingModuleIds_ = ids;\n  } else {\n    // If batch mode is disabled, we treat each dependency load as a separate\n    // load.\n    this.requestedLoadingModuleIds_ = goog.array.clone(idsToLoadImmediately);\n  }\n\n  // Dispatch an active/idle change if needed.\n  this.dispatchActiveIdleChangeIfNeeded_();\n\n  if (idsToLoadImmediately.length === 0) {\n    // All requested modules and deps have been either loaded already or have\n    // already been requested.\n    return;\n  }\n\n  this.requestedModuleIds_.push.apply(\n      this.requestedModuleIds_, idsToLoadImmediately);\n\n  var loadFn = goog.bind(\n      this.getLoader().loadModules, goog.asserts.assert(this.getLoader()),\n      goog.array.clone(idsToLoadImmediately),\n      goog.asserts.assert(this.moduleInfoMap), {\n        extraEdges: this.extraEdges_,\n        forceReload: !!opt_forceReload,\n        onError: goog.bind(\n            this.handleLoadError_, this, this.requestedLoadingModuleIds_,\n            idsToLoadImmediately),\n        onTimeout: goog.bind(this.handleLoadTimeout_, this),\n      });\n\n  var delay = this.getBackOff_();\n  if (delay) {\n    // Call setTimeout on global object so that it can be called from within\n    // webworkers.\n    goog.global.setTimeout(loadFn, delay);\n  } else {\n    loadFn();\n  }\n};\n\n\n/**\n * Processes a list of module ids for loading. Checks if any of the modules are\n * already loaded and then gets transitive deps. Queues any necessary modules\n * if batch mode is not enabled. Returns the list of ids that should be loaded.\n *\n * @param {!Array<string>} ids The ids that need to be loaded.\n * @return {!Array<string>} The ids to load, including dependencies.\n * @throws {!Error} If the module is already loaded.\n * @private\n */\ngoog.module.ModuleManager.prototype.processModulesForLoad_ = function(ids) {\n  'use strict';\n  ids = ids.filter(id => {\n    let moduleInfo = this.moduleInfoMap[id];\n    if (moduleInfo.isLoaded()) {\n      goog.global.setTimeout(\n          () => new Error('Module already loaded: ' + id), 0);\n      return false;\n    }\n    return true;\n  });\n\n  // Build a list of the ids of this module and any of its not-yet-loaded\n  // prerequisite modules in dependency order.\n  var idsWithDeps = [];\n  for (var i = 0; i < ids.length; i++) {\n    idsWithDeps =\n        idsWithDeps.concat(this.getNotYetLoadedTransitiveDepIds_(ids[i]));\n  }\n  goog.array.removeDuplicates(idsWithDeps);\n\n  if (!this.batchModeEnabled_ && idsWithDeps.length > 1) {\n    var idToLoad = idsWithDeps.shift();\n    goog.log.fine(\n        this.logger_, 'Must load ' + idToLoad + ' module before ' + ids);\n\n    // Insert the requested module id and any other not-yet-loaded prereqs\n    // that it has at the front of the queue.\n    var queuedModules = idsWithDeps.map(function(id) {\n      'use strict';\n      return [id];\n    });\n    this.requestedModuleIdsQueue_ =\n        queuedModules.concat(this.requestedModuleIdsQueue_);\n    return [idToLoad];\n  } else {\n    return idsWithDeps;\n  }\n};\n\n\n/**\n * Builds a list of the ids of the not-yet-loaded modules that a particular\n * module transitively depends on, including itself.\n *\n * @param {string} id The id of a not-yet-loaded module.\n * @return {!Array<string>} An array of module ids in dependency order that's\n *     guaranteed to end with the provided module id.\n * @private\n */\ngoog.module.ModuleManager.prototype.getNotYetLoadedTransitiveDepIds_ = function(\n    id) {\n  'use strict';\n  var requestedModuleSet = goog.object.createSet(this.requestedModuleIds_);\n  // NOTE(user): We want the earliest occurrence of a module, not the first\n  // dependency we find. Therefore we strip duplicates at the end rather than\n  // during.  See the tests for concrete examples.\n  var ids = [];\n  if (!requestedModuleSet[id]) {\n    ids.push(id);\n  }\n  var depIdLookupList = [id];\n  // BFS by iterating through dependencies and enqueuing their respective\n  // dependencies into the lookup list.\n  for (var i = 0; i < depIdLookupList.length; i++) {\n    var depIds = this.getModuleInfo(depIdLookupList[i]).getDependencies();\n    for (var j = depIds.length - 1; j >= 0; j--) {\n      var depId = depIds[j];\n      if (!this.getModuleInfo(depId).isLoaded() && !requestedModuleSet[depId]) {\n        ids.push(depId);\n        depIdLookupList.push(depId);\n      }\n    }\n  }\n\n  // Leaf dependencies should come before others. Please refer to test cases for\n  // exact order.\n  ids.reverse();\n  goog.array.removeDuplicates(ids);\n  return ids;\n};\n\n\n/**\n * If we are still loading the base module, consider the load complete.\n * @private\n */\ngoog.module.ModuleManager.prototype.maybeFinishBaseLoad_ = function() {\n  'use strict';\n  if (this.currentlyLoadingModule_ == this.baseModuleInfo_) {\n    this.currentlyLoadingModule_ = null;\n    var error =\n        this.baseModuleInfo_.onLoad(goog.bind(this.getModuleContext, this));\n    if (error) {\n      this.dispatchModuleLoadFailed_(\n          goog.loader.AbstractModuleManager.FailureType.INIT_ERROR);\n    }\n\n    this.dispatchActiveIdleChangeIfNeeded_();\n  }\n};\n\n\n/** @override */\ngoog.module.ModuleManager.prototype.setLoaded = function() {\n  'use strict';\n  if (!this.currentlyLoadingModule_) {\n    goog.log.error(\n        this.logger_, 'setLoaded called while no module is actively loading');\n    return;\n  }\n\n  var id = this.currentlyLoadingModule_.getId();\n\n  if (this.isDisposed()) {\n    goog.log.warning(\n        this.logger_, 'Module loaded after module manager was disposed: ' + id);\n    return;\n  }\n\n  goog.log.fine(this.logger_, 'Module loaded: ' + id);\n\n  var error =\n      this.moduleInfoMap[id].onLoad(goog.bind(this.getModuleContext, this));\n  if (error) {\n    this.dispatchModuleLoadFailed_(\n        goog.loader.AbstractModuleManager.FailureType.INIT_ERROR);\n  }\n\n  // Remove the module id from the user initiated set if it existed there.\n  goog.array.remove(this.userInitiatedLoadingModuleIds_, id);\n\n  // Remove the module id from the loading modules if it exists there.\n  goog.array.remove(this.loadingModuleIds_, id);\n\n  if (this.loadingModuleIds_.length === 0) {\n    // No more modules are currently being loaded (e.g. arriving later in the\n    // same HTTP response), so proceed to load the next module in the queue.\n    this.loadNextModules_();\n  }\n\n  if (this.lastInitialModuleId_ && id == this.lastInitialModuleId_) {\n    if (!this.initialModulesLoaded_.hasFired()) {\n      this.initialModulesLoaded_.callback();\n    }\n  }\n\n  // Dispatch an active/idle change if needed.\n  this.dispatchActiveIdleChangeIfNeeded_();\n\n  this.currentlyLoadingModule_ = null;\n};\n\n\n/** @override */\ngoog.module.ModuleManager.prototype.isModuleLoading = function(id) {\n  'use strict';\n  if (goog.array.contains(this.loadingModuleIds_, id)) {\n    return true;\n  }\n  for (var i = 0; i < this.requestedModuleIdsQueue_.length; i++) {\n    if (goog.array.contains(this.requestedModuleIdsQueue_[i], id)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/** @override */\ngoog.module.ModuleManager.prototype.execOnLoad = function(\n    moduleId, fn, opt_handler, opt_noLoad, opt_userInitiated,\n    opt_preferSynchronous) {\n  'use strict';\n  var moduleInfo = this.moduleInfoMap[moduleId];\n  var callbackWrapper;\n\n  if (moduleInfo.isLoaded()) {\n    goog.log.fine(this.logger_, moduleId + ' module already loaded');\n    // Call async so that code paths don't change between loaded and unloaded\n    // cases.\n    callbackWrapper = new goog.module.ModuleLoadCallback(fn, opt_handler);\n    if (opt_preferSynchronous) {\n      callbackWrapper.execute(this.getModuleContext());\n    } else {\n      // Call setTimeout on global object so that it can be called from within\n      // webworkers.\n      goog.global.setTimeout(\n          goog.bind(callbackWrapper.execute, callbackWrapper), 0);\n    }\n  } else if (this.isModuleLoading(moduleId)) {\n    goog.log.fine(this.logger_, moduleId + ' module already loading');\n    callbackWrapper = moduleInfo.registerCallback(fn, opt_handler);\n    if (opt_userInitiated) {\n      goog.log.fine(\n          this.logger_, 'User initiated module already loading: ' + moduleId);\n      this.addUserInitiatedLoadingModule_(moduleId);\n      this.dispatchActiveIdleChangeIfNeeded_();\n    }\n  } else {\n    goog.log.fine(this.logger_, 'Registering callback for module: ' + moduleId);\n    callbackWrapper = moduleInfo.registerCallback(fn, opt_handler);\n    if (!opt_noLoad) {\n      if (opt_userInitiated) {\n        goog.log.fine(this.logger_, 'User initiated module load: ' + moduleId);\n        this.addUserInitiatedLoadingModule_(moduleId);\n      }\n      goog.log.fine(this.logger_, 'Initiating module load: ' + moduleId);\n      this.loadModulesOrEnqueue_([moduleId]);\n    }\n  }\n  return callbackWrapper;\n};\n\n\n/** @override */\ngoog.module.ModuleManager.prototype.load = function(\n    moduleId, opt_userInitiated) {\n  'use strict';\n  return this.loadModulesOrEnqueueIfNotLoadedOrLoading_(\n      [moduleId], opt_userInitiated)[moduleId];\n};\n\n\n/** @override */\ngoog.module.ModuleManager.prototype.loadMultiple = function(\n    moduleIds, opt_userInitiated) {\n  'use strict';\n  return this.loadModulesOrEnqueueIfNotLoadedOrLoading_(\n      moduleIds, opt_userInitiated);\n};\n\n\n/**\n * Ensures that the module with the given id is listed as a user-initiated\n * module that is being loaded. This method guarantees that a module will never\n * get listed more than once.\n * @param {string} id Identifier of the module.\n * @private\n */\ngoog.module.ModuleManager.prototype.addUserInitiatedLoadingModule_ = function(\n    id) {\n  'use strict';\n  if (!goog.array.contains(this.userInitiatedLoadingModuleIds_, id)) {\n    this.userInitiatedLoadingModuleIds_.push(id);\n  }\n};\n\n\n/** @override */\ngoog.module.ModuleManager.prototype.beforeLoadModuleCode = function(id) {\n  'use strict';\n  // TODO(user): Use ?. here when it works in closure.\n  if (this.currentlyLoadingModule_ &&\n      this.currentlyLoadingModule_.getId() === SYNTHETIC_MODULE_OVERHEAD_ID) {\n    this.setLoaded();\n    delete this.moduleInfoMap[SYNTHETIC_MODULE_OVERHEAD_ID];\n  } else if (this.currentlyLoadingModule_) {\n    goog.log.error(\n        this.logger_,\n        'beforeLoadModuleCode called with module \"' + id + '\" while module \"' +\n            this.currentlyLoadingModule_.getId() + '\" is loading');\n  }\n\n  // There's a chance that a synthetic module omitted a call to setLoaded().\n  // If we started loading `id`, that means we can assume all of its deps are\n  // loaded.\n  if (this.moduleInfoMap[id]) {\n    this.visitDependencies_(\n        this.moduleInfoMap[id].getDependencies() || [],\n        /* visitFn= */ (moduleInfo) => moduleInfo.setLoaded(),\n        /* visitConditionFn= */ (moduleInfo) => !moduleInfo.isLoaded());\n  }\n\n  this.currentlyLoadingModule_ = this.getModuleInfo(id);\n};\n\n\n/** @override */\ngoog.module.ModuleManager.prototype.registerInitializationCallback = function(\n    fn, opt_handler) {\n  'use strict';\n  if (!this.currentlyLoadingModule_) {\n    this.moduleInfoMap[SYNTHETIC_MODULE_OVERHEAD_ID] =\n        new goog.module.ModuleInfo([], SYNTHETIC_MODULE_OVERHEAD_ID);\n    this.currentlyLoadingModule_ =\n        this.moduleInfoMap[SYNTHETIC_MODULE_OVERHEAD_ID];\n    goog.log.fine(\n        this.logger_,\n        'registerInitializationCallback called in synthetic module');\n  }\n  this.currentlyLoadingModule_.registerEarlyCallback(fn, opt_handler);\n};\n\n\n/** @override */\ngoog.module.ModuleManager.prototype.registerLateInitializationCallback =\n    function(fn, opt_handler) {\n  'use strict';\n  if (!this.currentlyLoadingModule_) {\n    this.moduleInfoMap[SYNTHETIC_MODULE_OVERHEAD_ID] =\n        new goog.module.ModuleInfo([], SYNTHETIC_MODULE_OVERHEAD_ID);\n    this.currentlyLoadingModule_ =\n        this.moduleInfoMap[SYNTHETIC_MODULE_OVERHEAD_ID];\n    goog.log.fine(\n        this.logger_,\n        'registerInitializationCallback called in synthetic module');\n  }\n  this.currentlyLoadingModule_.registerCallback(fn, opt_handler);\n};\n\n\n/** @override */\ngoog.module.ModuleManager.prototype.setModuleConstructor = function(fn) {\n  'use strict';\n  if (!this.currentlyLoadingModule_) {\n    goog.log.error(this.logger_, 'No module is currently loading');\n    return;\n  }\n  this.currentlyLoadingModule_.setModuleConstructor(fn);\n};\n\n\n/**\n * Handles a module load failure.\n *\n * @param {!Array<string>} requestedLoadingModuleIds Modules ids that were\n *     requested in failed request. Does not included calculated dependencies.\n * @param {!Array<string>} requestedModuleIdsWithDeps All module ids requested\n *     in the failed request including all dependencies.\n * @param {?number} status The error status.\n * @private\n */\ngoog.module.ModuleManager.prototype.handleLoadError_ = function(\n    requestedLoadingModuleIds, requestedModuleIdsWithDeps, status) {\n  'use strict';\n  this.consecutiveFailures_++;\n  // Module manager was not designed to be reentrant. Reinstate the instance\n  // var with actual value when request failed (Other requests may have\n  // started already.)\n  this.requestedLoadingModuleIds_ = requestedLoadingModuleIds;\n  // Pretend we never requested the failed modules.\n  requestedModuleIdsWithDeps.forEach(\n      goog.partial(goog.array.remove, this.requestedModuleIds_), this);\n\n  if (status == 401) {\n    // The user is not logged in. They've cleared their cookies or logged out\n    // from another window.\n    goog.log.info(this.logger_, 'Module loading unauthorized');\n    this.dispatchModuleLoadFailed_(\n        goog.loader.AbstractModuleManager.FailureType.UNAUTHORIZED);\n    // Drop any additional module requests.\n    this.requestedModuleIdsQueue_.length = 0;\n  } else if (status == 410) {\n    // The requested module js is old and not available.\n    this.requeueBatchOrDispatchFailure_(\n        goog.loader.AbstractModuleManager.FailureType.OLD_CODE_GONE);\n    this.loadNextModules_();\n  } else if (this.consecutiveFailures_ >= 3) {\n    goog.log.info(\n        this.logger_,\n        'Aborting after failure to load: ' + this.loadingModuleIds_);\n    this.requeueBatchOrDispatchFailure_(\n        goog.loader.AbstractModuleManager.FailureType.CONSECUTIVE_FAILURES);\n    this.loadNextModules_();\n  } else {\n    goog.log.info(\n        this.logger_,\n        'Retrying after failure to load: ' + this.loadingModuleIds_);\n    var forceReload = status ==\n        goog.loader.AbstractModuleManager.CORRUPT_RESPONSE_STATUS_CODE;\n    this.loadModules_(this.requestedLoadingModuleIds_, true, forceReload);\n  }\n};\n\n\n/**\n * Handles a module load timeout.\n * @private\n */\ngoog.module.ModuleManager.prototype.handleLoadTimeout_ = function() {\n  'use strict';\n  goog.log.info(\n      this.logger_, 'Aborting after timeout: ' + this.loadingModuleIds_);\n  this.requeueBatchOrDispatchFailure_(\n      goog.loader.AbstractModuleManager.FailureType.TIMEOUT);\n  this.loadNextModules_();\n};\n\n\n/**\n * Requeues batch loads that had more than one requested module\n * (i.e. modules that were not included as dependencies) as separate loads or\n * if there was only one requested module, fails that module with the received\n * cause.\n * @param {!goog.loader.AbstractModuleManager.FailureType} cause The reason for\n *     the failure.\n * @private\n */\ngoog.module.ModuleManager.prototype.requeueBatchOrDispatchFailure_ = function(\n    cause) {\n  'use strict';\n  // The load failed, so if there are more than one requested modules, then we\n  // need to retry each one as a separate load. Otherwise, if there is only one\n  // requested module, remove it and its dependencies from the queue.\n  if (this.requestedLoadingModuleIds_.length > 1) {\n    var queuedModules = this.requestedLoadingModuleIds_.map(function(id) {\n      'use strict';\n      return [id];\n    });\n    this.requestedModuleIdsQueue_ =\n        queuedModules.concat(this.requestedModuleIdsQueue_);\n  } else {\n    this.dispatchModuleLoadFailed_(cause);\n  }\n};\n\n\n/**\n * Handles when a module load failed.\n * @param {!goog.loader.AbstractModuleManager.FailureType} cause The reason for\n *     the failure.\n * @private\n */\ngoog.module.ModuleManager.prototype.dispatchModuleLoadFailed_ = function(\n    cause) {\n  'use strict';\n  var failedIds = this.requestedLoadingModuleIds_;\n  this.loadingModuleIds_.length = 0;\n  // If any pending modules depend on the id that failed,\n  // they need to be removed from the queue.\n  var idsToCancel = [];\n  for (var i = 0; i < this.requestedModuleIdsQueue_.length; i++) {\n    var dependentModules = this.requestedModuleIdsQueue_[i].filter(\n        /**\n         * Returns true if the requestedId has dependencies on the modules that\n         * just failed to load.\n         * @param {string} requestedId The module to check for dependencies.\n         * @return {boolean} True if the module depends on failed modules.\n         */\n        function(requestedId) {\n          'use strict';\n          var requestedDeps =\n              this.getNotYetLoadedTransitiveDepIds_(requestedId);\n          return goog.array.some(failedIds, function(id) {\n            'use strict';\n            return goog.array.contains(requestedDeps, id);\n          });\n        },\n        this);\n    goog.array.extend(idsToCancel, dependentModules);\n  }\n\n  // Also insert the ids that failed to load as ids to cancel.\n  for (var i = 0; i < failedIds.length; i++) {\n    goog.array.insert(idsToCancel, failedIds[i]);\n  }\n\n  // Remove ids to cancel from the queues.\n  for (var i = 0; i < idsToCancel.length; i++) {\n    for (var j = 0; j < this.requestedModuleIdsQueue_.length; j++) {\n      goog.array.remove(this.requestedModuleIdsQueue_[j], idsToCancel[i]);\n    }\n    goog.array.remove(this.userInitiatedLoadingModuleIds_, idsToCancel[i]);\n  }\n\n  // Call the functions for error notification.\n  var errorCallbacks =\n      this.callbackMap_[goog.loader.AbstractModuleManager.CallbackType.ERROR];\n  if (errorCallbacks) {\n    for (var i = 0; i < errorCallbacks.length; i++) {\n      var callback = errorCallbacks[i];\n      for (var j = 0; j < idsToCancel.length; j++) {\n        callback(\n            goog.loader.AbstractModuleManager.CallbackType.ERROR,\n            idsToCancel[j], cause);\n      }\n    }\n  }\n\n  // Call the errbacks on the module info.\n  for (var i = 0; i < failedIds.length; i++) {\n    if (this.moduleInfoMap[failedIds[i]]) {\n      this.moduleInfoMap[failedIds[i]].onError(cause);\n    }\n  }\n\n  // Clear the requested loading module ids.\n  this.requestedLoadingModuleIds_.length = 0;\n\n  this.dispatchActiveIdleChangeIfNeeded_();\n};\n\n\n/**\n * Loads the next modules on the queue.\n * @private\n */\ngoog.module.ModuleManager.prototype.loadNextModules_ = function() {\n  'use strict';\n  while (this.requestedModuleIdsQueue_.length) {\n    // Remove modules that are already loaded.\n    var nextIds = this.requestedModuleIdsQueue_.shift().filter(function(id) {\n      'use strict';\n      return !this.getModuleInfo(id).isLoaded();\n    }, this);\n    if (nextIds.length > 0) {\n      this.loadModules_(nextIds);\n      return;\n    }\n  }\n\n  // Dispatch an active/idle change if needed.\n  this.dispatchActiveIdleChangeIfNeeded_();\n};\n\n\n/** @override */\ngoog.module.ModuleManager.prototype.registerCallback = function(types, fn) {\n  'use strict';\n  if (!Array.isArray(types)) {\n    types = [types];\n  }\n\n  for (var i = 0; i < types.length; i++) {\n    this.registerCallback_(types[i], fn);\n  }\n};\n\n\n/**\n * Register a callback for the specified callback type.\n * @param {!goog.loader.AbstractModuleManager.CallbackType} type The callback\n *     type.\n * @param {!Function} fn The callback function.\n * @private\n */\ngoog.module.ModuleManager.prototype.registerCallback_ = function(type, fn) {\n  'use strict';\n  var callbackMap = this.callbackMap_;\n  if (!callbackMap[type]) {\n    callbackMap[type] = [];\n  }\n  callbackMap[type].push(fn);\n};\n\n\n/**\n * Call the callback functions of the specified type.\n * @param {!goog.loader.AbstractModuleManager.CallbackType} type The callback\n *     type.\n * @private\n */\ngoog.module.ModuleManager.prototype.executeCallbacks_ = function(type) {\n  'use strict';\n  var callbacks = this.callbackMap_[type];\n  for (var i = 0; callbacks && i < callbacks.length; i++) {\n    callbacks[i](type);\n  }\n};\n\n/**\n * Recursively visits the provided modules and their transitive deps using\n * post order DFS while avoiding cycles.\n *\n * @param {!Array<string>} ids\n * @param {function(!goog.module.ModuleInfo):void} visitorFn\n * @param {function(!goog.module.ModuleInfo):boolean=} visitConditionFn Defaults\n *     to visiting all nodes.\n * @param {!Object<boolean>=} visited Defaults to empty state. Can be set to\n *     avoid certain modules.\n * @private\n */\ngoog.module.ModuleManager.prototype.visitDependencies_ = function(\n    ids, visitorFn, visitConditionFn = () => true, visited = {}) {\n  for (const id of ids) {\n    const moduleInfo = this.getModuleInfo(id);\n    if (visited[id] || !visitConditionFn(moduleInfo)) {\n      continue;\n    }\n    visited[id] = true;\n    this.visitDependencies_(\n        moduleInfo.getDependencies() || [], visitorFn, visitConditionFn,\n        visited);\n    visitorFn(moduleInfo);\n  }\n};\n\n/** @override */\ngoog.module.ModuleManager.prototype.dispose = function() {\n  'use strict';\n  // Dispose of each ModuleInfo object.\n  goog.disposeAll(\n      goog.object.getValues(this.moduleInfoMap), this.baseModuleInfo_);\n  this.moduleInfoMap = {};\n  this.loadingModuleIds_ = [];\n  this.requestedLoadingModuleIds_ = [];\n  this.userInitiatedLoadingModuleIds_ = [];\n  this.requestedModuleIdsQueue_ = [];\n  this.callbackMap_ = {};\n  this.isDisposed_ = true;\n};\n\n/** @override */\ngoog.module.ModuleManager.prototype.isDisposed = function() {\n  'use strict';\n  return this.isDisposed_;\n};\n\ngoog.loader.activeModuleManager.setDefault(function() {\n  'use strict';\n  return new goog.module.ModuleManager();\n});\n});  // goog.scope"],
"names":["goog","provide","require","requireType","scope","SYNTHETIC_MODULE_OVERHEAD_ID","module","ModuleManager","goog.module.ModuleManager","base","moduleInfoMap","loadingModuleIds_","requestedLoadingModuleIds_","requestedModuleIds_","requestedModuleIdsQueue_","userInitiatedLoadingModuleIds_","extraEdges_","callbackMap_","baseModuleInfo_","ModuleInfo","currentlyLoadingModule_","lastInitialModuleId_","initialModulesLoaded_","async","Deferred","logger_","log","getLogger","batchModeEnabled_","concurrentLoadingEnabled_","consecutiveFailures_","lastActive_","userLastActive_","isDisposed_","inherits","loader","AbstractModuleManager","ModuleFailureError","goog.module.ModuleManager.ModuleFailureError","moduleID","failureType","msg","ModuleLoadFailureType","getReadableError","debug","Error","CallbackType","FailureType","CORRUPT_RESPONSE_STATUS_CODE","getInstance","goog.module.ModuleManager.getInstance","activeModuleManager","get","prototype","setBatchModeEnabled","goog.module.ModuleManager.prototype.setBatchModeEnabled","enabled","setConcurrentLoadingEnabled","goog.module.ModuleManager.prototype.setConcurrentLoadingEnabled","setAllModuleInfo","goog.module.ModuleManager.prototype.setAllModuleInfo","infoMap","id","addOrUpdateModuleInfo_","hasFired","callback","maybeFinishBaseLoad_","setAllModuleInfoString","goog.module.ModuleManager.prototype.setAllModuleInfoString","opt_info","opt_loadingModuleIds","modules","split","moduleIds","i","length","parts","deps","j","index","parseInt","asserts","assert","push","array","extend","peek","SUBTRACTIVE_MODULE_LOADING","define","getModuleInfo","goog.module.ModuleManager.prototype.getModuleInfo","addExtraEdge","goog.module.ModuleManager.prototype.addExtraEdge","fromModule","toModule","getLoader","supportsExtraEdges","removeExtraEdge","goog.module.ModuleManager.prototype.removeExtraEdge","setModuleTrustedUris","goog.module.ModuleManager.prototype.setModuleTrustedUris","moduleUriMap","setTrustedUris","setModuleContext","goog.module.ModuleManager.prototype.setModuleContext","context","isActive","goog.module.ModuleManager.prototype.isActive","isUserActive","goog.module.ModuleManager.prototype.isUserActive","dispatchActiveIdleChangeIfNeeded_","goog.module.ModuleManager.prototype.dispatchActiveIdleChangeIfNeeded_","lastActive","active","executeCallbacks_","ACTIVE","IDLE","userLastActive","userActive","USER_ACTIVE","USER_IDLE","preloadModule","goog.module.ModuleManager.prototype.preloadModule","opt_timeout","d","global","setTimeout","bind","addLoadModule_","prefetchModule","goog.module.ModuleManager.prototype.prefetchModule","moduleInfo","isLoaded","isModuleLoading","idWithDeps","getNotYetLoadedTransitiveDepIds_","goog.module.ModuleManager.prototype.addLoadModule_","getModuleContext","registerModuleLoadCallbacks_","loadModulesOrEnqueue_","goog.module.ModuleManager.prototype.addOrUpdateModuleInfo_","moduleDeps","getDependencies","splice","loadModulesOrEnqueueIfNotLoadedOrLoading_","goog.module.ModuleManager.prototype.loadModulesOrEnqueueIfNotLoadedOrLoading_","ids","opt_userInitiated","uniqueIds","removeDuplicates","idsToLoad","deferredMap","goog.module.ModuleManager.prototype.registerModuleLoadCallbacks_","userInitiated","registerCallback","registerErrback","err","errback","fine","addUserInitiatedLoadingModule_","goog.module.ModuleManager.prototype.loadModulesOrEnqueue_","addCallback","loadModules_","getBackOff_","goog.module.ModuleManager.prototype.getBackOff_","Math","pow","goog.module.ModuleManager.prototype.loadModules_","opt_isRetry","opt_forceReload","idsToLoadImmediately","processModulesForLoad_","clone","apply","loadFn","loadModules","extraEdges","forceReload","onError","handleLoadError_","onTimeout","handleLoadTimeout_","delay","goog.module.ModuleManager.prototype.processModulesForLoad_","filter","idsWithDeps","concat","idToLoad","shift","queuedModules","map","goog.module.ModuleManager.prototype.getNotYetLoadedTransitiveDepIds_","requestedModuleSet","object","createSet","depIdLookupList","depIds","depId","reverse","goog.module.ModuleManager.prototype.maybeFinishBaseLoad_","error","onLoad","dispatchModuleLoadFailed_","INIT_ERROR","setLoaded","goog.module.ModuleManager.prototype.setLoaded","getId","isDisposed","warning","remove","loadNextModules_","goog.module.ModuleManager.prototype.isModuleLoading","contains","execOnLoad","goog.module.ModuleManager.prototype.execOnLoad","moduleId","fn","opt_handler","opt_noLoad","opt_preferSynchronous","callbackWrapper","ModuleLoadCallback","execute","load","goog.module.ModuleManager.prototype.load","loadMultiple","goog.module.ModuleManager.prototype.loadMultiple","goog.module.ModuleManager.prototype.addUserInitiatedLoadingModule_","beforeLoadModuleCode","goog.module.ModuleManager.prototype.beforeLoadModuleCode","visitDependencies_","registerInitializationCallback","goog.module.ModuleManager.prototype.registerInitializationCallback","registerEarlyCallback","registerLateInitializationCallback","goog.module.ModuleManager.prototype.registerLateInitializationCallback","setModuleConstructor","goog.module.ModuleManager.prototype.setModuleConstructor","goog.module.ModuleManager.prototype.handleLoadError_","requestedLoadingModuleIds","requestedModuleIdsWithDeps","status","forEach","partial","info","UNAUTHORIZED","requeueBatchOrDispatchFailure_","OLD_CODE_GONE","CONSECUTIVE_FAILURES","goog.module.ModuleManager.prototype.handleLoadTimeout_","TIMEOUT","goog.module.ModuleManager.prototype.requeueBatchOrDispatchFailure_","cause","goog.module.ModuleManager.prototype.dispatchModuleLoadFailed_","failedIds","idsToCancel","dependentModules","requestedId","requestedDeps","some","insert","errorCallbacks","ERROR","goog.module.ModuleManager.prototype.loadNextModules_","nextIds","goog.module.ModuleManager.prototype.registerCallback","types","Array","isArray","registerCallback_","goog.module.ModuleManager.prototype.registerCallback_","type","callbackMap","goog.module.ModuleManager.prototype.executeCallbacks_","callbacks","goog.module.ModuleManager.prototype.visitDependencies_","visitorFn","visitConditionFn","visited","dispose","goog.module.ModuleManager.prototype.dispose","disposeAll","getValues","goog.module.ModuleManager.prototype.isDisposed","setDefault"]
}
