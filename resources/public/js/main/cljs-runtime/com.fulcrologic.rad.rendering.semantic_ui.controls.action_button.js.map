{"version":3,"sources":["com/fulcrologic/rad/rendering/semantic_ui/controls/action_button.cljc"],"mappings":";AAYA,AAAA,AAAA;AAAA,IAAAA,+BAAA,2CAAA,uFAC0B,WAAKiB,EAAEA,MAAEA;AAAT,AAAA;GAD1B,0DAAA,+FAAqBA;AAArB,AAAA,OAAAhB,mDAAA,FAAqBgB;AAArB,AAAA,IAAAf,aAAA,CAAAC,wEAAAA,2EAAAA,LAAqBc,uDAAAA;IAArBf,iBAAA,AAAAE,4BAAAF;eAAA,AAAAG,4CAAAH,eAAA,tEAA+BgB;kBAA/B,AAAAb,4CAAAH,eAAA,zEAAwCiB;AAAxC,AAEE,IAAME,WAAS,AAACC,6EAA2BJ;IACrCK,SAAS,AAACC,mGAA0BN,2DAASO;IAC7CC,QAAS,CAACvB,wEAAAA,kFAAAA,ZAAWe,8DAAAA;IAF3BE,aAGiF,AAACf,4CAAIgB,SAASF;IAH/FC,iBAAA,AAAAhB,4BAAAgB;cAAAA,VAGwEc;YAHxE,AAAA7B,4CAAAe,eAAA,nEAGcO;WAHd,AAAAtB,4CAAAe,eAAA,lEAGoBQ;aAHpB,AAAAvB,4CAAAe,eAAA,pEAGyBS;gBAHzB,AAAAxB,4CAAAe,eAAA,vEAG+BU;aAH/B,AAAAzB,4CAAAe,eAAA,pEAGyCW;sBAHzC,AAAA1B,4CAAAe,eAAA,7EAGgDY;qBAHhD,AAAA3B,4CAAAe,eAAA,5EAG0Da;AAH1D,AAIE,oBAAMC;AAAN,AACE,IAAMP,YAAU,AAACQ,oFAAGR,wDAAMT;IACpBW,aAAU,AAACM,oFAAGN,yDAAMX;IACpBkB,iBAAU,AAACC,iDAAY,qDAAA,rDAACC,+CAAOZ,yFAAOa,+CAAgB,CAACC,4EAAAA,sFAAAA,ZAAetB,kEAAAA;IACtEc,sBAAU,iBAAAS,mBAAIL;AAAJ,AAAA,GAAAK;AAAAA;;AAAa,OAACN,oFAAGH,kEAAUd;;;IACrCe,qBAAU,iBAAAQ,mBAAI,mBAAA,lBAAMR;AAAV,AAAA,GAAAQ;AAAAA;;AAAoB,OAACN,oFAAGF,iEAASf;;;IAC3CwB,UAAU;AAAA,AAAO,oBAAMX;AAAN,AAAa,QAACA,uCAAAA,6DAAAA,xBAAOb,yCAAAA,hCAASC,yCAAAA;;AAA9B;;;AALvB,AAME,oBAAMc;AAAN,AACE,IAAAQ,mBACE,AAACN,oFAAGZ,yDAAOL,SAAS,+GAAA,2CAAA,gEAAA,iEAAA,mEAAA,oEAAA,oFAAA,tfAACyB,uGAAMT,uGACOf,mEACAQ,kEACAE,uEACAa,wEACAV,iFACAI;AAPpC,AAAA,oBAAAK;AAAAA;;AAQE,OAAAG,8EAAA,SAAA,mFACE,iBAAAC,WAAA,2CAAA,6GAAA,zDAAoB,4CAAK1B,6EACL,iBAAAsB,uBAAIZ;AAAJ,AAAA,oBAAAY;AAAAA;;AAAA;;KADpB,sGAAA,xCAEoB,AAACK,mBAAQd,iFACTU;AAHpB,AAAA,oBAIEZ;AAAU,qDAAAe,SAAA,vDAACE,8GAAajB;;AAJ1Be;;mcADF,9bAME,wBAAA,2WAAA,jXAAMjB,MAAK,AAAAgB,8EAAA,IAAA,mFAAA,2CAAA,qJAAA,rFAAmB,mDAAA,NAAKhB,oDACnC,6BAAA,UAAA,rBAAMD,WAAMA;;;AAhBlB;;;AAPJ;;;;AANJ,AAAA,GAAA,QAAArB,gCAAAC,4CAAAC,gDAAAC,0DAAAC,sEAAAC,+EAAAC,6FAAAC;AAAA;AAAA,AAAA;;;gFAAA,AAAAC,oDAAA,AAAAT,4CAAAL,6BAAA,7MAAOgB;;;AAAP,AAAAD,0IAAA,mMAAAf,jRAAOgB;AA+BP,AAAKgC,kFAAe,sJAAA,2CAAA,sDAAA,vPAACC,wEAAajC","names":["options__50845__auto__","com.fulcrologic.fulcro.components/wrapped-render","map__93193","com.fulcrologic.fulcro.components/props","cljs.core/--destructure-map","cljs.core.get","js/com","js/com.fulcrologic","js/com.fulcrologic.rad","js/com.fulcrologic.rad.rendering","js/com.fulcrologic.rad.rendering.semantic-ui","js/com.fulcrologic.rad.rendering.semantic-ui.controls","js/com.fulcrologic.rad.rendering.semantic-ui.controls.action-button","js/com.fulcrologic.rad.rendering.semantic-ui.controls.action-button.ActionButton","com.fulcrologic.fulcro.components/react-constructor","com.fulcrologic.fulcro.components/configure-component!","com.fulcrologic.rad.rendering.semantic-ui.controls.action-button/ActionButton","_","instance","control-key","map__93194","controls","com.fulcrologic.rad.control.component_controls","render","com.fulcrologic.rad.semantic_ui_options.get_rendering_options","com.fulcrologic.rad.semantic-ui-options/action-button-render","props","label","icon","class","htmlStyle","action","disabled?","visible?","control","com.fulcrologic.rad.options_util._QMARK__BANG_","loading?","com.fulcrologic.fulcro.data-fetch/loading?","cljs.core.get_in","com.fulcrologic.fulcro.data-fetch/marker-table","com.fulcrologic.fulcro.components/get-ident","or__5045__auto__","onClick","cljs.core.merge","com.fulcrologic.fulcro.dom.macro_create_element","G__93195","cljs.core/boolean","cljs.core.assoc","com.fulcrologic.rad.rendering.semantic-ui.controls.action-button/render-control","com.fulcrologic.fulcro.components.factory"],"sourcesContent":["(ns com.fulcrologic.rad.rendering.semantic-ui.controls.action-button\n  (:require\n    [taoensso.timbre :as log]\n    [com.fulcrologic.rad.report :as report]\n    [com.fulcrologic.rad.options-util :refer [?!]]\n    [com.fulcrologic.rad.semantic-ui-options :as suo]\n    [com.fulcrologic.fulcro.data-fetch :as df]\n    [com.fulcrologic.rad.control :as control]\n    #?(:cljs [com.fulcrologic.fulcro.dom :as dom]\n       :clj  [com.fulcrologic.fulcro.dom-server :as dom])\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]))\n\n(defsc ActionButton [_ {:keys [instance control-key]}]\n  {:shouldComponentUpdate (fn [_ _ _] true)}\n  (let [controls (control/component-controls instance)\n        render   (suo/get-rendering-options instance suo/action-button-render)\n        props    (comp/props instance)\n        {:keys [label icon class htmlStyle action disabled? visible?] :as control} (get controls control-key)]\n    (when control\n      (let [label     (?! label instance)\n            class     (?! class instance)\n            loading?  (df/loading? (get-in props [df/marker-table (comp/get-ident instance)]))\n            disabled? (or loading? (?! disabled? instance))\n            visible?  (or (nil? visible?) (?! visible? instance))\n            onClick   (fn [] (when action (action instance control-key)))]\n        (when visible?\n          (or\n            (?! render instance (merge control\n                                  {:key       control-key\n                                   :label     label\n                                   :class     class\n                                   :onClick   onClick\n                                   :disabled? disabled?\n                                   :loading?  loading?}))\n            (dom/button\n              (cond-> {:key       (str control-key)\n                       :className (or class \"ui tiny primary button\")\n                       :disabled  (boolean disabled?)\n                       :onClick   onClick}\n                htmlStyle (assoc :style htmlStyle))\n              (when icon (dom/i {:className (str icon \" icon\")}))\n              (when label label))))))))\n\n(def render-control (comp/factory ActionButton {:keyfn :control-key}))\n"]}