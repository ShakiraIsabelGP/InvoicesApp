{"version":3,"sources":["com/fulcrologic/rad/rendering/semantic_ui/currency_field.cljc"],"mappings":";AAQA,AAAKA,6EACH,AAACC,wEAAa,sDAAA,oLAAA,2CAAA,rRAACC,6VACiB,WAAKC;AAAL,AACE,OAACC,gGAA2BD;GAFhD,uEAGkB,WAAKE;AAAL,AACE,OAACC,iDAAa,yBAAA,OAAA,hCAACC,uBAAYF;GAJ/C,sEAKkB,WAAKA;AAAL,AAAQA;;AAE1C,AAAKG,wEAAa,mGAAA,nGAACC,sIAAwBT","names":["com.fulcrologic.rad.rendering.semantic-ui.currency-field/ui-currency-input","com.fulcrologic.fulcro.components.factory","com.fulcrologic.fulcro.dom.inputs/StringBufferedInput","n","com.fulcrologic.rad.type_support.decimal.numeric__GT_currency_str","s","com.fulcrologic.rad.type-support.decimal/numeric","clojure.string/replace","com.fulcrologic.rad.rendering.semantic-ui.currency-field/render-field","com.fulcrologic.rad.rendering.semantic_ui.field.render_field_factory"],"sourcesContent":["(ns com.fulcrologic.rad.rendering.semantic-ui.currency-field\n  (:require\n    [com.fulcrologic.fulcro.components :as comp]\n    [com.fulcrologic.fulcro.dom.inputs :as inputs]\n    [clojure.string :as str]\n    [com.fulcrologic.rad.rendering.semantic-ui.field :refer [render-field-factory]]\n    [com.fulcrologic.rad.type-support.decimal :as math]))\n\n(def ui-currency-input\n  (comp/factory (inputs/StringBufferedInput ::DecimalInput\n                  {:model->string (fn [n]\n                                    (math/numeric->currency-str n))\n                   :string->model (fn [s]\n                                    (math/numeric (str/replace s #\"[$,]\" \"\")))\n                   :string-filter (fn [s] s)})))\n\n(def render-field (render-field-factory {} ui-currency-input))\n"]}