{"version":3,"sources":["com/fulcrologic/rad/rendering/semantic_ui/form_options.cljc"],"mappings":";AAKA;;;;;6EAAA,7EAAKA;AAML;;;;;;2EAAA,3EAAKC;AAOL;;;;;;yEAAA,zEAAKC;AAOL;;;;wEAAA,xEAAKC;AAKL;;;;oEAAA,pEAAKC;AAKL;;;;;;;;qEAAA,rEAAKC;AASL;;;yEAAA,zEAAKC;AAIL;;;;uEAAA,vEAAKC;AAKL;;;;mEAAA,yFAAAC,5JAAMI,8IAGHC;AAHH,AAAA,IAAAJ,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;gBAAAA,ZAGkDM;oBAHlD,AAAAJ,4CAAAF,eAAA,3EAG+BK;AAH/B,AAIE,IAAAE,mBACE,CAACC,oFAAAA,wLAAAA,tGAAuBJ,oKAAAA,tJAAcP,oKAAAA,7FAAgBQ,oKAAAA;AADxD,AAAA,oBAAAE;AAAAA;;AAEE,OAACL,4CAAII,UAAUR","names":["com.fulcrologic.rad.rendering.semantic-ui.form-options/ref-container-class","com.fulcrologic.rad.rendering.semantic-ui.form-options/ref-element-class","com.fulcrologic.rad.rendering.semantic-ui.form-options/top-level-class","com.fulcrologic.rad.rendering.semantic-ui.form-options/controls-class","com.fulcrologic.rad.rendering.semantic-ui.form-options/form-class","com.fulcrologic.rad.rendering.semantic-ui.form-options/input-props","com.fulcrologic.rad.rendering.semantic-ui.form-options/element-classes","com.fulcrologic.rad.rendering.semantic-ui.form-options/element-class","p__91711","map__91712","cljs.core/--destructure-map","cljs.core.get","com.fulcrologic.rad.rendering.semantic-ui.form-options/top-class","form-instance","qualified-key","attribute","or__5045__auto__","com.fulcrologic.fulcro.components/component-options"],"sourcesContent":["(ns com.fulcrologic.rad.rendering.semantic-ui.form-options\n  (:require\n    [com.fulcrologic.rad.attributes :as attr]\n    [com.fulcrologic.fulcro.components :as comp]))\n\n(def ref-container-class\n  \"This option can be used in the fo/subforms entries to indicate what class(es) should be set on the element that wraps\n  the list of elements. Defaults to `ui segments` for to-many and nothing for to-one relations. Can also be a\n  `(fn [form-env] string?)`\"\n  :com.fulcrologic.rad.rendering.semantic-ui.form/ref-container-class)\n\n(def ref-element-class\n  \"This option can be used in a form's component options to indicate the class to set on the (generated) element itself\n  when used as a subform.\n\n  Can be a string or a `(fn [form-env] string?)`.  Defaults to `ui segment`.\"\n  :com.fulcrologic.rad.rendering.semantic-ui.form/ref-element-class)\n\n(def top-level-class\n  \"Used in a form's component-options. Specifies the class of the overall form container when it is the master (top-level) form.\n   Defaults to `ui container`. Can be a string or a `(fn [form-env] string?)`.\n\n  See also `ref-element-class`.\"\n  :com.fulcrologic.rad.rendering.semantic-ui.form/top-level-class)\n\n(def controls-class\n  \"Used in a form's component-options. Specifies the container class for the control section of the top-level form.\n   Defaults to `ui top attached segment`. Can be a string or a `(fn [form-env] string?)`.\"\n  :com.fulcrologic.rad.rendering.semantic-ui.form/controls-class)\n\n(def form-class\n  \"Used in a form's component-options. Specifies the container class for the form inputs. Defaults to `ui attached form`.\n   Can be a string or a `(fn [form-env] string?)`.\"\n  :com.fulcrologic.rad.rendering.semantic-ui.form/form-class)\n\n(def input-props\n  \"ALIAS of `fo/input-props`. This option can be placed on `fo/field-style-config(s)`.\n   The value can be a map, or a `(fn [form-env] map?)`.\n\n   Many, but not all, SUI input controls support this option.\n\n   See also `fo/input-props`.\"\n  :input/props)\n\n(def element-classes\n  \"A map from qualified key to class names. OVERRIDES the class name of the container on the form field.\"\n  :com.fulcrologic.rad.rendering.semantic-ui.form/element-classes)\n\n(def element-class\n  \"Attribute option. A string that defines a CSS class for the outer-most DOM element of a form\n   field that renders this attribute. OVERRIDES the class name of the container on the form field.\"\n  :com.fulcrologic.rad.rendering.semantic-ui.form/element-class)\n\n(defn top-class\n  \"Looks for the top-level form element class on the given attribute or form instance. See\n   `form-element-classes` and `form-element-class`.\"\n  [form-instance {::attr/keys [qualified-key] :as attribute}]\n  (or\n    (comp/component-options form-instance element-classes qualified-key)\n    (get attribute element-class)))\n"]}