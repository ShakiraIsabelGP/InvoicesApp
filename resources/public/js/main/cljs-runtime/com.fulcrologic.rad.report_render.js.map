{"version":3,"sources":["com/fulcrologic/rad/report_render.cljc"],"mappings":"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","names":["com.fulcrologic.rad.report-render/gen-dispatch","style-key","fallback-to-style?","this","report-options","k","com.fulcrologic.rad.attributes-options/qualified-key","com.fulcrologic.rad.report-options/row-pk","style","or__5045__auto__","com.fulcrologic.rad.options_util._QMARK__BANG_","and__5043__auto__","com.fulcrologic.rad.report-render-options/style","js/com","js/com.fulcrologic","js/com.fulcrologic.rad","js/com.fulcrologic.rad.report-render","js/com.fulcrologic.rad.report-render.render-report","method-table__5642__auto__","cljs.core.atom","prefer-table__5643__auto__","method-cache__5644__auto__","cached-hierarchy__5645__auto__","hierarchy__5646__auto__","cljs.core.get","fexpr__91868","cljs.core/MultiFn","cljs.core.symbol","com.fulcrologic.rad.report-render/render-report","com.fulcrologic.rad.form-render/render-hierarchy","js/com.fulcrologic.rad.report-render.render-body","fexpr__91869","com.fulcrologic.rad.report-render/render-body","com.fulcrologic.rad.report-render-options/body-style","js/com.fulcrologic.rad.report-render.render-row","fexpr__91870","com.fulcrologic.rad.report-render/render-row","row-props","com.fulcrologic.rad.report-render-options/row-style","js/com.fulcrologic.rad.report-render.render-controls","fexpr__91871","com.fulcrologic.rad.report-render/render-controls","com.fulcrologic.rad.report-render-options/control-style","js/com.fulcrologic.rad.report-render.render-header","fexpr__91872","com.fulcrologic.rad.report-render/render-header","com.fulcrologic.rad.report-render-options/header-style","js/com.fulcrologic.rad.report-render.render-footer","fexpr__91873","com.fulcrologic.rad.report-render/render-footer","com.fulcrologic.rad.report-render-options/footer-style"],"sourcesContent":["(ns com.fulcrologic.rad.report-render\n  \"Multimethods for creating new styles of report rendering. Currently Uses the form render-hierarchy to specify\n   the mm hierarchy for dispatch.\"\n  (:require\n    [com.fulcrologic.rad.attributes-options :as ao]\n    [com.fulcrologic.rad.options-util :refer [?!]]\n    [com.fulcrologic.rad.form-render :as fr]\n    [com.fulcrologic.rad.report-options :as ro]\n    [com.fulcrologic.rad.report-render-options :as rro]))\n\n(defn gen-dispatch\n  \"Generate a multimethod dispatch function that assumes the attribute is an id-attribute (being called\n   in the context of the rendering env's form-instance) and attempts to find the `style-key` in\n   the subform options of the parent form (to override any declared on the form itself), then\n   on the form-instance, and finally on the attribute.\n\n   If `fallback-to-style?` is true, then if it does not find `style-key` it will repeat the sequence using\n   fro/style.\"\n  [style-key fallback-to-style?]\n  (fn [this report-options]\n    (let [k     (ao/qualified-key (ro/row-pk report-options))\n          style (or\n                  (?! (style-key report-options) this)\n                  (and fallback-to-style? (?! (rro/style report-options) this))\n                  :default)]\n      [k style])))\n\n(defmulti render-report\n  \"[this report-options]\n\n   Render the entire report (controls, body, rows, etc.). Default uses the rendering plugin.\"\n  (gen-dispatch rro/style false)\n  :hierarchy #?(:cljs fr/render-hierarchy\n                :clj  (var fr/render-hierarchy)))\n\n(defmulti render-body\n  \"[this report-options]\n\n   Render the body of the report. This method is not used by any of the build-in defaults, but is available\n   for when you define your own reports as a way of creating a wrapper for the rows (e.g. dom table).\"\n  (gen-dispatch rro/body-style true)\n  :hierarchy #?(:cljs fr/render-hierarchy\n                :clj  (var fr/render-hierarchy)))\n\n(defmulti render-row\n  \"[this report-options row-props]\n\n   Render a single row of the report. Defaults to the rendering plugin. Intended to be called from `rr/render-body` when\n   creating new styles.\"\n  (fn [this report-options row-props]\n    (let [k     (ao/qualified-key (ro/row-pk report-options))\n          style (or\n                  (?! (rro/row-style report-options) this)\n                  (?! (rro/style report-options) this)\n                  :default)]\n      [k style]))\n\n  :hierarchy #?(:cljs fr/render-hierarchy\n                :clj  (var fr/render-hierarchy)))\n\n(defmulti render-controls\n  \"[this report-options]\n\n   Render the controls of the report. Defaults to the UI plugin's rendering of the controls.\"\n  (gen-dispatch rro/control-style true)\n  :hierarchy #?(:cljs fr/render-hierarchy\n                :clj  (var fr/render-hierarchy)))\n\n(defmulti render-header\n  \"[this report-options]\n\n   Render a header. Not called by default, but exists so you can compose elements of a style together in your\n   customizations. You could render the heading of the rows in render-body, or could leverage this method.\"\n  (gen-dispatch rro/header-style true)\n  :hierarchy #?(:cljs fr/render-hierarchy\n                :clj  (var fr/render-hierarchy)))\n\n(defmulti render-footer\n  \"[this report-options]\n\n   Render a footer. Not called by default, but exists so you can compose elements of a style together in your\n   customizations. You could render a footer of the rows or report in render-body, or could leverage this method.\"\n  (gen-dispatch rro/footer-style true)\n  :hierarchy #?(:cljs fr/render-hierarchy\n                :clj  (var fr/render-hierarchy)))\n"]}