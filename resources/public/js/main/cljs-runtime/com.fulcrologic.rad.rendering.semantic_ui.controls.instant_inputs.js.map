{"version":3,"sources":["com/fulcrologic/rad/rendering/semantic_ui/controls/instant_inputs.cljc"],"mappings":"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","names":["p__93207","p__93208","map__93209","cljs.core/--destructure-map","cljs.core.get","map__93210","com.fulcrologic.rad.rendering.semantic-ui.controls.instant-inputs/ui-date-instant-input","default-local-time","value","onChange","local-time","props","com.fulcrologic.rad.type_support.date_time.inst__GT_html_date","or__5045__auto__","com.fulcrologic.fulcro.dom.macro_create_element","cljs.core.merge","evt","date-string","com.fulcrologic.fulcro.dom.events/target-value","instant","com.fulcrologic.rad.type-support.date-time/html-date->inst","p__93211","map__93212","com.fulcrologic.rad.rendering.semantic-ui.controls.instant-inputs/ui-ending-date-instant-input","_","com.fulcrologic.rad.type_support.date_time.inst__GT_local_datetime","cljc.java-time.local-date-time/minus-days","cljc.java-time.local-date-time/to-local-date","com.fulcrologic.rad.type-support.date-time/local-date->html-date-string","G__93213","G__93214","com.fulcrologic.rad.type-support.date-time/html-date-string->local-date","cljc.java-time.local-date/plus-days","cljc.java_time.local_date.at_time","cljc.java-time.local-time/midnight","com.fulcrologic.rad.type_support.date_time.local_datetime__GT_inst","p__93215","map__93216","com.fulcrologic.rad.rendering.semantic-ui.controls.instant-inputs/ui-date-time-instant-input","disabled?","com.fulcrologic.rad.type_support.date_time.inst__GT_html_datetime_string","G__93217","date-time-string","com.fulcrologic.rad.type_support.date_time.html_datetime_string__GT_inst","cljs.core.assoc","com.fulcrologic.rad.rendering.semantic-ui.controls.instant-inputs/date-time-control","render-env","G__93218","com.fulcrologic.rad.rendering.semantic-ui.controls.control/ui-control","com.fulcrologic.rad.rendering.semantic-ui.controls.instant-inputs/midnight-on-date-control","G__93219","com.fulcrologic.rad.rendering.semantic-ui.controls.instant-inputs/midnight-next-date-control","G__93220","com.fulcrologic.rad.rendering.semantic-ui.controls.instant-inputs/date-at-noon-control","G__93221","cljc.java-time.local-time/noon"],"sourcesContent":["(ns com.fulcrologic.rad.rendering.semantic-ui.controls.instant-inputs\n  (:require\n    [com.fulcrologic.guardrails.core :refer [>defn => ?]]\n    [com.fulcrologic.rad.type-support.date-time :as dt]\n    [com.fulcrologic.rad.rendering.semantic-ui.controls.control :as control]\n    [cljc.java-time.local-time :as lt]\n    [com.fulcrologic.fulcro.dom.events :as evt]\n    #?(:clj  [com.fulcrologic.fulcro.dom-server :as dom]\n       :cljs [com.fulcrologic.fulcro.dom :as dom])\n    [cljc.java-time.local-date-time :as ldt]\n    [cljc.java-time.local-date :as ld]))\n\n(defn ui-date-instant-input [{::keys [default-local-time]} {:keys [value onChange local-time] :as props}]\n  (let [value      (if (nil? value) \"\" (dt/inst->html-date value))\n        local-time (or local-time default-local-time)]\n    (dom/input\n      (merge props\n        {:value    value\n         :type     \"date\"\n         :onChange (fn [evt]\n                     (when onChange\n                       (let [date-string (evt/target-value evt)\n                             instant     (dt/html-date->inst date-string local-time)]\n                         (onChange instant))))}))))\n\n(defn ui-ending-date-instant-input\n  \"Display the date the user selects, but control a value that is midnight on the next date. Used for generating ending\n  instants that can be used for a proper non-inclusive end date.\"\n  [_ {:keys [value onChange] :as props}]\n  (let [value (if (nil? value)\n                \"\"\n                (-> value\n                  dt/inst->local-datetime\n                  (ldt/minus-days 1)\n                  ldt/to-local-date\n                  dt/local-date->html-date-string))]\n    (dom/input\n      (merge props\n        {:value    value\n         :type     \"date\"\n         :onChange (fn [evt]\n                     (when onChange\n                       (onChange (some-> (evt/target-value evt)\n                                   (dt/html-date-string->local-date)\n                                   (ld/plus-days 1)\n                                   (ld/at-time lt/midnight)\n                                   (dt/local-datetime->inst)))))}))))\n\n(defn ui-date-time-instant-input [_ {:keys [disabled? value onChange] :as props}]\n  (let [value (if (nil? value) \"\" (dt/inst->html-datetime-string value))]\n    (dom/input\n      (merge props\n        (cond->\n          {:value    value\n           :type     \"date\"\n           :onChange (fn [evt]\n                       (when onChange\n                         (let [date-time-string (evt/target-value evt)\n                               instant          (dt/html-datetime-string->inst date-time-string)]\n                           (onChange instant))))}\n          disabled? (assoc :readOnly true))))))\n\n(defn date-time-control [render-env]\n  (control/ui-control (assoc render-env :input-factory ui-date-time-instant-input)))\n\n(defn midnight-on-date-control [render-env]\n  (control/ui-control (assoc render-env\n                        :input-factory ui-date-instant-input\n                        ::default-local-time lt/midnight)))\n\n(defn midnight-next-date-control [render-env]\n  (control/ui-control (assoc render-env\n                        :input-factory ui-ending-date-instant-input)))\n\n(defn date-at-noon-control [render-env]\n  (control/ui-control (assoc render-env\n                        ::default-local-time lt/noon\n                        :input-factory ui-date-instant-input)))\n\n"]}