{"version":3,"sources":["com/fulcrologic/semantic_ui/modules/progress/ui_progress.cljc"],"mappings":";AAKE;;;;;;;;;;;;;;;;;;;;;;;;;;AAAKA,uEAyBK,AAACC,0DAAgBC","names":["com.fulcrologic.semantic-ui.modules.progress.ui-progress/ui-progress","com.fulcrologic.semantic-ui.factory-helpers/factory-apply","js/shadow.js.shim.module$semantic_ui_react$Progress"],"sourcesContent":["(ns com.fulcrologic.semantic-ui.modules.progress.ui-progress\n  (:require\n    [com.fulcrologic.semantic-ui.factory-helpers :as h]\n    #?(:cljs [\"semantic-ui-react$Progress\" :as Progress])))\n\n  (def ui-progress\n  \"A progress bar shows the progression of a task.\n\n  Props:\n    - active (bool): A progress bar can show activity.\n    - as (elementType): An element type to render as (string or function).\n    - attached (enum): A progress bar can attach to and show the progress of an element (i.e. Card or Segment). (top, bottom)\n    - autoSuccess (bool): Whether success state should automatically trigger when progress completes.\n    - children (node): Primary content.\n    - className (string): Additional classes.\n    - color (enum): A progress bar can have different colors. (red, orange, yellow, olive, green, teal, blue, violet, purple, pink, brown, grey, black)\n    - content (custom): Shorthand for primary content.\n    - disabled (bool): A progress bar be disabled.\n    - error (bool): A progress bar can show a error state.\n    - indicating (bool): An indicating progress bar visually indicates the current level of progress of a task.\n    - inverted (bool): A progress bar can have its colors inverted.\n    - label (custom): Can be set to either to display progress as percent or ratio.\n    - percent (union): Current percent complete. ()\n    - precision (number): Decimal point precision for calculated progress.\n    - progress (bool|enum): A progress bar can contain a text value indicating current progress. (percent, ratio, value)\n    - size (enum): A progress bar can vary in size. (tiny, small, medium, large, big)\n    - success (bool): A progress bar can show a success state.\n    - total (union): For use with value. Together, these will calculate the percent. Mutually excludes percent. ()\n    - value (union): For use with total. Together, these will calculate the percent. Mutually excludes percent. ()\n    - warning (bool): A progress bar can show a warning state.\"\n   #?(:cljs (h/factory-apply Progress)))\n"]}