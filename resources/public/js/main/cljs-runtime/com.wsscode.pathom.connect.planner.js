goog.provide('com.wsscode.pathom.connect.planner');
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Symbol("cljs.core","pos-int?","cljs.core/pos-int?",-2115888030,null),cljs.core.pos_int_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","set?","cljs.core/set?",-1176684971,null)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword(null,"kind","kind",-717265803),cljs.core.set_QMARK_,new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),new cljs.core.Symbol("cljs.core","set?","cljs.core/set?",-1176684971,null),new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","set?","cljs.core/set?",-1176684971,null)),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__63715){
return cljs.core.set_QMARK_(G__63715);
})], null),null));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__63716){
return cljs.core.map_QMARK_(G__63716);
}),(function (G__63716){
return cljs.core.contains_QMARK_(G__63716,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979));
})], null),(function (G__63716){
return ((cljs.core.map_QMARK_(G__63716)) && (cljs.core.contains_QMARK_(G__63716,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)))], null),null])));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.core","shape-descriptor","com.wsscode.pathom.core/shape-descriptor",-1569907681),new cljs.core.Keyword("com.wsscode.pathom.core","shape-descriptor","com.wsscode.pathom.core/shape-descriptor",-1569907681));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","attr-deps-trail","com.wsscode.pathom.connect.planner/attr-deps-trail",1387730776),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","branch-type","com.wsscode.pathom.connect.planner/branch-type",-2006345895),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664),"null",new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),"null"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664),null,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),null], null), null));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","id-counter","com.wsscode.pathom.connect.planner/id-counter",915440894),new cljs.core.Symbol("cljs.core","any?","cljs.core/any?",-2068111842,null),cljs.core.any_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","foreign-ast","com.wsscode.pathom.connect.planner/foreign-ast",43189243),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-type","com.wsscode.pathom.connect.planner/node-type",224423208),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-resolver","com.wsscode.pathom.connect.planner/node-resolver",533201608),"null",new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-or","com.wsscode.pathom.connect.planner/node-or",-1971835957),"null",new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-and","com.wsscode.pathom.connect.planner/node-and",547713646),"null",new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-unknown","com.wsscode.pathom.connect.planner/node-unknown",-1008522467),"null"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-resolver","com.wsscode.pathom.connect.planner/node-resolver",533201608),null,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-or","com.wsscode.pathom.connect.planner/node-or",-1971835957),null,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-and","com.wsscode.pathom.connect.planner/node-and",547713646),null,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-unknown","com.wsscode.pathom.connect.planner/node-unknown",-1008522467),null], null), null));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","input","com.wsscode.pathom.connect.planner/input",713704915),new cljs.core.Keyword("com.wsscode.pathom.connect","io-map","com.wsscode.pathom.connect/io-map",-1661450462),new cljs.core.Keyword("com.wsscode.pathom.connect","io-map","com.wsscode.pathom.connect/io-map",-1661450462));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","map-of","cljs.spec.alpha/map-of",153715093,null),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","tuple","cljs.spec.alpha/tuple",-415901908,null),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null)),new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword("cljs.spec.alpha","kfn","cljs.spec.alpha/kfn",672643897),(function (i__20422__auto__,v__20423__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__20423__auto__,(0));
}),new cljs.core.Keyword(null,"into","into",-150836029),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword(null,"kind","kind",-717265803),cljs.core.map_QMARK_,new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","map-of","cljs.spec.alpha/map-of",153715093,null),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__63720){
return cljs.core.map_QMARK_(G__63720);
})], null),null));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-syms","com.wsscode.pathom.connect.planner/index-syms",-1320415415),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","map-of","cljs.spec.alpha/map-of",153715093,null),new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","tuple","cljs.spec.alpha/tuple",-415901908,null),new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)], null)),new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword("cljs.spec.alpha","kfn","cljs.spec.alpha/kfn",672643897),(function (i__20422__auto__,v__20423__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__20423__auto__,(0));
}),new cljs.core.Keyword(null,"into","into",-150836029),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword(null,"kind","kind",-717265803),cljs.core.map_QMARK_,new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","map-of","cljs.spec.alpha/map-of",153715093,null),new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__63721){
return cljs.core.map_QMARK_(G__63721);
})], null),null));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089),new cljs.core.Symbol("cljs.core","nat-int?","cljs.core/nat-int?",-164364171,null),cljs.core.nat_int_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-branch-depth","com.wsscode.pathom.connect.planner/node-branch-depth",-358012974),new cljs.core.Symbol("cljs.core","nat-int?","cljs.core/nat-int?",-164364171,null),cljs.core.nat_int_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-chain-depth","com.wsscode.pathom.connect.planner/node-chain-depth",44154914),new cljs.core.Symbol("cljs.core","nat-int?","cljs.core/nat-int?",-164364171,null),cljs.core.nat_int_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","input","com.wsscode.pathom.connect.planner/input",713704915)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__63722){
return cljs.core.map_QMARK_(G__63722);
})], null),(function (G__63722){
return cljs.core.map_QMARK_(G__63722);
}),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","input","com.wsscode.pathom.connect.planner/input",713704915)], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","input","com.wsscode.pathom.connect.planner/input",713704915)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null)))], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","input","com.wsscode.pathom.connect.planner/input",713704915)], null)])));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","map-of","cljs.spec.alpha/map-of",153715093,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","tuple","cljs.spec.alpha/tuple",-415901908,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)], null)),new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword("cljs.spec.alpha","kfn","cljs.spec.alpha/kfn",672643897),(function (i__20422__auto__,v__20423__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__20423__auto__,(0));
}),new cljs.core.Keyword(null,"into","into",-150836029),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword(null,"kind","kind",-717265803),cljs.core.map_QMARK_,new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","map-of","cljs.spec.alpha/map-of",153715093,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__63723){
return cljs.core.map_QMARK_(G__63723);
})], null),null));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","timestamp","com.wsscode.pathom.trace/timestamp",1867371402)], null)),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","vector?","cljs.core/vector?",-1550392028,null)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("s","keys","s/keys",-1586011188,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","timestamp","com.wsscode.pathom.trace/timestamp",1867371402)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__63725){
return cljs.core.map_QMARK_(G__63725);
}),(function (G__63725){
return cljs.core.contains_QMARK_(G__63725,new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983));
})], null),(function (G__63725){
return ((cljs.core.map_QMARK_(G__63725)) && (cljs.core.contains_QMARK_(G__63725,new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983))));
}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","timestamp","com.wsscode.pathom.trace/timestamp",1867371402)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","timestamp","com.wsscode.pathom.trace/timestamp",1867371402)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)))], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","timestamp","com.wsscode.pathom.trace/timestamp",1867371402)], null)])),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword(null,"kind","kind",-717265803),cljs.core.vector_QMARK_,new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),new cljs.core.Symbol("cljs.core","vector?","cljs.core/vector?",-1550392028,null),new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","timestamp","com.wsscode.pathom.trace/timestamp",1867371402)], null)),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","vector?","cljs.core/vector?",-1550392028,null)),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__63724){
return cljs.core.vector_QMARK_(G__63724);
})], null),null));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","params","com.wsscode.pathom.connect.planner/params",600636577),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),cljs.core.map_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph-before-missing-chain","com.wsscode.pathom.connect.planner/graph-before-missing-chain",1272805834),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289),new cljs.core.Keyword("com.wsscode.pathom.connect","io-map","com.wsscode.pathom.connect/io-map",-1661450462),new cljs.core.Keyword("com.wsscode.pathom.connect","io-map","com.wsscode.pathom.connect/io-map",-1661450462));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next-trail","com.wsscode.pathom.connect.planner/run-next-trail",-1115570698),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","set?","cljs.core/set?",-1176684971,null)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword(null,"kind","kind",-717265803),cljs.core.set_QMARK_,new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),new cljs.core.Symbol("cljs.core","set?","cljs.core/set?",-1176684971,null),new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","set?","cljs.core/set?",-1176684971,null)),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__63727){
return cljs.core.set_QMARK_(G__63727);
})], null),null));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","source-for-attrs","com.wsscode.pathom.connect.planner/source-for-attrs",629277833),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","source-sym","com.wsscode.pathom.connect.planner/source-sym",-32676302),new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581),new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-attrs","com.wsscode.pathom.connect.planner/unreachable-attrs",983807492),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-syms","com.wsscode.pathom.connect.planner/unreachable-syms",152766399),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","set?","cljs.core/set?",-1176684971,null)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581),new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword(null,"kind","kind",-717265803),cljs.core.set_QMARK_,new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),new cljs.core.Symbol("cljs.core","set?","cljs.core/set?",-1176684971,null),new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","set?","cljs.core/set?",-1176684971,null)),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__63728){
return cljs.core.set_QMARK_(G__63728);
})], null),null));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warn","com.wsscode.pathom.connect.planner/warn",-358637310),new cljs.core.Symbol("cljs.core","string?","cljs.core/string?",-2072921719,null),cljs.core.string_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warnings","com.wsscode.pathom.connect.planner/warnings",-782452265),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warn","com.wsscode.pathom.connect.planner/warn",-358637310)], null))),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("s","keys","s/keys",-1586011188,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warn","com.wsscode.pathom.connect.planner/warn",-358637310)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__63730){
return cljs.core.map_QMARK_(G__63730);
}),(function (G__63730){
return cljs.core.contains_QMARK_(G__63730,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warn","com.wsscode.pathom.connect.planner/warn",-358637310));
})], null),(function (G__63730){
return ((cljs.core.map_QMARK_(G__63730)) && (cljs.core.contains_QMARK_(G__63730,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warn","com.wsscode.pathom.connect.planner/warn",-358637310))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warn","com.wsscode.pathom.connect.planner/warn",-358637310)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warn","com.wsscode.pathom.connect.planner/warn",-358637310)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warn","com.wsscode.pathom.connect.planner/warn",-358637310)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warn","com.wsscode.pathom.connect.planner/warn",-358637310)))], null),null])),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),null,new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warn","com.wsscode.pathom.connect.planner/warn",-358637310)], null))),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__63729){
return cljs.core.coll_QMARK_(G__63729);
})], null),null));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","conflict-params","com.wsscode.pathom.connect.planner/conflict-params",1544070537),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205));
com.wsscode.pathom.connect.planner.pc_sym = new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581);
com.wsscode.pathom.connect.planner.pc_dyn_sym = new cljs.core.Keyword("com.wsscode.pathom.connect","dynamic-sym","com.wsscode.pathom.connect/dynamic-sym",1578282767);
com.wsscode.pathom.connect.planner.pc_output = new cljs.core.Keyword("com.wsscode.pathom.connect","output","com.wsscode.pathom.connect/output",552487303);
com.wsscode.pathom.connect.planner.pc_provides = new cljs.core.Keyword("com.wsscode.pathom.connect","provides","com.wsscode.pathom.connect/provides",865831498);
com.wsscode.pathom.connect.planner.pc_attr = new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075);
com.wsscode.pathom.connect.planner.pc_input = new cljs.core.Keyword("com.wsscode.pathom.connect","input","com.wsscode.pathom.connect/input",-1274439121);
com.wsscode.pathom.connect.planner.ast_node = new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957);






com.wsscode.pathom.connect.planner.base_graph = (function com$wsscode$pathom$connect$planner$base_graph(){
return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-syms","com.wsscode.pathom.connect.planner/index-syms",-1320415415),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-syms","com.wsscode.pathom.connect.planner/unreachable-syms",152766399),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-attrs","com.wsscode.pathom.connect.planner/unreachable-attrs",983807492),cljs.core.PersistentHashSet.EMPTY], null);
});
com.wsscode.pathom.connect.planner.base_env = (function com$wsscode$pathom$connect$planner$base_env(){
return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","id-counter","com.wsscode.pathom.connect.planner/id-counter",915440894),cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0)),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),cljs.core.PersistentArrayMap.EMPTY], null);
});
/**
 * Return the next node ID in the system, its an incremental number
 */
com.wsscode.pathom.connect.planner.next_node_id = (function com$wsscode$pathom$connect$planner$next_node_id(p__63731){
var map__63732 = p__63731;
var map__63732__$1 = cljs.core.__destructure_map(map__63732);
var id_counter = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__63732__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","id-counter","com.wsscode.pathom.connect.planner/id-counter",915440894));
return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(id_counter,cljs.core.inc);
});
/**
 * Return all node-ids from the graph.
 */
com.wsscode.pathom.connect.planner.all_node_ids = (function com$wsscode$pathom$connect$planner$all_node_ids(graph){
return cljs.core.keys(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979).cljs$core$IFn$_invoke$arity$1(graph));
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","get-node","com.wsscode.pathom.connect.planner/get-node",1869353260,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"arity-2","arity-2",-1366521503),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),new cljs.core.Keyword(null,"arity-3","arity-3",1661577885),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword(null,"k","k",-2146297393),new cljs.core.Symbol("cljs.core","keyword?","cljs.core/keyword?",713156450,null))),new cljs.core.Keyword(null,"fn","fn",-1175266204),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.Symbol(null,"valid-multi-arity-ret?","valid-multi-arity-ret?",-2088255426,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p1__63733","p1__63733",-323372138,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","case","cljs.core/case",-1674122212,null),cljs.core.list(new cljs.core.Symbol("cljs.core","->","cljs.core/->",1488366311,null),new cljs.core.Symbol(null,"p1__63733","p1__63733",-323372138,null),new cljs.core.Keyword(null,"args","args",1315556576),new cljs.core.Symbol("cljs.core","key","cljs.core/key",799303703,null)),new cljs.core.Keyword(null,"arity-2","arity-2",-1366521503),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","valid?","cljs.spec.alpha/valid?",-142132235,null),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),cljs.core.list(new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol(null,"p1__63733","p1__63733",-323372138,null))),new cljs.core.Keyword(null,"arity-3","arity-3",1661577885),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","valid?","cljs.spec.alpha/valid?",-142132235,null),new cljs.core.Symbol("cljs.core","any?","cljs.core/any?",-2068111842,null),cljs.core.list(new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol(null,"p1__63733","p1__63733",-323372138,null)))))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"arity-2","arity-2",-1366521503),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),new cljs.core.Keyword(null,"arity-3","arity-3",1661577885),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword(null,"k","k",-2146297393),new cljs.core.Symbol("cljs.core","keyword?","cljs.core/keyword?",713156450,null))),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"arity-2","arity-2",-1366521503),new cljs.core.Keyword(null,"arity-3","arity-3",1661577885)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword(null,"k","k",-2146297393),new cljs.core.Symbol("cljs.core","keyword?","cljs.core/keyword?",713156450,null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__63750){
return cljs.core.map_QMARK_(G__63750);
}),(function (G__63750){
return cljs.core.contains_QMARK_(G__63750,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979));
})], null),(function (G__63750){
return ((cljs.core.map_QMARK_(G__63750)) && (cljs.core.contains_QMARK_(G__63750,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)))], null),null])),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))], null)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword(null,"k","k",-2146297393)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__63758){
return cljs.core.map_QMARK_(G__63758);
}),(function (G__63758){
return cljs.core.contains_QMARK_(G__63758,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979));
})], null),(function (G__63758){
return ((cljs.core.map_QMARK_(G__63758)) && (cljs.core.contains_QMARK_(G__63758,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)))], null),null])),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null),cljs.core.keyword_QMARK_], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Symbol("cljs.core","keyword?","cljs.core/keyword?",713156450,null)], null))], null),null),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"arity-2","arity-2",-1366521503),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),new cljs.core.Keyword(null,"arity-3","arity-3",1661577885),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword(null,"k","k",-2146297393),new cljs.core.Symbol("cljs.core","keyword?","cljs.core/keyword?",713156450,null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("cljs.core","any?","cljs.core/any?",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol("cljs.core","any?","cljs.core/any?",-2068111842,null),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.Symbol(null,"valid-multi-arity-ret?","valid-multi-arity-ret?",-2088255426,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p1__63733","p1__63733",-323372138,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","case","cljs.core/case",-1674122212,null),cljs.core.list(new cljs.core.Symbol("cljs.core","->","cljs.core/->",1488366311,null),new cljs.core.Symbol(null,"p1__63733","p1__63733",-323372138,null),new cljs.core.Keyword(null,"args","args",1315556576),new cljs.core.Symbol("cljs.core","key","cljs.core/key",799303703,null)),new cljs.core.Keyword(null,"arity-2","arity-2",-1366521503),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","valid?","cljs.spec.alpha/valid?",-142132235,null),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),cljs.core.list(new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol(null,"p1__63733","p1__63733",-323372138,null))),new cljs.core.Keyword(null,"arity-3","arity-3",1661577885),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","valid?","cljs.spec.alpha/valid?",-142132235,null),new cljs.core.Symbol("cljs.core","any?","cljs.core/any?",-2068111842,null),cljs.core.list(new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol(null,"p1__63733","p1__63733",-323372138,null))))),(function com$wsscode$pathom$connect$planner$valid_multi_arity_ret_QMARK_(p1__63733){
var G__63784 = cljs.core.key(new cljs.core.Keyword(null,"args","args",1315556576).cljs$core$IFn$_invoke$arity$1(p1__63733));
var G__63784__$1 = (((G__63784 instanceof cljs.core.Keyword))?G__63784.fqn:null);
switch (G__63784__$1) {
case "arity-2":
return cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$2(cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),null),new cljs.core.Keyword(null,"ret","ret",-468222814).cljs$core$IFn$_invoke$arity$1(p1__63733));

break;
case "arity-3":
return cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$2(cljs.core.any_QMARK_,new cljs.core.Keyword(null,"ret","ret",-468222814).cljs$core$IFn$_invoke$arity$1(p1__63733));

break;
default:
throw (new Error(["No matching clause: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__63784__$1)].join('')));

}
}),null,null),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.Symbol(null,"valid-multi-arity-ret?","valid-multi-arity-ret?",-2088255426,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p1__63733","p1__63733",-323372138,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","case","cljs.core/case",-1674122212,null),cljs.core.list(new cljs.core.Symbol("cljs.core","->","cljs.core/->",1488366311,null),new cljs.core.Symbol(null,"p1__63733","p1__63733",-323372138,null),new cljs.core.Keyword(null,"args","args",1315556576),new cljs.core.Symbol("cljs.core","key","cljs.core/key",799303703,null)),new cljs.core.Keyword(null,"arity-2","arity-2",-1366521503),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","valid?","cljs.spec.alpha/valid?",-142132235,null),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),cljs.core.list(new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol(null,"p1__63733","p1__63733",-323372138,null))),new cljs.core.Keyword(null,"arity-3","arity-3",1661577885),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","valid?","cljs.spec.alpha/valid?",-142132235,null),new cljs.core.Symbol("cljs.core","any?","cljs.core/any?",-2068111842,null),cljs.core.list(new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol(null,"p1__63733","p1__63733",-323372138,null))))),null));


com.wsscode.pathom.connect.planner.get_node = (function com$wsscode$pathom$connect$planner$get_node(var_args){
var G__63787 = arguments.length;
switch (G__63787) {
case 2:
return com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));

}
});

(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2 = (function (graph,node_id){
var map__63793 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__63799){
return cljs.core.map_QMARK_(G__63799);
}),(function (G__63799){
return cljs.core.contains_QMARK_(G__63799,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979));
})], null),(function (G__63799){
return ((cljs.core.map_QMARK_(G__63799)) && (cljs.core.contains_QMARK_(G__63799,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)))], null),null])),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),null),null,null),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),null,null,null);
var map__63793__$1 = cljs.core.__destructure_map(map__63793);
var argspec63734 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__63793__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec63735 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__63793__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec63734)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:182 get-node's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec63734,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,node_id], null));
} else {
}

var f63737 = (function (graph__$1,node_id__$1){
return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(graph__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id__$1], null));
});
var ret63736 = f63737(graph,node_id);
if(cljs.core.truth_(retspec63735)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:182 get-node's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec63735,ret63736);
} else {
}

return ret63736;
}));

(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$3 = (function (graph,node_id,k){
var map__63821 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword(null,"k","k",-2146297393),new cljs.core.Symbol("cljs.core","keyword?","cljs.core/keyword?",713156450,null)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword(null,"k","k",-2146297393)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__63825){
return cljs.core.map_QMARK_(G__63825);
}),(function (G__63825){
return cljs.core.contains_QMARK_(G__63825,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979));
})], null),(function (G__63825){
return ((cljs.core.map_QMARK_(G__63825)) && (cljs.core.contains_QMARK_(G__63825,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)))], null),null])),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null),cljs.core.keyword_QMARK_], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Symbol("cljs.core","keyword?","cljs.core/keyword?",713156450,null)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword(null,"k","k",-2146297393),new cljs.core.Symbol("cljs.core","keyword?","cljs.core/keyword?",713156450,null)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("cljs.core","any?","cljs.core/any?",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol("cljs.core","any?","cljs.core/any?",-2068111842,null),null,null,null);
var map__63821__$1 = cljs.core.__destructure_map(map__63821);
var argspec63738 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__63821__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec63739 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__63821__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec63738)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:182 get-node's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec63738,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,node_id,k], null));
} else {
}

var f63741 = (function (graph__$1,node_id__$1,k__$1){
return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(graph__$1,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id__$1,k__$1], null));
});
var ret63740 = f63741(graph,node_id,k);
if(cljs.core.truth_(retspec63739)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:182 get-node's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec63739,ret63740);
} else {
}

return ret63740;
}));

(com.wsscode.pathom.connect.planner.get_node.cljs$lang$maxFixedArity = 3);

/**
 * Set property k about node-id. Only assoc when node exists, otherwise its a noop.
 */
com.wsscode.pathom.connect.planner.assoc_node = (function com$wsscode$pathom$connect$planner$assoc_node(graph,node_id,k,v){
if(cljs.core.truth_(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id))){
return cljs.core.assoc_in(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id,k], null),v);
} else {
return graph;
}
});
/**
 * Update a given node in a graph, like Clojure native update.
 */
com.wsscode.pathom.connect.planner.update_node = (function com$wsscode$pathom$connect$planner$update_node(var_args){
var G__63856 = arguments.length;
switch (G__63856) {
case 4:
return com.wsscode.pathom.connect.planner.update_node.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
case 5:
return com.wsscode.pathom.connect.planner.update_node.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));

break;
case 6:
return com.wsscode.pathom.connect.planner.update_node.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));

break;
case 7:
return com.wsscode.pathom.connect.planner.update_node.cljs$core$IFn$_invoke$arity$7((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]));

break;
default:
var args_arr__5794__auto__ = [];
var len__5769__auto___64531 = arguments.length;
var i__5770__auto___64532 = (0);
while(true){
if((i__5770__auto___64532 < len__5769__auto___64531)){
args_arr__5794__auto__.push((arguments[i__5770__auto___64532]));

var G__64533 = (i__5770__auto___64532 + (1));
i__5770__auto___64532 = G__64533;
continue;
} else {
}
break;
}

var argseq__5795__auto__ = (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((7)),(0),null));
return com.wsscode.pathom.connect.planner.update_node.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),argseq__5795__auto__);

}
});

(com.wsscode.pathom.connect.planner.update_node.cljs$core$IFn$_invoke$arity$4 = (function (graph,node_id,k,f){
if(cljs.core.truth_(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id))){
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id,k], null),f);
} else {
return graph;
}
}));

(com.wsscode.pathom.connect.planner.update_node.cljs$core$IFn$_invoke$arity$5 = (function (graph,node_id,k,f,v){
if(cljs.core.truth_(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id))){
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id,k], null),f,v);
} else {
return graph;
}
}));

(com.wsscode.pathom.connect.planner.update_node.cljs$core$IFn$_invoke$arity$6 = (function (graph,node_id,k,f,v,v2){
if(cljs.core.truth_(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id))){
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id,k], null),f,v,v2);
} else {
return graph;
}
}));

(com.wsscode.pathom.connect.planner.update_node.cljs$core$IFn$_invoke$arity$7 = (function (graph,node_id,k,f,v,v2,v3){
if(cljs.core.truth_(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id))){
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id,k], null),f,v,v2,v3);
} else {
return graph;
}
}));

(com.wsscode.pathom.connect.planner.update_node.cljs$core$IFn$_invoke$arity$variadic = (function (graph,node_id,k,f,v,v2,v3,args){
if(cljs.core.truth_(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id))){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in,graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id,k], null),f,v,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([v2,v3,args], 0));
} else {
return graph;
}
}));

/** @this {Function} */
(com.wsscode.pathom.connect.planner.update_node.cljs$lang$applyTo = (function (seq63848){
var G__63849 = cljs.core.first(seq63848);
var seq63848__$1 = cljs.core.next(seq63848);
var G__63850 = cljs.core.first(seq63848__$1);
var seq63848__$2 = cljs.core.next(seq63848__$1);
var G__63851 = cljs.core.first(seq63848__$2);
var seq63848__$3 = cljs.core.next(seq63848__$2);
var G__63852 = cljs.core.first(seq63848__$3);
var seq63848__$4 = cljs.core.next(seq63848__$3);
var G__63853 = cljs.core.first(seq63848__$4);
var seq63848__$5 = cljs.core.next(seq63848__$4);
var G__63854 = cljs.core.first(seq63848__$5);
var seq63848__$6 = cljs.core.next(seq63848__$5);
var G__63855 = cljs.core.first(seq63848__$6);
var seq63848__$7 = cljs.core.next(seq63848__$6);
var self__5754__auto__ = this;
return self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__63849,G__63850,G__63851,G__63852,G__63853,G__63854,G__63855,seq63848__$7);
}));

(com.wsscode.pathom.connect.planner.update_node.cljs$lang$maxFixedArity = (7));

cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","add-node-log","com.wsscode.pathom.connect.planner/add-node-log",-1640842258,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"event","event",301435442),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null))),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"event","event",301435442),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword(null,"event","event",301435442)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__63862){
return cljs.core.map_QMARK_(G__63862);
}),(function (G__63862){
return cljs.core.contains_QMARK_(G__63862,new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983));
})], null),(function (G__63862){
return ((cljs.core.map_QMARK_(G__63862)) && (cljs.core.contains_QMARK_(G__63862,new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)))], null),null]))], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"event","event",301435442),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null,null));


/**
 * Add a new log entry to the node, this is similar to how tracing works, but these are
 *   internal logs about events for that specific node.
 * @type {function(*, *, !cljs.core.IMap): *}
 */
com.wsscode.pathom.connect.planner.add_node_log = (function com$wsscode$pathom$connect$planner$add_node_log(graph,node_id,event){
var map__63863 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"event","event",301435442),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword(null,"event","event",301435442)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__63872){
return cljs.core.map_QMARK_(G__63872);
}),(function (G__63872){
return cljs.core.contains_QMARK_(G__63872,new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983));
})], null),(function (G__63872){
return ((cljs.core.map_QMARK_(G__63872)) && (cljs.core.contains_QMARK_(G__63872,new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)))], null),null]))], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"event","event",301435442),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null,null);
var map__63863__$1 = cljs.core.__destructure_map(map__63863);
var argspec63858 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__63863__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec63859 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__63863__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec63858)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:223 add-node-log's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec63858,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,node_id,event], null));
} else {
}

var f63861 = (function (graph__$1,node_id__$1,event__$1){
return com.wsscode.pathom.connect.planner.update_node.cljs$core$IFn$_invoke$arity$4(graph__$1,node_id__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575),(function (p1__63857_SHARP_){
return com.wsscode.pathom.misc.vconj(p1__63857_SHARP_,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(event__$1,new cljs.core.Keyword("com.wsscode.pathom.trace","timestamp","com.wsscode.pathom.trace/timestamp",1867371402),com.wsscode.pathom.trace.now()));
}));
});
var ret63860 = f63861(graph,node_id,event);
if(cljs.core.truth_(retspec63859)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:223 add-node-log's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec63859,ret63860);
} else {
}

return ret63860;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","integrate-node-log","com.wsscode.pathom.connect.planner/integrate-node-log",686484175,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null))),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node","node",581201198)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__63896){
return cljs.core.map_QMARK_(G__63896);
})], null),(function (G__63896){
return cljs.core.map_QMARK_(G__63896);
}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null)))], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null)]))], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),null,null,null));


/**
 * Pulls the events from ::node-trace to the node itself, this will use the name from
 *   ::pt/event on each trace event and make it part of the node itself.
 * 
 *   Note that in case of repeated events, only the last one will be kept.
 * @type {function(!cljs.core.IMap): *}
 */
com.wsscode.pathom.connect.planner.integrate_node_log = (function com$wsscode$pathom$connect$planner$integrate_node_log(p__63898){
var map__63899 = p__63898;
var map__63899__$1 = cljs.core.__destructure_map(map__63899);
var node = map__63899__$1;
var node_trace = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__63899__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575));
var map__63900 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node","node",581201198)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__63906){
return cljs.core.map_QMARK_(G__63906);
})], null),(function (G__63906){
return cljs.core.map_QMARK_(G__63906);
}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null)))], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null)]))], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),null,null,null);
var map__63900__$1 = cljs.core.__destructure_map(map__63900);
var argspec63892 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__63900__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec63893 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__63900__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec63892)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:231 integrate-node-log's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec63892,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [node], null));
} else {
}

var f63895 = (function (p__63914){
var map__63915 = p__63914;
var map__63915__$1 = cljs.core.__destructure_map(map__63915);
var node__$1 = map__63915__$1;
var node_trace__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__63915__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575));
return cljs.core.into.cljs$core$IFn$_invoke$arity$3(node__$1,cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983),cljs.core.identity)),node_trace__$1);
});
var ret63894 = f63895(node);
if(cljs.core.truth_(retspec63893)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:231 integrate-node-log's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec63893,ret63894);
} else {
}

return ret63894;
});
com.wsscode.pathom.connect.planner.get_root_node = (function com$wsscode$pathom$connect$planner$get_root_node(p__63916){
var map__63917 = p__63916;
var map__63917__$1 = cljs.core.__destructure_map(map__63917);
var graph = map__63917__$1;
var root = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__63917__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
return com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,root);
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","set-root-node","com.wsscode.pathom.connect.planner/set-root-node",845300352,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),new cljs.core.Keyword(null,"ret","ret",-468222814),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__63943){
return cljs.core.map_QMARK_(G__63943);
}),(function (G__63943){
return cljs.core.contains_QMARK_(G__63943,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979));
})], null),(function (G__63943){
return ((cljs.core.map_QMARK_(G__63943)) && (cljs.core.contains_QMARK_(G__63943,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)))], null),null])),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__63963){
return cljs.core.map_QMARK_(G__63963);
}),(function (G__63963){
return cljs.core.contains_QMARK_(G__63963,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979));
})], null),(function (G__63963){
return ((cljs.core.map_QMARK_(G__63963)) && (cljs.core.contains_QMARK_(G__63963,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)))], null),null])),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),null,null,null));


/**
 * @type {function(!cljs.core.IMap, *): !cljs.core.IMap}
 */
com.wsscode.pathom.connect.planner.set_root_node = (function com$wsscode$pathom$connect$planner$set_root_node(graph,node_id){
var map__63974 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__63979){
return cljs.core.map_QMARK_(G__63979);
}),(function (G__63979){
return cljs.core.contains_QMARK_(G__63979,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979));
})], null),(function (G__63979){
return ((cljs.core.map_QMARK_(G__63979)) && (cljs.core.contains_QMARK_(G__63979,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)))], null),null])),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__63991){
return cljs.core.map_QMARK_(G__63991);
}),(function (G__63991){
return cljs.core.contains_QMARK_(G__63991,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979));
})], null),(function (G__63991){
return ((cljs.core.map_QMARK_(G__63991)) && (cljs.core.contains_QMARK_(G__63991,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)))], null),null])),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),null,null,null);
var map__63974__$1 = cljs.core.__destructure_map(map__63974);
var argspec63918 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__63974__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec63919 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__63974__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec63918)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:247 set-root-node's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec63918,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,node_id], null));
} else {
}

var f63921 = (function (graph__$1,node_id__$1){
if(cljs.core.truth_(node_id__$1)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(graph__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243),node_id__$1);
} else {
return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(graph__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
}
});
var ret63920 = f63921(graph,node_id);
if(cljs.core.truth_(retspec63919)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:247 set-root-node's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec63919,ret63920);
} else {
}

return ret63920;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","node-branches","com.wsscode.pathom.connect.planner/node-branches",1620148342,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),new cljs.core.Keyword(null,"ret","ret",-468222814),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"and","and",-971899817),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664)))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node","node",581201198)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"and","and",-971899817),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664))),cljs.spec.alpha.nilable_impl(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"and","and",-971899817),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"and","and",-971899817),new cljs.core.Keyword(null,"or","or",235744169)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664)], null),null),null),null,null),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"and","and",-971899817),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664))),null,null,null));


/**
 * @type {function(*): *}
 */
com.wsscode.pathom.connect.planner.node_branches = (function com$wsscode$pathom$connect$planner$node_branches(node){
var map__64010 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node","node",581201198)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"and","and",-971899817),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664))),cljs.spec.alpha.nilable_impl(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"and","and",-971899817),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"and","and",-971899817),new cljs.core.Keyword(null,"or","or",235744169)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664)], null),null),null),null,null),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"and","and",-971899817),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664))),null,null,null);
var map__64010__$1 = cljs.core.__destructure_map(map__64010);
var argspec64004 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64010__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec64005 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64010__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec64004)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:255 node-branches's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec64004,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [node], null));
} else {
}

var f64007 = (function (node__$1){
var or__5045__auto__ = new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453).cljs$core$IFn$_invoke$arity$1(node__$1);
if(cljs.core.truth_(or__5045__auto__)){
return or__5045__auto__;
} else {
return new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664).cljs$core$IFn$_invoke$arity$1(node__$1);
}
});
var ret64006 = f64007(node);
if(cljs.core.truth_(retspec64005)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:255 node-branches's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec64005,ret64006);
} else {
}

return ret64006;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","get-attribute-node","com.wsscode.pathom.connect.planner/get-attribute-node",-454056938,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),new cljs.core.Keyword(null,"ret","ret",-468222814),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"attribute","attribute",-2074029119)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null),null,null),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),null,null,null));


/**
 * Find the node for attribute in attribute index.
 * @type {function(*, *): *}
 */
com.wsscode.pathom.connect.planner.get_attribute_node = (function com$wsscode$pathom$connect$planner$get_attribute_node(graph,attribute){
var map__64030 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"attribute","attribute",-2074029119)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null),null,null),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),null,null,null);
var map__64030__$1 = cljs.core.__destructure_map(map__64030);
var argspec64026 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64030__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec64027 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64030__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec64026)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:262 get-attribute-node's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec64026,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,attribute], null));
} else {
}

var f64029 = (function (graph__$1,attribute__$1){
return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(graph__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097),attribute__$1], null));
});
var ret64028 = f64029(graph,attribute);
if(cljs.core.truth_(retspec64027)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:262 get-attribute-node's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec64027,ret64028);
} else {
}

return ret64028;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","branch-node?","com.wsscode.pathom.connect.planner/branch-node?",232358814,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node","node",581201198)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),cljs.core.boolean_QMARK_,null,null),new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),null,null,null));


/**
 * @type {function(*): !boolean}
 */
com.wsscode.pathom.connect.planner.branch_node_QMARK_ = (function com$wsscode$pathom$connect$planner$branch_node_QMARK_(node){
var map__64038 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node","node",581201198)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),cljs.core.boolean_QMARK_,null,null),new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),null,null,null);
var map__64038__$1 = cljs.core.__destructure_map(map__64038);
var argspec64034 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64038__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec64035 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64038__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec64034)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:268 branch-node?'s",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec64034,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [node], null));
} else {
}

var f64037 = (function (node__$1){
return cljs.core.boolean$(com.wsscode.pathom.connect.planner.node_branches(node__$1));
});
var ret64036 = f64037(node);
if(cljs.core.truth_(retspec64035)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:268 branch-node?'s",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec64035,ret64036);
} else {
}

return ret64036;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","node-kind","com.wsscode.pathom.connect.planner/node-kind",1055922703,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-type","com.wsscode.pathom.connect.planner/node-type",224423208)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node","node",581201198)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-type","com.wsscode.pathom.connect.planner/node-type",224423208),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-type","com.wsscode.pathom.connect.planner/node-type",224423208),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-type","com.wsscode.pathom.connect.planner/node-type",224423208),null,null,null));


/**
 * Return a keyword describing the type of the node.
 * @type {function(*): *}
 */
com.wsscode.pathom.connect.planner.node_kind = (function com$wsscode$pathom$connect$planner$node_kind(node){
var map__64044 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node","node",581201198)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-type","com.wsscode.pathom.connect.planner/node-type",224423208),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-type","com.wsscode.pathom.connect.planner/node-type",224423208),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-type","com.wsscode.pathom.connect.planner/node-type",224423208),null,null,null);
var map__64044__$1 = cljs.core.__destructure_map(map__64044);
var argspec64040 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64044__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec64041 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64044__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec64040)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:273 node-kind's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec64040,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [node], null));
} else {
}

var f64043 = (function (node__$1){
if(cljs.core.truth_(com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(node__$1))){
return new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-resolver","com.wsscode.pathom.connect.planner/node-resolver",533201608);
} else {
if(cljs.core.truth_(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453).cljs$core$IFn$_invoke$arity$1(node__$1))){
return new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-and","com.wsscode.pathom.connect.planner/node-and",547713646);
} else {
if(cljs.core.truth_(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664).cljs$core$IFn$_invoke$arity$1(node__$1))){
return new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-or","com.wsscode.pathom.connect.planner/node-or",-1971835957);
} else {
return new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-unknown","com.wsscode.pathom.connect.planner/node-unknown",-1008522467);

}
}
}
});
var ret64042 = f64043(node);
if(cljs.core.truth_(retspec64041)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:273 node-kind's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec64041,ret64042);
} else {
}

return ret64042;
});
/**
 * Return a string representation for the node, for resolver nodes this is the
 *   symbol, branch nodes get AND / OR respectively.
 */
com.wsscode.pathom.connect.planner.node__GT_label = (function com$wsscode$pathom$connect$planner$node__GT_label(node){
return cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__5045__auto__ = com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(node);
if(cljs.core.truth_(or__5045__auto__)){
return or__5045__auto__;
} else {
var or__5045__auto____$1 = (cljs.core.truth_(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453).cljs$core$IFn$_invoke$arity$1(node))?"AND":null);
if(cljs.core.truth_(or__5045__auto____$1)){
return or__5045__auto____$1;
} else {
if(cljs.core.truth_(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664).cljs$core$IFn$_invoke$arity$1(node))){
return "OR";
} else {
return null;
}
}
}
})());
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","compute-branch-node-chain-depth","com.wsscode.pathom.connect.planner/compute-branch-node-chain-depth",-940623367,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null,null));


/**
 * @type {function(*, *): *}
 */
com.wsscode.pathom.connect.planner.compute_branch_node_chain_depth = (function com$wsscode$pathom$connect$planner$compute_branch_node_chain_depth(graph,node_id){
var map__64050 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null,null);
var map__64050__$1 = cljs.core.__destructure_map(map__64050);
var retspec64047 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64050__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
var argspec64046 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64050__$1,new cljs.core.Keyword(null,"args","args",1315556576));
if(cljs.core.truth_(argspec64046)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:300 compute-branch-node-chain-depth's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec64046,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,node_id], null));
} else {
}

var f64049 = (function (graph__$1,node_id__$1){
if(cljs.core.truth_(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$3(graph__$1,node_id__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-branch-depth","com.wsscode.pathom.connect.planner/node-branch-depth",-358012974)))){
return graph__$1;
} else {
var branches = com.wsscode.pathom.connect.planner.node_branches(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph__$1,node_id__$1));
if(cljs.core.seq(branches)){
var graph_SINGLEQUOTE_ = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(com.wsscode.pathom.connect.planner.compute_node_chain_depth,graph__$1,branches);
var branch_depth = (cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.max,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__64045_SHARP_){
return com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$3(graph_SINGLEQUOTE_,p1__64045_SHARP_,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-chain-depth","com.wsscode.pathom.connect.planner/node-chain-depth",44154914));
}),branches)) + (1));
return com.wsscode.pathom.connect.planner.assoc_node(graph_SINGLEQUOTE_,node_id__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-branch-depth","com.wsscode.pathom.connect.planner/node-branch-depth",-358012974),branch_depth);
} else {
return com.wsscode.pathom.connect.planner.assoc_node(graph__$1,node_id__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-branch-depth","com.wsscode.pathom.connect.planner/node-branch-depth",-358012974),(0));
}
}
});
var ret64048 = f64049(graph,node_id);
if(cljs.core.truth_(retspec64047)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:300 compute-branch-node-chain-depth's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec64047,ret64048);
} else {
}

return ret64048;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","compute-node-chain-depth","com.wsscode.pathom.connect.planner/compute-node-chain-depth",472524816,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null,null));


/**
 * @type {function(*, *): *}
 */
com.wsscode.pathom.connect.planner.compute_node_chain_depth = (function com$wsscode$pathom$connect$planner$compute_node_chain_depth(graph,node_id){
var map__64055 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null,null);
var map__64055__$1 = cljs.core.__destructure_map(map__64055);
var argspec64051 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64055__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec64052 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64055__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec64051)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:312 compute-node-chain-depth's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec64051,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,node_id], null));
} else {
}

var f64054 = (function (graph__$1,node_id__$1){
var map__64056 = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph__$1,node_id__$1);
var map__64056__$1 = cljs.core.__destructure_map(map__64056);
var node = map__64056__$1;
var run_next = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64056__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163));
var node_chain_depth = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64056__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-chain-depth","com.wsscode.pathom.connect.planner/node-chain-depth",44154914));
var branches = com.wsscode.pathom.connect.planner.node_branches(node);
if(cljs.core.truth_(node_chain_depth)){
return graph__$1;
} else {
if(cljs.core.truth_(branches)){
var graph_SINGLEQUOTE_ = (function (){var G__64057 = com.wsscode.pathom.connect.planner.compute_branch_node_chain_depth(graph__$1,node_id__$1);
if(cljs.core.truth_(run_next)){
return (com.wsscode.pathom.connect.planner.compute_node_chain_depth.cljs$core$IFn$_invoke$arity$2 ? com.wsscode.pathom.connect.planner.compute_node_chain_depth.cljs$core$IFn$_invoke$arity$2(G__64057,run_next) : com.wsscode.pathom.connect.planner.compute_node_chain_depth.call(null,G__64057,run_next));
} else {
return G__64057;
}
})();
var branch_depth = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$3(graph_SINGLEQUOTE_,node_id__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-branch-depth","com.wsscode.pathom.connect.planner/node-branch-depth",-358012974));
var next_depth = (cljs.core.truth_(run_next)?(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$3(graph_SINGLEQUOTE_,run_next,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-chain-depth","com.wsscode.pathom.connect.planner/node-chain-depth",44154914)) + (1)):(0));
return com.wsscode.pathom.connect.planner.assoc_node(graph_SINGLEQUOTE_,node_id__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-chain-depth","com.wsscode.pathom.connect.planner/node-chain-depth",44154914),(branch_depth + next_depth));
} else {
if(cljs.core.truth_(run_next)){
var graph_SINGLEQUOTE_ = (com.wsscode.pathom.connect.planner.compute_node_chain_depth.cljs$core$IFn$_invoke$arity$2 ? com.wsscode.pathom.connect.planner.compute_node_chain_depth.cljs$core$IFn$_invoke$arity$2(graph__$1,run_next) : com.wsscode.pathom.connect.planner.compute_node_chain_depth.call(null,graph__$1,run_next));
var next_depth = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$3(graph_SINGLEQUOTE_,run_next,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-chain-depth","com.wsscode.pathom.connect.planner/node-chain-depth",44154914));
return com.wsscode.pathom.connect.planner.assoc_node(graph_SINGLEQUOTE_,node_id__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-chain-depth","com.wsscode.pathom.connect.planner/node-chain-depth",44154914),(next_depth + (1)));
} else {
return com.wsscode.pathom.connect.planner.assoc_node(graph__$1,node_id__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-chain-depth","com.wsscode.pathom.connect.planner/node-chain-depth",44154914),(0));

}
}
}
});
var ret64053 = f64054(graph,node_id);
if(cljs.core.truth_(retspec64052)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:312 compute-node-chain-depth's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec64052,ret64053);
} else {
}

return ret64053;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","previous-node-depth","com.wsscode.pathom.connect.planner/previous-node-depth",-1702738234,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"current-node-id","current-node-id",2065479273),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"previous-node-id","previous-node-id",-294057087),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"current-node-id","current-node-id",2065479273),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"previous-node-id","previous-node-id",-294057087),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"current-node-id","current-node-id",2065479273),new cljs.core.Keyword(null,"previous-node-id","previous-node-id",-294057087)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"current-node-id","current-node-id",2065479273),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"previous-node-id","previous-node-id",-294057087),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089),null,null,null));


/**
 * Get previous node depth, normally it uses the ::node-depth of previous node. There
 *   is a special case, when the previous node is a branch node and the current node is
 *   the run-next of the previous, in this case the previous depth should return the node
 *   chain depth instead, so the depth of the run-next goes after the branch dependencies.
 * @type {function(*, *, *): *}
 */
com.wsscode.pathom.connect.planner.previous_node_depth = (function com$wsscode$pathom$connect$planner$previous_node_depth(graph,current_node_id,previous_node_id){
var map__64062 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"current-node-id","current-node-id",2065479273),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"previous-node-id","previous-node-id",-294057087),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"current-node-id","current-node-id",2065479273),new cljs.core.Keyword(null,"previous-node-id","previous-node-id",-294057087)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"current-node-id","current-node-id",2065479273),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"previous-node-id","previous-node-id",-294057087),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089),null,null,null);
var map__64062__$1 = cljs.core.__destructure_map(map__64062);
var argspec64058 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64062__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec64059 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64062__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec64058)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:339 previous-node-depth's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec64058,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,current_node_id,previous_node_id], null));
} else {
}

var f64061 = (function (graph__$1,current_node_id__$1,previous_node_id__$1){
var previous_node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph__$1,previous_node_id__$1);
if(((com.wsscode.pathom.connect.planner.branch_node_QMARK_(previous_node)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(current_node_id__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163).cljs$core$IFn$_invoke$arity$1(previous_node))))){
return (com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$3(graph__$1,previous_node_id__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089)) + com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$3(graph__$1,previous_node_id__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-branch-depth","com.wsscode.pathom.connect.planner/node-branch-depth",-358012974)));
} else {
return com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$3(graph__$1,previous_node_id__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089));
}
});
var ret64060 = f64061(graph,current_node_id,previous_node_id);
if(cljs.core.truth_(retspec64059)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:339 previous-node-depth's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec64059,ret64060);
} else {
}

return ret64060;
});
/**
 * Calculate depth of node-id, this returns a graph in which that node has
 *   the key ::node-depth associated in the node. The depth is calculated by
 *   following the ::after-nodes chain, in the process all the parent node depths
 *   are also calculated and set, this makes it efficient to scan the list calculating
 *   the depths, given each node will be visited at max once.
 */
com.wsscode.pathom.connect.planner.compute_node_depth = (function com$wsscode$pathom$connect$planner$compute_node_depth(graph,node_id){
var map__64066 = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id);
var map__64066__$1 = cljs.core.__destructure_map(map__64066);
var after_nodes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64066__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057));
var node_depth = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64066__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089));
if(cljs.core.truth_(node_depth)){
return graph;
} else {
if(cljs.core.truth_(after_nodes)){
var graph_SINGLEQUOTE_ = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__64063_SHARP_,p2__64064_SHARP_){
var G__64067 = com.wsscode.pathom.connect.planner.compute_branch_node_chain_depth(p1__64063_SHARP_,p2__64064_SHARP_);
var G__64068 = p2__64064_SHARP_;
return (com.wsscode.pathom.connect.planner.compute_node_depth.cljs$core$IFn$_invoke$arity$2 ? com.wsscode.pathom.connect.planner.compute_node_depth.cljs$core$IFn$_invoke$arity$2(G__64067,G__64068) : com.wsscode.pathom.connect.planner.compute_node_depth.call(null,G__64067,G__64068));
}),graph,after_nodes);
var depth = (cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.max,cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__64065_SHARP_){
return com.wsscode.pathom.connect.planner.previous_node_depth(graph_SINGLEQUOTE_,node_id,p1__64065_SHARP_);
}),after_nodes)) + (1));
return com.wsscode.pathom.connect.planner.assoc_node(graph_SINGLEQUOTE_,node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089),depth);
} else {
return com.wsscode.pathom.connect.planner.assoc_node(graph,node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089),(0));

}
}
});
/**
 * Compute the depth for node-id and return it.
 */
com.wsscode.pathom.connect.planner.node_depth = (function com$wsscode$pathom$connect$planner$node_depth(graph,node_id){
return new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089).cljs$core$IFn$_invoke$arity$1(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(com.wsscode.pathom.connect.planner.compute_node_depth(graph,node_id),node_id));
});
/**
 * Return graph with node-depth calculated for all nodes.
 */
com.wsscode.pathom.connect.planner.compute_all_node_depths = (function com$wsscode$pathom$connect$planner$compute_all_node_depths(graph){
var node_ids = com.wsscode.pathom.connect.planner.all_node_ids(graph);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(com.wsscode.pathom.connect.planner.compute_node_depth,graph,node_ids);
});
com.wsscode.pathom.connect.planner.dynamic_resolver_QMARK_ = (function com$wsscode$pathom$connect$planner$dynamic_resolver_QMARK_(p__64069,sym){
var map__64070 = p__64069;
var map__64070__$1 = cljs.core.__destructure_map(map__64070);
var index_resolvers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64070__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256));
return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(index_resolvers,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym,new cljs.core.Keyword("com.wsscode.pathom.connect","dynamic-resolver?","com.wsscode.pathom.connect/dynamic-resolver?",-2098759706)], null));
});
/**
 * Add attribute to unreachable list
 */
com.wsscode.pathom.connect.planner.add_unreachable_attr = (function com$wsscode$pathom$connect$planner$add_unreachable_attr(graph,attr){
return cljs.core.update.cljs$core$IFn$_invoke$arity$4(graph,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-attrs","com.wsscode.pathom.connect.planner/unreachable-attrs",983807492),cljs.core.conj,attr);
});
/**
 * Check if node and graph point to same run-next.
 */
com.wsscode.pathom.connect.planner.optimize_merge_QMARK_ = (function com$wsscode$pathom$connect$planner$optimize_merge_QMARK_(graph,p__64071){
var map__64072 = p__64071;
var map__64072__$1 = cljs.core.__destructure_map(map__64072);
var node_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64072__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450));
var root_next = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243).cljs$core$IFn$_invoke$arity$1(graph),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163)], null));
var node_next = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163)], null));
var and__5043__auto__ = root_next;
if(cljs.core.truth_(and__5043__auto__)){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(root_next,node_next);
} else {
return and__5043__auto__;
}
});
/**
 * Get resolver provides from environment source symbol.
 */
com.wsscode.pathom.connect.planner.resolver_provides = (function com$wsscode$pathom$connect$planner$resolver_provides(p__64073){
var map__64074 = p__64073;
var map__64074__$1 = cljs.core.__destructure_map(map__64074);
var index_resolvers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64074__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256));
var source_sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64074__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","source-sym","com.wsscode.pathom.connect.planner/source-sym",-32676302));
return com.wsscode.pathom.connect.indexes.resolver_provides(cljs.core.get.cljs$core$IFn$_invoke$arity$2(index_resolvers,source_sym));
});
/**
 * Given some branch node, tries to find a node with a dynamic resolver that's the
 *   same sym as the node in node-id.
 */
com.wsscode.pathom.connect.planner.find_branch_node_to_merge = (function com$wsscode$pathom$connect$planner$find_branch_node_to_merge(p__64076,p__64077,p__64078){
var map__64079 = p__64076;
var map__64079__$1 = cljs.core.__destructure_map(map__64079);
var graph = map__64079__$1;
var root = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64079__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
var map__64080 = p__64077;
var map__64080__$1 = cljs.core.__destructure_map(map__64080);
var branch_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64080__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","branch-type","com.wsscode.pathom.connect.planner/branch-type",-2006345895));
var map__64081 = p__64078;
var map__64081__$1 = cljs.core.__destructure_map(map__64081);
var node_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64081__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450));
var node = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(graph,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id], null));
var node_sym = com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(node);
if(cljs.core.truth_(node_sym)){
return cljs.core.some((function (p1__64075_SHARP_){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(node_sym,cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),p1__64075_SHARP_,com.wsscode.pathom.connect.planner.pc_sym], null)))){
return p1__64075_SHARP_;
} else {
return null;
}
}),cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),root,branch_type], null)));
} else {
return null;
}
});
com.wsscode.pathom.connect.planner.add_after_node = (function com$wsscode$pathom$connect$planner$add_after_node(graph,node_id,after_node_id){
if(cljs.core.truth_(after_node_id)){
} else {
throw (new Error(["Assert failed: ","Tried to add after node with nil value","\n","after-node-id"].join('')));
}

return com.wsscode.pathom.connect.planner.update_node.cljs$core$IFn$_invoke$arity$5(graph,node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057),com.wsscode.pathom.misc.sconj,after_node_id);
});
com.wsscode.pathom.connect.planner.set_after_node = (function com$wsscode$pathom$connect$planner$set_after_node(graph,node_id,after_node_id){
if(cljs.core.truth_(after_node_id)){
} else {
throw (new Error(["Assert failed: ","Tried to set after node with nil value","\n","after-node-id"].join('')));
}

return com.wsscode.pathom.connect.planner.assoc_node(graph,node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057),cljs.core.PersistentHashSet.createAsIfByAssoc([after_node_id]));
});
com.wsscode.pathom.connect.planner.remove_after_node = (function com$wsscode$pathom$connect$planner$remove_after_node(graph,node_id,after_node_id){
var node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id);
var after_nodes_SINGLEQUOTE_ = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057).cljs$core$IFn$_invoke$arity$2(node,cljs.core.PersistentHashSet.EMPTY),after_node_id);
if(cljs.core.seq(after_nodes_SINGLEQUOTE_)){
return com.wsscode.pathom.connect.planner.assoc_node(graph,node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057),after_nodes_SINGLEQUOTE_);
} else {
if(cljs.core.truth_(node)){
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(graph,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id], null),cljs.core.dissoc,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057));
} else {
return graph;
}
}
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","same-resolver?","com.wsscode.pathom.connect.planner/same-resolver?",1991219581,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node1","node1",-1781864240),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null)),new cljs.core.Keyword(null,"node2","node2",-2031724393),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null))),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node1","node1",-1781864240),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null)),new cljs.core.Keyword(null,"node2","node2",-2031724393),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node1","node1",-1781864240),new cljs.core.Keyword(null,"node2","node2",-2031724393)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.nilable_impl(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),cljs.core.map_QMARK_,null),cljs.spec.alpha.nilable_impl(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),cljs.core.map_QMARK_,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null)),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node1","node1",-1781864240),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null)),new cljs.core.Keyword(null,"node2","node2",-2031724393),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),cljs.core.boolean_QMARK_,null,null),new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),null,null,null));


/**
 * Check if node1 and node2 have the same resolver name.
 * @type {function(?cljs.core.IMap, ?cljs.core.IMap): !boolean}
 */
com.wsscode.pathom.connect.planner.same_resolver_QMARK_ = (function com$wsscode$pathom$connect$planner$same_resolver_QMARK_(node1,node2){
var map__64086 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node1","node1",-1781864240),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null)),new cljs.core.Keyword(null,"node2","node2",-2031724393),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node1","node1",-1781864240),new cljs.core.Keyword(null,"node2","node2",-2031724393)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.nilable_impl(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),cljs.core.map_QMARK_,null),cljs.spec.alpha.nilable_impl(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),cljs.core.map_QMARK_,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null)),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node1","node1",-1781864240),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null)),new cljs.core.Keyword(null,"node2","node2",-2031724393),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),cljs.core.boolean_QMARK_,null,null),new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),null,null,null);
var map__64086__$1 = cljs.core.__destructure_map(map__64086);
var argspec64082 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64086__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec64083 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64086__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec64082)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:443 same-resolver?'s",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec64082,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node1,node2], null));
} else {
}

var f64085 = (function (node1__$1,node2__$1){
return cljs.core.boolean$((function (){var and__5043__auto__ = com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(node1__$1);
if(cljs.core.truth_(and__5043__auto__)){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(node1__$1),com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(node2__$1));
} else {
return and__5043__auto__;
}
})());
});
var ret64084 = f64085(node1,node2);
if(cljs.core.truth_(retspec64083)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:443 same-resolver?'s",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec64083,ret64084);
} else {
}

return ret64084;
});
/**
 * Update the node-id run-next value, if run-next is nil the property
 *   will be removed from the map.
 */
com.wsscode.pathom.connect.planner.set_node_run_next_STAR_ = (function com$wsscode$pathom$connect$planner$set_node_run_next_STAR_(graph,node_id,run_next){
if(cljs.core.truth_(run_next)){
return com.wsscode.pathom.connect.planner.assoc_node(graph,node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163),run_next);
} else {
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(graph,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id], null),cljs.core.dissoc,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163));
}
});
/**
 * Set the node run next value and add the after-node counter part. Noop if target
 *   and run next are the same node.
 */
com.wsscode.pathom.connect.planner.set_node_run_next = (function com$wsscode$pathom$connect$planner$set_node_run_next(graph,target_node_id,run_next){
var map__64087 = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,target_node_id);
var map__64087__$1 = cljs.core.__destructure_map(map__64087);
var target_run_next = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64087__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163));
var graph__$1 = (cljs.core.truth_(target_run_next)?com.wsscode.pathom.connect.planner.remove_after_node(graph,target_run_next,target_node_id):graph);
if(cljs.core.not(run_next)){
return com.wsscode.pathom.connect.planner.set_node_run_next_STAR_(graph__$1,target_node_id,run_next);
} else {
if(cljs.core.truth_((function (){var and__5043__auto__ = run_next;
if(cljs.core.truth_(and__5043__auto__)){
return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(target_node_id,run_next);
} else {
return and__5043__auto__;
}
})())){
return com.wsscode.pathom.connect.planner.add_after_node(com.wsscode.pathom.connect.planner.set_node_run_next_STAR_(graph__$1,target_node_id,run_next),run_next,target_node_id);
} else {
return graph__$1;

}
}
});
/**
 * Like set-node-run-next, but also checks if the target and next node are the same
 *   resolver, if so, this fn will collapse those nodes.
 */
com.wsscode.pathom.connect.planner.collapse_set_node_run_next = (function com$wsscode$pathom$connect$planner$collapse_set_node_run_next(graph,target_node_id,run_next){
var target_node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,target_node_id);
var next_node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,run_next);
if(com.wsscode.pathom.connect.planner.same_resolver_QMARK_(target_node,next_node)){
return (com.wsscode.pathom.connect.planner.collapse_nodes_chain.cljs$core$IFn$_invoke$arity$3 ? com.wsscode.pathom.connect.planner.collapse_nodes_chain.cljs$core$IFn$_invoke$arity$3(graph,target_node_id,run_next) : com.wsscode.pathom.connect.planner.collapse_nodes_chain.call(null,graph,target_node_id,run_next));
} else {
return com.wsscode.pathom.connect.planner.set_node_run_next(graph,target_node_id,run_next);
}
});
/**
 * When node-id is a branch node, remove all after-nodes associated from its children.
 */
com.wsscode.pathom.connect.planner.remove_branch_node_after_nodes = (function com$wsscode$pathom$connect$planner$remove_branch_node_after_nodes(graph,node_id){
var node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id);
var temp__5802__auto__ = com.wsscode.pathom.connect.planner.node_branches(node);
if(cljs.core.truth_(temp__5802__auto__)){
var branches = temp__5802__auto__;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (g,n_id){
return com.wsscode.pathom.connect.planner.remove_after_node(g,n_id,node_id);
}),graph,branches);
} else {
return graph;
}
});
/**
 * Remove a node from the graph. In case of resolver nodes it also removes them
 *   from the ::index-syms and after node references.
 */
com.wsscode.pathom.connect.planner.remove_node = (function com$wsscode$pathom$connect$planner$remove_node(graph,node_id){
var map__64089 = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id);
var map__64089__$1 = cljs.core.__destructure_map(map__64089);
var node = map__64089__$1;
var run_next = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64089__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163));
var after_nodes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64089__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057));
if((cljs.core.truth_(after_nodes)?cljs.core.every_QMARK_((function (p1__64088_SHARP_){
return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163).cljs$core$IFn$_invoke$arity$1(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,p1__64088_SHARP_)));
}),after_nodes):true)){
} else {
throw (new Error(["Assert failed: ","Tried to remove node that still contains references pointing to it. Move\n      the run-next references from the pointer nodes before removing it.","\n","(if after-nodes (every? (fn* [p1__64088#] (not= node-id (-> (get-node graph p1__64088#) :com.wsscode.pathom.connect.planner/run-next))) after-nodes) true)"].join('')));
}

return cljs.core.update.cljs$core$IFn$_invoke$arity$4(com.wsscode.pathom.connect.planner.remove_after_node(com.wsscode.pathom.connect.planner.remove_branch_node_after_nodes((function (){var G__64090 = graph;
if(cljs.core.truth_(com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(node))){
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(G__64090,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-syms","com.wsscode.pathom.connect.planner/index-syms",-1320415415),com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(node)], null),cljs.core.disj,node_id);
} else {
return G__64090;
}
})(),node_id),run_next,node_id),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),cljs.core.dissoc,node_id);
});
/**
 * Merge requires from node into target-node-id.
 */
com.wsscode.pathom.connect.planner.merge_node_requires = (function com$wsscode$pathom$connect$planner$merge_node_requires(graph,target_node_id,p__64091){
var map__64092 = p__64091;
var map__64092__$1 = cljs.core.__destructure_map(map__64092);
var requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64092__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289));
if(cljs.core.truth_(requires)){
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),target_node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289)], null),com.wsscode.pathom.connect.indexes.merge_io,requires);
} else {
return graph;
}
});
/**
 * Merge input from node into target-node-id.
 */
com.wsscode.pathom.connect.planner.merge_node_input = (function com$wsscode$pathom$connect$planner$merge_node_input(graph,target_node_id,p__64093){
var map__64094 = p__64093;
var map__64094__$1 = cljs.core.__destructure_map(map__64094);
var input = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64094__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","input","com.wsscode.pathom.connect.planner/input",713704915));
if(cljs.core.truth_(input)){
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),target_node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","input","com.wsscode.pathom.connect.planner/input",713704915)], null),com.wsscode.pathom.connect.indexes.merge_io,input);
} else {
return graph;
}
});
com.wsscode.pathom.connect.planner.add_warning = (function com$wsscode$pathom$connect$planner$add_warning(graph,warn){
return cljs.core.update.cljs$core$IFn$_invoke$arity$4(graph,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warnings","com.wsscode.pathom.connect.planner/warnings",-782452265),com.wsscode.pathom.misc.vconj,warn);
});
/**
 * Find conflicting keys between maps m1 and m2, same keys with same values are not
 *   considered conflicting keys.
 */
com.wsscode.pathom.connect.planner.params_conflicting_keys = (function com$wsscode$pathom$connect$planner$params_conflicting_keys(m1,m2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$1((function (p1__64095_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m1,p1__64095_SHARP_),cljs.core.get.cljs$core$IFn$_invoke$arity$2(m2,p1__64095_SHARP_));
})),clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(m1)),cljs.core.set(cljs.core.keys(m2))));
});
/**
 * Merge params of nodes, in case of conflicting keys a warning will be generated.
 */
com.wsscode.pathom.connect.planner.merge_nodes_params = (function com$wsscode$pathom$connect$planner$merge_nodes_params(graph,target_node_id,p__64096){
var map__64097 = p__64096;
var map__64097__$1 = cljs.core.__destructure_map(map__64097);
var params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64097__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","params","com.wsscode.pathom.connect.planner/params",600636577));
if(cljs.core.truth_(params)){
var conflict_keys = com.wsscode.pathom.connect.planner.params_conflicting_keys(params,cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),target_node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","params","com.wsscode.pathom.connect.planner/params",600636577)], null)));
var G__64098 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),target_node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","params","com.wsscode.pathom.connect.planner/params",600636577)], null),cljs.core.merge,params);
if(cljs.core.seq(conflict_keys)){
return com.wsscode.pathom.connect.planner.add_warning(G__64098,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),target_node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warn","com.wsscode.pathom.connect.planner/warn",-358637310),"Conflicting params on resolver call.",new cljs.core.Keyword("com.wsscode.pathom.connect.planner","conflict-params","com.wsscode.pathom.connect.planner/conflict-params",1544070537),conflict_keys], null));
} else {
return G__64098;
}
} else {
return graph;
}
});
/**
 * Merge the foreign-ast from two dynamic nodes, the operations adds each children from
 *   node into foreign-ast of the target node. This uses the requires to detect if some
 *   property is already on the query, so this must be called before merging requires to
 *   get the correct behavior.
 */
com.wsscode.pathom.connect.planner.merge_nodes_foreign_ast = (function com$wsscode$pathom$connect$planner$merge_nodes_foreign_ast(graph,target_node_id,p__64099){
var map__64100 = p__64099;
var map__64100__$1 = cljs.core.__destructure_map(map__64100);
var foreign_ast = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64100__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","foreign-ast","com.wsscode.pathom.connect.planner/foreign-ast",43189243));
var requires = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$3(graph,target_node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289));
if(cljs.core.truth_(foreign_ast)){
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(graph,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),target_node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","foreign-ast","com.wsscode.pathom.connect.planner/foreign-ast",43189243),new cljs.core.Keyword(null,"children","children",-940561982)], null),cljs.core.into,cljs.core.remove.cljs$core$IFn$_invoke$arity$1(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(requires,new cljs.core.Keyword(null,"key","key",-1516042587))),new cljs.core.Keyword(null,"children","children",-940561982).cljs$core$IFn$_invoke$arity$1(foreign_ast));
} else {
return graph;
}
});
/**
 * Updates target-node-id run-next with the run-next of the last argument. This will do an AND
 *   branch operation with node-id run-next and run-next, updating the reference of node-id
 *   run-next.
 */
com.wsscode.pathom.connect.planner.merge_nodes_run_next = (function com$wsscode$pathom$connect$planner$merge_nodes_run_next(p__64101,env,target_node_id,p__64102){
var map__64103 = p__64101;
var map__64103__$1 = cljs.core.__destructure_map(map__64103);
var graph = map__64103__$1;
var root = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64103__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
var map__64104 = p__64102;
var map__64104__$1 = cljs.core.__destructure_map(map__64104);
var run_next = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64104__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163));
var merge_into_node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,target_node_id);
var run_next_node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,run_next);
if(com.wsscode.pathom.connect.planner.same_resolver_QMARK_(merge_into_node,run_next_node)){
return (com.wsscode.pathom.connect.planner.collapse_dynamic_nodes.cljs$core$IFn$_invoke$arity$4 ? com.wsscode.pathom.connect.planner.collapse_dynamic_nodes.cljs$core$IFn$_invoke$arity$4(graph,env,target_node_id,run_next) : com.wsscode.pathom.connect.planner.collapse_dynamic_nodes.call(null,graph,env,target_node_id,run_next));
} else {
return com.wsscode.pathom.connect.planner.set_root_node((function (){var _LT__GT_ = (function (){var G__64105 = com.wsscode.pathom.connect.planner.set_root_node(graph,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163).cljs$core$IFn$_invoke$arity$1(merge_into_node));
var G__64106 = env;
var G__64107 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),run_next], null);
return (com.wsscode.pathom.connect.planner.compute_root_and.cljs$core$IFn$_invoke$arity$3 ? com.wsscode.pathom.connect.planner.compute_root_and.cljs$core$IFn$_invoke$arity$3(G__64105,G__64106,G__64107) : com.wsscode.pathom.connect.planner.compute_root_and.call(null,G__64105,G__64106,G__64107));
})();
return com.wsscode.pathom.connect.planner.collapse_set_node_run_next(_LT__GT_,target_node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243).cljs$core$IFn$_invoke$arity$1(_LT__GT_));
})(),root);
}
});
/**
 * Pulls source for attributes from node to target-node-id, also updates the attributes
 *   index to respect the transfer.
 */
com.wsscode.pathom.connect.planner.transfer_node_source_attrs = (function com$wsscode$pathom$connect$planner$transfer_node_source_attrs(graph,target_node_id,p__64110){
var map__64111 = p__64110;
var map__64111__$1 = cljs.core.__destructure_map(map__64111);
var source_for_attrs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64111__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","source-for-attrs","com.wsscode.pathom.connect.planner/source-for-attrs",629277833));
if(cljs.core.truth_(source_for_attrs)){
var _LT__GT_ = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),target_node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","source-for-attrs","com.wsscode.pathom.connect.planner/source-for-attrs",629277833)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into,cljs.core.PersistentHashSet.EMPTY),source_for_attrs);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__64108_SHARP_,p2__64109_SHARP_){
return cljs.core.assoc_in(p1__64108_SHARP_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097),p2__64109_SHARP_], null),target_node_id);
}),_LT__GT_,source_for_attrs);
} else {
return graph;
}
});
/**
 * Set the run next for each after node to be target-node-id.
 */
com.wsscode.pathom.connect.planner.transfer_node_after_nodes = (function com$wsscode$pathom$connect$planner$transfer_node_after_nodes(graph,target_node_id,p__64114){
var map__64115 = p__64114;
var map__64115__$1 = cljs.core.__destructure_map(map__64115);
var after_nodes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64115__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057));
if(cljs.core.seq(after_nodes)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__64112_SHARP_,p2__64113_SHARP_){
return com.wsscode.pathom.connect.planner.set_node_run_next(p1__64112_SHARP_,p2__64113_SHARP_,target_node_id);
}),graph,after_nodes);
} else {
return graph;
}
});
com.wsscode.pathom.connect.planner.collapse_nodes_branch = (function com$wsscode$pathom$connect$planner$collapse_nodes_branch(graph,env,target_node_id,node_id){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target_node_id,node_id)){
return graph;
} else {
var node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id);
return com.wsscode.pathom.connect.planner.remove_node(com.wsscode.pathom.connect.planner.transfer_node_after_nodes(com.wsscode.pathom.connect.planner.transfer_node_source_attrs(com.wsscode.pathom.connect.planner.merge_nodes_run_next(com.wsscode.pathom.connect.planner.merge_nodes_params(com.wsscode.pathom.connect.planner.merge_node_input(com.wsscode.pathom.connect.planner.merge_node_requires(com.wsscode.pathom.connect.planner.merge_nodes_foreign_ast(graph,target_node_id,node),target_node_id,node),target_node_id,node),target_node_id,node),env,target_node_id,node),target_node_id,node),target_node_id,node),node_id);
}
});
com.wsscode.pathom.connect.planner.collapse_dynamic_nodes = (function com$wsscode$pathom$connect$planner$collapse_dynamic_nodes(graph,env,target_node_id,node_id){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target_node_id,node_id)){
return graph;
} else {
var node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id);
return com.wsscode.pathom.connect.planner.remove_node(com.wsscode.pathom.connect.planner.transfer_node_after_nodes(com.wsscode.pathom.connect.planner.transfer_node_source_attrs(com.wsscode.pathom.connect.planner.merge_nodes_run_next(com.wsscode.pathom.connect.planner.merge_nodes_params(com.wsscode.pathom.connect.planner.merge_node_requires(com.wsscode.pathom.connect.planner.merge_nodes_foreign_ast(graph,target_node_id,node),target_node_id,node),target_node_id,node),env,target_node_id,node),target_node_id,node),target_node_id,node),node_id);
}
});
/**
 * Merge chained nodes:
 * 
 *   A -> B
 * 
 *   A is target node, B is the node, this collapses things and only A will exist after.
 */
com.wsscode.pathom.connect.planner.collapse_nodes_chain = (function com$wsscode$pathom$connect$planner$collapse_nodes_chain(graph,target_node_id,node_id){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target_node_id,node_id)){
return graph;
} else {
var node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id);
return com.wsscode.pathom.connect.planner.remove_node(com.wsscode.pathom.connect.planner.transfer_node_source_attrs(com.wsscode.pathom.connect.planner.transfer_node_after_nodes(com.wsscode.pathom.connect.planner.set_node_run_next(com.wsscode.pathom.connect.planner.merge_nodes_params(com.wsscode.pathom.connect.planner.merge_node_requires(com.wsscode.pathom.connect.planner.merge_nodes_foreign_ast(graph,target_node_id,node),target_node_id,node),target_node_id,node),target_node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163).cljs$core$IFn$_invoke$arity$1(node)),target_node_id,node),target_node_id,node),node_id);
}
});
/**
 * Given a branch node is the root, this function will add the new node as part
 *   of that branch node. If the node is a repeating dynamic node it will cause the new node
 *   to be collapsed into the already existent dynamic node.
 */
com.wsscode.pathom.connect.planner.add_branch_node = (function com$wsscode$pathom$connect$planner$add_branch_node(p__64116,p__64117,p__64118){
var map__64119 = p__64116;
var map__64119__$1 = cljs.core.__destructure_map(map__64119);
var graph = map__64119__$1;
var root = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64119__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
var map__64120 = p__64117;
var map__64120__$1 = cljs.core.__destructure_map(map__64120);
var env = map__64120__$1;
var branch_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64120__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","branch-type","com.wsscode.pathom.connect.planner/branch-type",-2006345895));
var map__64121 = p__64118;
var map__64121__$1 = cljs.core.__destructure_map(map__64121);
var node_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64121__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450));
var node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id);
var root_node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,root);
var collapse_node_id = com.wsscode.pathom.connect.planner.find_branch_node_to_merge(graph,env,node);
if(cljs.core.truth_(collapse_node_id)){
var G__64122 = com.wsscode.pathom.connect.planner.collapse_nodes_branch(graph,env,collapse_node_id,node_id);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(branch_type,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453))){
return com.wsscode.pathom.connect.planner.merge_node_requires(G__64122,root,com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id));
} else {
return G__64122;
}
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163).cljs$core$IFn$_invoke$arity$1(root_node),node_id)){
return graph;
} else {
if(cljs.core.truth_((function (){var and__5043__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(branch_type,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453));
if(and__5043__auto__){
var and__5043__auto____$1 = new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453).cljs$core$IFn$_invoke$arity$1(node);
if(cljs.core.truth_(and__5043__auto____$1)){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163).cljs$core$IFn$_invoke$arity$1(node),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163).cljs$core$IFn$_invoke$arity$1(root_node));
} else {
return and__5043__auto____$1;
}
} else {
return and__5043__auto__;
}
})())){
return com.wsscode.pathom.connect.planner.remove_node(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (g,node_id__$1){
var G__64123 = g;
var G__64124 = env;
var G__64125 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),node_id__$1], null);
return (com.wsscode.pathom.connect.planner.add_branch_node.cljs$core$IFn$_invoke$arity$3 ? com.wsscode.pathom.connect.planner.add_branch_node.cljs$core$IFn$_invoke$arity$3(G__64123,G__64124,G__64125) : com.wsscode.pathom.connect.planner.add_branch_node.call(null,G__64123,G__64124,G__64125));
}),graph,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453).cljs$core$IFn$_invoke$arity$1(node)),node_id);
} else {
var G__64126 = com.wsscode.pathom.connect.planner.add_after_node(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),root,branch_type], null),com.wsscode.pathom.misc.sconj,node_id),node_id,root);
var G__64126__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(branch_type,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453)))?com.wsscode.pathom.connect.planner.merge_node_requires(G__64126,root,node):G__64126);
if(cljs.core.truth_(com.wsscode.pathom.connect.planner.optimize_merge_QMARK_(graph,node))){
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(G__64126__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id], null),cljs.core.dissoc,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163));
} else {
return G__64126__$1;
}
}

}
}
});
com.wsscode.pathom.connect.planner.create_branch_node = (function com$wsscode$pathom$connect$planner$create_branch_node(p__64127,env,node,branch_node){
var map__64128 = p__64127;
var map__64128__$1 = cljs.core.__destructure_map(map__64128);
var graph = map__64128__$1;
var root = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64128__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
var root_next = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),root,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163)], null));
var optimize_next_QMARK_ = com.wsscode.pathom.connect.planner.optimize_merge_QMARK_(graph,node);
var branch_node__$1 = (function (){var G__64129 = branch_node;
if(cljs.core.truth_(optimize_next_QMARK_)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__64129,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163),root_next);
} else {
return G__64129;
}
})();
var branch_node_id = new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450).cljs$core$IFn$_invoke$arity$1(branch_node__$1);
return com.wsscode.pathom.connect.planner.add_branch_node(com.wsscode.pathom.connect.planner.set_root_node((function (){var G__64130 = com.wsscode.pathom.connect.planner.add_after_node(cljs.core.assoc_in(graph,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),branch_node_id], null),branch_node__$1),root,branch_node_id);
if(cljs.core.truth_(optimize_next_QMARK_)){
return com.wsscode.pathom.connect.planner.set_after_node(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(G__64130,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),root], null),cljs.core.dissoc,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163)),root_next,branch_node_id);
} else {
return G__64130;
}
})(),branch_node_id),env,node);
});
com.wsscode.pathom.connect.planner.branch_add_and_node = (function com$wsscode$pathom$connect$planner$branch_add_and_node(graph,branch_node_id,node_id){
return com.wsscode.pathom.connect.planner.add_after_node(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),branch_node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453)], null),com.wsscode.pathom.misc.sconj,node_id),node_id,branch_node_id);
});
com.wsscode.pathom.connect.planner.can_merge_and_nodes_QMARK_ = (function com$wsscode$pathom$connect$planner$can_merge_and_nodes_QMARK_(n1,n2){
return ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163).cljs$core$IFn$_invoke$arity$1(n1),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163).cljs$core$IFn$_invoke$arity$1(n2))) || ((((((new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163).cljs$core$IFn$_invoke$arity$1(n1) == null)) || ((new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163).cljs$core$IFn$_invoke$arity$1(n2) == null)))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453).cljs$core$IFn$_invoke$arity$1(n1),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453).cljs$core$IFn$_invoke$arity$1(n2))))));
});
/**
 * Collapse AND node next-node into AND node target-node-id.
 */
com.wsscode.pathom.connect.planner.collapse_and_nodes = (function com$wsscode$pathom$connect$planner$collapse_and_nodes(graph,target_node_id,node_id){
var map__64131 = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id);
var map__64131__$1 = cljs.core.__destructure_map(map__64131);
var node = map__64131__$1;
var run_and = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64131__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453));
var run_next = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64131__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163));
var target_node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,target_node_id);
if(com.wsscode.pathom.connect.planner.can_merge_and_nodes_QMARK_(target_node,node)){
} else {
throw (new Error(["Assert failed: ","Can't collapse AND nodes with different run-next values.","\n","(can-merge-and-nodes? target-node node)"].join('')));
}

if(cljs.core.truth_((function (){var and__5043__auto__ = new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453).cljs$core$IFn$_invoke$arity$1(target_node);
if(cljs.core.truth_(and__5043__auto__)){
return run_and;
} else {
return and__5043__auto__;
}
})())){
return com.wsscode.pathom.connect.planner.remove_node(com.wsscode.pathom.connect.planner.transfer_node_after_nodes(com.wsscode.pathom.connect.planner.set_node_run_next_STAR_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (graph__$1,loop_node_id){
return com.wsscode.pathom.connect.planner.branch_add_and_node(graph__$1,target_node_id,loop_node_id);
}),graph,run_and),target_node_id,(function (){var or__5045__auto__ = run_next;
if(cljs.core.truth_(or__5045__auto__)){
return or__5045__auto__;
} else {
return new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163).cljs$core$IFn$_invoke$arity$1(target_node);
}
})()),target_node_id,node),node_id);
} else {
return graph;
}
});
com.wsscode.pathom.connect.planner.compute_root_branch = (function com$wsscode$pathom$connect$planner$compute_root_branch(p__64132,p__64133,p__64134,branch_node_factory){
var map__64135 = p__64132;
var map__64135__$1 = cljs.core.__destructure_map(map__64135);
var graph = map__64135__$1;
var root = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64135__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
var map__64136 = p__64133;
var map__64136__$1 = cljs.core.__destructure_map(map__64136);
var env = map__64136__$1;
var branch_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64136__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","branch-type","com.wsscode.pathom.connect.planner/branch-type",-2006345895));
var map__64137 = p__64134;
var map__64137__$1 = cljs.core.__destructure_map(map__64137);
var node_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64137__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450));
if(cljs.core.truth_(node_id)){
var root_node = com.wsscode.pathom.connect.planner.get_root_node(graph);
var next_node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id);
var root_sym = com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(root_node);
var next_sym = com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(next_node);
if(cljs.core.not(next_node)){
return graph;
} else {
if(cljs.core.not(root_node)){
return com.wsscode.pathom.connect.planner.set_root_node(graph,node_id);
} else {
if(cljs.core.truth_((function (){var and__5043__auto__ = root_sym;
if(cljs.core.truth_(and__5043__auto__)){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(root_sym,next_sym);
} else {
return and__5043__auto__;
}
})())){
return com.wsscode.pathom.connect.planner.set_root_node(com.wsscode.pathom.connect.planner.collapse_nodes_branch(graph,env,node_id,root),node_id);
} else {
if(cljs.core.truth_((function (){var and__5043__auto__ = new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453).cljs$core$IFn$_invoke$arity$1(root_node);
if(cljs.core.truth_(and__5043__auto__)){
var and__5043__auto____$1 = new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453).cljs$core$IFn$_invoke$arity$1(next_node);
if(cljs.core.truth_(and__5043__auto____$1)){
return com.wsscode.pathom.connect.planner.can_merge_and_nodes_QMARK_(root_node,next_node);
} else {
return and__5043__auto____$1;
}
} else {
return and__5043__auto__;
}
})())){
return com.wsscode.pathom.connect.planner.collapse_and_nodes(graph,root,node_id);
} else {
if(cljs.core.truth_((function (){var and__5043__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(next_node,branch_type);
if(cljs.core.truth_(and__5043__auto__)){
return root_sym;
} else {
return and__5043__auto__;
}
})())){
return com.wsscode.pathom.connect.planner.add_branch_node(com.wsscode.pathom.connect.planner.set_root_node(graph,node_id),env,root_node);
} else {
if(cljs.core.truth_((function (){var and__5043__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(root_node,branch_type);
if(cljs.core.truth_(and__5043__auto__)){
return next_sym;
} else {
return and__5043__auto__;
}
})())){
return com.wsscode.pathom.connect.planner.add_branch_node(graph,env,next_node);
} else {
return com.wsscode.pathom.connect.planner.create_branch_node(graph,env,next_node,(branch_node_factory.cljs$core$IFn$_invoke$arity$0 ? branch_node_factory.cljs$core$IFn$_invoke$arity$0() : branch_node_factory.call(null)));

}
}
}
}
}
}
} else {
return graph;
}
});
com.wsscode.pathom.connect.planner.compute_root_or = (function com$wsscode$pathom$connect$planner$compute_root_or(p__64138,p__64139,p__64140){
var map__64141 = p__64138;
var map__64141__$1 = cljs.core.__destructure_map(map__64141);
var graph = map__64141__$1;
var root = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64141__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
var map__64142 = p__64139;
var map__64142__$1 = cljs.core.__destructure_map(map__64142);
var env = map__64142__$1;
var attribute = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64142__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075));
var map__64143 = p__64140;
var map__64143__$1 = cljs.core.__destructure_map(map__64143);
var node = map__64143__$1;
var node_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64143__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(root,node_id)){
return graph;
} else {
return com.wsscode.pathom.connect.planner.compute_root_branch(graph,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","branch-type","com.wsscode.pathom.connect.planner/branch-type",-2006345895),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664)),node,(function (){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),com.wsscode.pathom.connect.planner.next_node_id(env),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289),cljs.core.PersistentArrayMap.createAsIfByAssoc([attribute,cljs.core.PersistentArrayMap.EMPTY]),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664),cljs.core.PersistentHashSet.createAsIfByAssoc([new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243).cljs$core$IFn$_invoke$arity$1(graph)])], null);
}));
}
});
com.wsscode.pathom.connect.planner.compute_root_and = (function com$wsscode$pathom$connect$planner$compute_root_and(p__64144,env,p__64145){
var map__64146 = p__64144;
var map__64146__$1 = cljs.core.__destructure_map(map__64146);
var graph = map__64146__$1;
var root = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64146__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
var map__64147 = p__64145;
var map__64147__$1 = cljs.core.__destructure_map(map__64147);
var node = map__64147__$1;
var node_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64147__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(root,node_id)){
return graph;
} else {
return com.wsscode.pathom.connect.planner.compute_root_branch(graph,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","branch-type","com.wsscode.pathom.connect.planner/branch-type",-2006345895),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453)),node,(function (){
var map__64148 = com.wsscode.pathom.connect.planner.get_root_node(graph);
var map__64148__$1 = cljs.core.__destructure_map(map__64148);
var requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64148__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289));
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),com.wsscode.pathom.connect.planner.next_node_id(env),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289),requires,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),cljs.core.PersistentHashSet.createAsIfByAssoc([new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243).cljs$core$IFn$_invoke$arity$1(graph)])], null);
}));
}
});
com.wsscode.pathom.connect.planner.dynamic_base_provider_sym = new cljs.core.Symbol("com.wsscode.pathom.connect.planner","run-graph-base-provider","com.wsscode.pathom.connect.planner/run-graph-base-provider",506297033,null);
com.wsscode.pathom.connect.planner.inject_index_nested_provides = (function com$wsscode$pathom$connect$planner$inject_index_nested_provides(indexes,p__64149){
var map__64150 = p__64149;
var map__64150__$1 = cljs.core.__destructure_map(map__64150);
var env = map__64150__$1;
var attribute = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64150__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075));
var sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64150__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581));
var sym_provides = (function (){var or__5045__auto__ = com.wsscode.pathom.connect.planner.resolver_provides(env);
if(cljs.core.truth_(or__5045__auto__)){
return or__5045__auto__;
} else {
return cljs.core.PersistentArrayMap.createAsIfByAssoc([attribute,cljs.core.PersistentArrayMap.EMPTY]);
}
})();
var nested_provides = cljs.core.get.cljs$core$IFn$_invoke$arity$2(sym_provides,attribute);
return cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc_in(indexes,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256),com.wsscode.pathom.connect.planner.dynamic_base_provider_sym], null),cljs.core.PersistentArrayMap.createAsIfByAssoc([com.wsscode.pathom.connect.planner.pc_sym,com.wsscode.pathom.connect.planner.dynamic_base_provider_sym,com.wsscode.pathom.connect.planner.pc_dyn_sym,sym,com.wsscode.pathom.connect.planner.pc_provides,nested_provides])),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746),(function (oir){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (oir__$1,attr){
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(oir__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [attr,cljs.core.PersistentHashSet.EMPTY], null),com.wsscode.pathom.misc.sconj,com.wsscode.pathom.connect.planner.dynamic_base_provider_sym);
}),oir,cljs.core.keys(nested_provides));
}));
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","root-execution-node?","com.wsscode.pathom.connect.planner/root-execution-node?",774937667,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__64156){
return cljs.core.map_QMARK_(G__64156);
}),(function (G__64156){
return cljs.core.contains_QMARK_(G__64156,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979));
})], null),(function (G__64156){
return ((cljs.core.map_QMARK_(G__64156)) && (cljs.core.contains_QMARK_(G__64156,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)))], null),null])),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),cljs.core.boolean_QMARK_,null,null),new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),null,null,null));


/**
 * A node is a root execution is a node without any ancestors, or all ancestors
 *   are branch nodes.
 * @type {function(!cljs.core.IMap, *): !boolean}
 */
com.wsscode.pathom.connect.planner.root_execution_node_QMARK_ = (function com$wsscode$pathom$connect$planner$root_execution_node_QMARK_(graph,node_id){
var map__64157 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__64158){
return cljs.core.map_QMARK_(G__64158);
}),(function (G__64158){
return cljs.core.contains_QMARK_(G__64158,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979));
})], null),(function (G__64158){
return ((cljs.core.map_QMARK_(G__64158)) && (cljs.core.contains_QMARK_(G__64158,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)))], null),null])),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),cljs.core.boolean_QMARK_,null,null),new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),null,null,null);
var map__64157__$1 = cljs.core.__destructure_map(map__64157);
var retspec64153 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64157__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
var argspec64152 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64157__$1,new cljs.core.Keyword(null,"args","args",1315556576));
if(cljs.core.truth_(argspec64152)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:835 root-execution-node?'s",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec64152,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,node_id], null));
} else {
}

var f64155 = (function (graph__$1,node_id__$1){
var ancestors = (com.wsscode.pathom.connect.planner.node_ancestors.cljs$core$IFn$_invoke$arity$2 ? com.wsscode.pathom.connect.planner.node_ancestors.cljs$core$IFn$_invoke$arity$2(graph__$1,node_id__$1) : com.wsscode.pathom.connect.planner.node_ancestors.call(null,graph__$1,node_id__$1));
var nodes = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__64151_SHARP_){
return com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph__$1,p1__64151_SHARP_);
}),cljs.core.rest(ancestors));
return (cljs.core.count(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(com.wsscode.pathom.connect.planner.branch_node_QMARK_,nodes)) === (0));
});
var ret64154 = f64155(graph,node_id);
if(cljs.core.truth_(retspec64153)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:835 root-execution-node?'s",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec64153,ret64154);
} else {
}

return ret64154;
});
/**
 * Use AST children nodes and resolver provides data to compute the nested requirements
 *   for dynamic nodes.
 */
com.wsscode.pathom.connect.planner.compute_nested_node_details = (function com$wsscode$pathom$connect$planner$compute_nested_node_details(p__64163){
var map__64164 = p__64163;
var map__64164__$1 = cljs.core.__destructure_map(map__64164);
var env = map__64164__$1;
var ast = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64164__$1,new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957));
var ast__$1 = com.wsscode.pathom.core.maybe_merge_union_ast(ast);
var nested_graph = (function (){var G__64165 = com.wsscode.pathom.connect.planner.base_graph();
var G__64166 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(com.wsscode.pathom.connect.planner.inject_index_nested_provides(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([com.wsscode.pathom.connect.planner.base_env(),cljs.core.select_keys(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null))], 0)),env),com.wsscode.pathom.connect.planner.ast_node,ast__$1);
return (com.wsscode.pathom.connect.planner.compute_run_graph_STAR_.cljs$core$IFn$_invoke$arity$2 ? com.wsscode.pathom.connect.planner.compute_run_graph_STAR_.cljs$core$IFn$_invoke$arity$2(G__64165,G__64166) : com.wsscode.pathom.connect.planner.compute_run_graph_STAR_.call(null,G__64165,G__64166));
})();
var sym = com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(env);
var root_dyn_nodes = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (p1__64159_SHARP_){
return com.wsscode.pathom.connect.planner.root_execution_node_QMARK_(nested_graph,p1__64159_SHARP_);
})),cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__64160_SHARP_){
return com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(nested_graph,p1__64160_SHARP_);
}))),cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(nested_graph,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-syms","com.wsscode.pathom.connect.planner/index-syms",-1320415415),sym], null)));
var nodes_inputs = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$3(cljs.core.keep.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163)),cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__64161_SHARP_){
return com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(nested_graph,p1__64161_SHARP_);
})),cljs.core.keep.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","input","com.wsscode.pathom.connect.planner/input",713704915))),root_dyn_nodes);
var dyn_requires = cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(com.wsscode.pathom.connect.indexes.merge_io,cljs.core.keep.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289),root_dyn_nodes));
var final_deps = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(com.wsscode.pathom.connect.indexes.merge_io,com.wsscode.pathom.core.ast__GT_shape_descriptor(ast__$1),nodes_inputs);
var children_ast = cljs.core.update.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","foreign-ast","com.wsscode.pathom.connect.planner/foreign-ast",43189243).cljs$core$IFn$_invoke$arity$1(cljs.core.first(root_dyn_nodes)),new cljs.core.Keyword(null,"children","children",-940561982),(function (p1__64162_SHARP_){
return cljs.core.filterv(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(final_deps,new cljs.core.Keyword(null,"key","key",-1516042587)),p1__64162_SHARP_);
}));
var ast_SINGLEQUOTE_ = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"root","root",-448657453),new cljs.core.Keyword(null,"children","children",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(ast__$1,new cljs.core.Keyword(null,"query","query",-1288509510),edn_query_language.core.ast__GT_query(children_ast),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,"children","children",-940561982),new cljs.core.Keyword(null,"children","children",-940561982).cljs$core$IFn$_invoke$arity$1(children_ast)], 0))], null)], null);
return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289),cljs.core.select_keys(dyn_requires,cljs.core.keys(final_deps)),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","foreign-ast","com.wsscode.pathom.connect.planner/foreign-ast",43189243),ast_SINGLEQUOTE_], null);
});
/**
 * Create a new node representative to run a given resolver.
 */
com.wsscode.pathom.connect.planner.create_resolver_node = (function com$wsscode$pathom$connect$planner$create_resolver_node(graph,p__64167){
var map__64168 = p__64167;
var map__64168__$1 = cljs.core.__destructure_map(map__64168);
var env = map__64168__$1;
var ast = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64168__$1,new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957));
var run_next = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64168__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163));
var input = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64168__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","input","com.wsscode.pathom.connect.planner/input",713704915));
var source_sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64168__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","source-sym","com.wsscode.pathom.connect.planner/source-sym",-32676302));
var attribute = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64168__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075));
var sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64168__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581));
var nested = (cljs.core.truth_((function (){var and__5043__auto__ = cljs.core.seq(new cljs.core.Keyword(null,"children","children",-940561982).cljs$core$IFn$_invoke$arity$1(ast));
if(and__5043__auto__){
return com.wsscode.pathom.connect.planner.dynamic_resolver_QMARK_(env,sym);
} else {
return and__5043__auto__;
}
})())?com.wsscode.pathom.connect.planner.compute_nested_node_details(env):null);
var requires = (cljs.core.truth_(nested)?cljs.core.PersistentArrayMap.createAsIfByAssoc([attribute,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289).cljs$core$IFn$_invoke$arity$1(nested)]):cljs.core.PersistentArrayMap.createAsIfByAssoc([attribute,cljs.core.PersistentArrayMap.EMPTY]));
var next_node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,run_next);
var ast_params = new cljs.core.Keyword(null,"params","params",710516235).cljs$core$IFn$_invoke$arity$1(ast);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(sym,com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(next_node))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$4(next_node,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289),com.wsscode.pathom.connect.indexes.merge_io,requires),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","input","com.wsscode.pathom.connect.planner/input",713704915),input);
} else {
var G__64169 = cljs.core.PersistentArrayMap.createAsIfByAssoc([com.wsscode.pathom.connect.planner.pc_sym,sym,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),com.wsscode.pathom.connect.planner.next_node_id(env),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289),requires,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","input","com.wsscode.pathom.connect.planner/input",713704915),input]);
var G__64169__$1 = ((cljs.core.seq(ast_params))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__64169,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","params","com.wsscode.pathom.connect.planner/params",600636577),ast_params):G__64169);
var G__64169__$2 = (cljs.core.truth_(com.wsscode.pathom.connect.planner.dynamic_resolver_QMARK_(env,sym))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__64169__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","foreign-ast","com.wsscode.pathom.connect.planner/foreign-ast",43189243),(cljs.core.truth_(nested)?new cljs.core.Keyword("com.wsscode.pathom.connect.planner","foreign-ast","com.wsscode.pathom.connect.planner/foreign-ast",43189243).cljs$core$IFn$_invoke$arity$1(nested):new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"root","root",-448657453),new cljs.core.Keyword(null,"children","children",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ast], null)], null))):G__64169__$1);
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(sym,source_sym)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__64169__$2,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","source-sym","com.wsscode.pathom.connect.planner/source-sym",-32676302),source_sym);
} else {
return G__64169__$2;
}
}
});
com.wsscode.pathom.connect.planner.include_node = (function com$wsscode$pathom$connect$planner$include_node(graph,_env,p__64170){
var map__64171 = p__64170;
var map__64171__$1 = cljs.core.__destructure_map(map__64171);
var node = map__64171__$1;
var node_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64171__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450));
var sym = com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(node);
var G__64172 = cljs.core.assoc_in(graph,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id], null),node);
if(cljs.core.truth_(sym)){
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(G__64172,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-syms","com.wsscode.pathom.connect.planner/index-syms",-1320415415),sym], null),com.wsscode.pathom.misc.sconj,node_id);
} else {
return G__64172;
}
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","direct-node-successors","com.wsscode.pathom.connect.planner/direct-node-successors",1948882270,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),new cljs.core.Keyword(null,"ret","ret",-468222814),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node","node",581201198)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),null,new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__64177){
return cljs.core.coll_QMARK_(G__64177);
})], null),null),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),null,null,null));


/**
 * Direct successors of node, branch nodes and run-next, in case of branch nodes the
 *   branches will always come before the run-next.
 * @type {function(*): !cljs.core.ICollection}
 */
com.wsscode.pathom.connect.planner.direct_node_successors = (function com$wsscode$pathom$connect$planner$direct_node_successors(p__64178){
var map__64179 = p__64178;
var map__64179__$1 = cljs.core.__destructure_map(map__64179);
var node = map__64179__$1;
var run_next = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64179__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163));
var map__64180 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node","node",581201198)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),null,new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__64181){
return cljs.core.coll_QMARK_(G__64181);
})], null),null),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),null,null,null);
var map__64180__$1 = cljs.core.__destructure_map(map__64180);
var retspec64174 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64180__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
var argspec64173 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64180__$1,new cljs.core.Keyword(null,"args","args",1315556576));
if(cljs.core.truth_(argspec64173)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:924 direct-node-successors's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec64173,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [node], null));
} else {
}

var f64176 = (function (p__64182){
var map__64183 = p__64182;
var map__64183__$1 = cljs.core.__destructure_map(map__64183);
var node__$1 = map__64183__$1;
var run_next__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64183__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163));
var branches = com.wsscode.pathom.connect.planner.node_branches(node__$1);
var G__64184 = cljs.core.PersistentVector.EMPTY;
var G__64184__$1 = (cljs.core.truth_(branches)?cljs.core.into.cljs$core$IFn$_invoke$arity$2(G__64184,branches):G__64184);
if(cljs.core.truth_(run_next__$1)){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(G__64184__$1,run_next__$1);
} else {
return G__64184__$1;
}
});
var ret64175 = f64176(node);
if(cljs.core.truth_(retspec64174)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:924 direct-node-successors's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec64174,ret64175);
} else {
}

return ret64175;
});
com.wsscode.pathom.connect.planner.collect_syms = (function com$wsscode$pathom$connect$planner$collect_syms(var_args){
var G__64187 = arguments.length;
switch (G__64187) {
case 3:
return com.wsscode.pathom.connect.planner.collect_syms.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 4:
return com.wsscode.pathom.connect.planner.collect_syms.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
default:
throw (new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));

}
});

(com.wsscode.pathom.connect.planner.collect_syms.cljs$core$IFn$_invoke$arity$3 = (function (graph,env,node){
return com.wsscode.pathom.connect.planner.collect_syms.cljs$core$IFn$_invoke$arity$4(graph,env,node,cljs.core.PersistentHashSet.EMPTY);
}));

(com.wsscode.pathom.connect.planner.collect_syms.cljs$core$IFn$_invoke$arity$4 = (function (graph,env,p__64188,syms){
var map__64189 = p__64188;
var map__64189__$1 = cljs.core.__destructure_map(map__64189);
var node_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64189__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450));
var node = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(graph,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id], null));
var temp__5802__auto__ = com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(node);
if(cljs.core.truth_(temp__5802__auto__)){
var sym = temp__5802__auto__;
if(cljs.core.truth_(com.wsscode.pathom.connect.planner.dynamic_resolver_QMARK_(env,sym))){
return syms;
} else {
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(syms,sym);
}
} else {
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(syms,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((function (p1__64185_SHARP_){
return com.wsscode.pathom.connect.planner.collect_syms.cljs$core$IFn$_invoke$arity$3(graph,env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),p1__64185_SHARP_], null));
}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([com.wsscode.pathom.connect.planner.direct_node_successors(node)], 0)));
}
}));

(com.wsscode.pathom.connect.planner.collect_syms.cljs$lang$maxFixedArity = 4);

com.wsscode.pathom.connect.planner.all_attribute_resolvers = (function com$wsscode$pathom$connect$planner$all_attribute_resolvers(p__64190,attr){
var map__64191 = p__64190;
var map__64191__$1 = cljs.core.__destructure_map(map__64191);
var index_oir = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64191__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746));
var temp__5802__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(index_oir,attr);
if(cljs.core.truth_(temp__5802__auto__)){
var ir = temp__5802__auto__;
return cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.cat,cljs.core.vals(ir));
} else {
return cljs.core.PersistentHashSet.EMPTY;
}
});
com.wsscode.pathom.connect.planner.mark_node_unreachable = (function com$wsscode$pathom$connect$planner$mark_node_unreachable(previous_graph,graph,p__64192,env){
var map__64193 = p__64192;
var map__64193__$1 = cljs.core.__destructure_map(map__64193);
var unreachable_syms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64193__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-syms","com.wsscode.pathom.connect.planner/unreachable-syms",152766399));
var unreachable_attrs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64193__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-attrs","com.wsscode.pathom.connect.planner/unreachable-attrs",983807492));
var syms = cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-syms","com.wsscode.pathom.connect.planner/unreachable-syms",152766399).cljs$core$IFn$_invoke$arity$1(previous_graph),cljs.core.into.cljs$core$IFn$_invoke$arity$2(unreachable_syms,com.wsscode.pathom.connect.planner.collect_syms.cljs$core$IFn$_invoke$arity$3(graph,env,com.wsscode.pathom.connect.planner.get_root_node(graph))));
var G__64194 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(previous_graph,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-syms","com.wsscode.pathom.connect.planner/unreachable-syms",152766399),syms,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-attrs","com.wsscode.pathom.connect.planner/unreachable-attrs",983807492),unreachable_attrs], 0));
if(clojure.set.subset_QMARK_(com.wsscode.pathom.connect.planner.all_attribute_resolvers(env,com.wsscode.pathom.connect.planner.pc_attr.cljs$core$IFn$_invoke$arity$1(env)),syms)){
return cljs.core.update.cljs$core$IFn$_invoke$arity$4(G__64194,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-attrs","com.wsscode.pathom.connect.planner/unreachable-attrs",983807492),cljs.core.conj,com.wsscode.pathom.connect.planner.pc_attr.cljs$core$IFn$_invoke$arity$1(env));
} else {
return G__64194;
}
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","node-ancestors","com.wsscode.pathom.connect.planner/node-ancestors",1739651886,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword(null,"ret","ret",-468222814),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","vector?","cljs.core/vector?",-1550392028,null))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","vector?","cljs.core/vector?",-1550392028,null)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword(null,"kind","kind",-717265803),cljs.core.vector_QMARK_,new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),new cljs.core.Symbol("cljs.core","vector?","cljs.core/vector?",-1550392028,null),new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","vector?","cljs.core/vector?",-1550392028,null)),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__64199){
return cljs.core.vector_QMARK_(G__64199);
})], null),null),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","vector?","cljs.core/vector?",-1550392028,null)),null,null,null));


/**
 * Return all node ancestors. The order of the output will go from closest to farthest
 *   nodes, like breathing out of the current node.
 * @type {function(*, *): !cljs.core.IVector}
 */
com.wsscode.pathom.connect.planner.node_ancestors = (function com$wsscode$pathom$connect$planner$node_ancestors(graph,node_id){
var map__64200 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","vector?","cljs.core/vector?",-1550392028,null)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword(null,"kind","kind",-717265803),cljs.core.vector_QMARK_,new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),new cljs.core.Symbol("cljs.core","vector?","cljs.core/vector?",-1550392028,null),new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","vector?","cljs.core/vector?",-1550392028,null)),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__64201){
return cljs.core.vector_QMARK_(G__64201);
})], null),null),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","vector?","cljs.core/vector?",-1550392028,null)),null,null,null);
var map__64200__$1 = cljs.core.__destructure_map(map__64200);
var retspec64196 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64200__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
var argspec64195 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64200__$1,new cljs.core.Keyword(null,"args","args",1315556576));
if(cljs.core.truth_(argspec64195)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:971 node-ancestors's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec64195,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,node_id], null));
} else {
}

var f64198 = (function (graph__$1,node_id__$1){
var node_queue = com.wsscode.pathom.misc.queue.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [node_id__$1], null));
var ancestors = cljs.core.PersistentVector.EMPTY;
while(true){
var temp__5802__auto__ = cljs.core.peek(node_queue);
if(cljs.core.truth_(temp__5802__auto__)){
var node_id_SINGLEQUOTE_ = temp__5802__auto__;
var map__64203 = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph__$1,node_id_SINGLEQUOTE_);
var map__64203__$1 = cljs.core.__destructure_map(map__64203);
var after_nodes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64203__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057));
var G__64814 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.pop(node_queue),after_nodes);
var G__64815 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ancestors,node_id_SINGLEQUOTE_);
node_queue = G__64814;
ancestors = G__64815;
continue;
} else {
return ancestors;
}
break;
}
});
var ret64197 = f64198(graph,node_id);
if(cljs.core.truth_(retspec64196)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:971 node-ancestors's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec64196,ret64197);
} else {
}

return ret64197;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","node-successors","com.wsscode.pathom.connect.planner/node-successors",1769357414,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword(null,"ret","ret",-468222814),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),null,new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__64209){
return cljs.core.coll_QMARK_(G__64209);
})], null),null),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),null,null,null));


/**
 * Find successor nodes of node-id, node-id is included in the list. This will add
 *   branch nodes before run-next nodes. Returns a lazy sequence that traverse the graph
 *   as items are requested.
 * @type {function(*, *): !cljs.core.ICollection}
 */
com.wsscode.pathom.connect.planner.node_successors = (function com$wsscode$pathom$connect$planner$node_successors(graph,node_id){
var map__64210 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),null,new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__64211){
return cljs.core.coll_QMARK_(G__64211);
})], null),null),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),null,null,null);
var map__64210__$1 = cljs.core.__destructure_map(map__64210);
var retspec64206 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64210__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
var argspec64205 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64210__$1,new cljs.core.Keyword(null,"args","args",1315556576));
if(cljs.core.truth_(argspec64205)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:986 node-successors's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec64205,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,node_id], null));
} else {
}

var f64208 = (function (graph__$1,node_id__$1){
var successors = com.wsscode.pathom.connect.planner.direct_node_successors(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph__$1,node_id__$1));
if(cljs.core.seq(successors)){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node_id__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__64204_SHARP_){
return (com.wsscode.pathom.connect.planner.node_successors.cljs$core$IFn$_invoke$arity$2 ? com.wsscode.pathom.connect.planner.node_successors.cljs$core$IFn$_invoke$arity$2(graph__$1,p1__64204_SHARP_) : com.wsscode.pathom.connect.planner.node_successors.call(null,graph__$1,p1__64204_SHARP_));
}),successors)));
}),null,null));
} else {
return (new cljs.core.LazySeq(null,(function (){
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [node_id__$1], null);
}),null,null));

}
});
var ret64207 = f64208(graph,node_id);
if(cljs.core.truth_(retspec64206)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:986 node-successors's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec64206,ret64207);
} else {
}

return ret64207;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","resolver-node-requires-attribute?","com.wsscode.pathom.connect.planner/resolver-node-requires-attribute?",-1538827854,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"arg1","arg1",951899358),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"arg1","arg1",951899358),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"arg1","arg1",951899358),new cljs.core.Keyword(null,"attribute","attribute",-2074029119)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"arg1","arg1",951899358),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),cljs.core.boolean_QMARK_,null,null),new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),null,null,null));


/**
 * @type {function(*, *): !boolean}
 */
com.wsscode.pathom.connect.planner.resolver_node_requires_attribute_QMARK_ = (function com$wsscode$pathom$connect$planner$resolver_node_requires_attribute_QMARK_(p__64217,attribute){
var map__64218 = p__64217;
var map__64218__$1 = cljs.core.__destructure_map(map__64218);
var arg_64212 = map__64218__$1;
var requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64218__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289));
var sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64218__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","sym","com.wsscode.pathom.connect.planner/sym",-805794815));
var map__64219 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"arg1","arg1",951899358),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"arg1","arg1",951899358),new cljs.core.Keyword(null,"attribute","attribute",-2074029119)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"arg1","arg1",951899358),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),cljs.core.boolean_QMARK_,null,null),new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),null,null,null);
var map__64219__$1 = cljs.core.__destructure_map(map__64219);
var argspec64213 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64219__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec64214 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64219__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec64213)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1000 resolver-node-requires-attribute?'s",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec64213,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg_64212,attribute], null));
} else {
}

var f64216 = (function (p__64220,attribute__$1){
var map__64221 = p__64220;
var map__64221__$1 = cljs.core.__destructure_map(map__64221);
var arg_64212__$1 = map__64221__$1;
var requires__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64221__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289));
var sym__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64221__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","sym","com.wsscode.pathom.connect.planner/sym",-805794815));
return cljs.core.boolean$((function (){var and__5043__auto__ = sym__$1;
if(cljs.core.truth_(and__5043__auto__)){
return cljs.core.contains_QMARK_(requires__$1,attribute__$1);
} else {
return and__5043__auto__;
}
})());
});
var ret64215 = f64216(arg_64212,attribute);
if(cljs.core.truth_(retspec64214)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1000 resolver-node-requires-attribute?'s",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec64214,ret64215);
} else {
}

return ret64215;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","find-attribute-resolver-in-successors","com.wsscode.pathom.connect.planner/find-attribute-resolver-in-successors",-1688698550,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword(null,"attribute","attribute",-2074029119)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null,null,null));


/**
 * Find the nodes that get the data required for the require in the OR node.
 * @type {function(*, *, *): *}
 */
com.wsscode.pathom.connect.planner.find_attribute_resolver_in_successors = (function com$wsscode$pathom$connect$planner$find_attribute_resolver_in_successors(graph,node_id,attribute){
var map__64227 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword(null,"attribute","attribute",-2074029119)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null,null,null);
var map__64227__$1 = cljs.core.__destructure_map(map__64227);
var argspec64223 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64227__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec64224 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64227__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec64223)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1005 find-attribute-resolver-in-successors's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec64223,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,node_id,attribute], null));
} else {
}

var f64226 = (function (graph__$1,node_id__$1,attribute__$1){
return cljs.core.first(cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__64222_SHARP_){
return com.wsscode.pathom.connect.planner.resolver_node_requires_attribute_QMARK_(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph__$1,p1__64222_SHARP_),attribute__$1);
}),com.wsscode.pathom.connect.planner.node_successors(graph__$1,node_id__$1)));
});
var ret64225 = f64226(graph,node_id,attribute);
if(cljs.core.truth_(retspec64224)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1005 find-attribute-resolver-in-successors's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec64224,ret64225);
} else {
}

return ret64225;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","first-common-ancestor","com.wsscode.pathom.connect.planner/first-common-ancestor",-1105719278,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-ids","node-ids",2015830052),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-ids","node-ids",2015830052),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-ids","node-ids",2015830052)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-ids","node-ids",2015830052),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null,null,null));


/**
 * Find first common node ancestor given a list of node ids.
 * @type {function(*, *): *}
 */
com.wsscode.pathom.connect.planner.first_common_ancestor = (function com$wsscode$pathom$connect$planner$first_common_ancestor(graph,node_ids){
var map__64234 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-ids","node-ids",2015830052),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-ids","node-ids",2015830052)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-ids","node-ids",2015830052),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null,null,null);
var map__64234__$1 = cljs.core.__destructure_map(map__64234);
var retspec64231 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64234__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
var argspec64230 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64234__$1,new cljs.core.Keyword(null,"args","args",1315556576));
if(cljs.core.truth_(argspec64230)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1013 first-common-ancestor's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec64230,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,node_ids], null));
} else {
}

var f64233 = (function (graph__$1,node_ids__$1){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(node_ids__$1))){
return cljs.core.first(node_ids__$1);
} else {
var ancestors = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__64228_SHARP_){
return com.wsscode.pathom.connect.planner.node_ancestors(graph__$1,p1__64228_SHARP_);
}),node_ids__$1);
var ancestors_SINGLEQUOTE_ = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1((function (p1__64229_SHARP_){
return cljs.core.next(p1__64229_SHARP_);
})),ancestors);
var nodes_SINGLEQUOTE_ = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$1(ancestors_SINGLEQUOTE_),node_ids__$1);
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(node_ids__$1),cljs.core.count(nodes_SINGLEQUOTE_))){
return (com.wsscode.pathom.connect.planner.first_common_ancestor.cljs$core$IFn$_invoke$arity$2 ? com.wsscode.pathom.connect.planner.first_common_ancestor.cljs$core$IFn$_invoke$arity$2(graph__$1,nodes_SINGLEQUOTE_) : com.wsscode.pathom.connect.planner.first_common_ancestor.call(null,graph__$1,nodes_SINGLEQUOTE_));
} else {
return cljs.core.first(cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (node_chain,new_chain){
var chain_set = cljs.core.set(node_chain);
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(chain_set,new_chain);
}),ancestors));
}
}
});
var ret64232 = f64233(graph,node_ids);
if(cljs.core.truth_(retspec64231)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1013 first-common-ancestor's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec64231,ret64232);
} else {
}

return ret64232;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","find-missing-ancestor","com.wsscode.pathom.connect.planner/find-missing-ancestor",1979498976,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"missing","missing",362507769),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205)),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"missing","missing",362507769),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"missing","missing",362507769)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"missing","missing",362507769),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null,null,null));


/**
 * Find the first common AND node ancestors from missing list, missing is a list
 *   of attributes
 * @type {function(*, *): *}
 */
com.wsscode.pathom.connect.planner.find_missing_ancestor = (function com$wsscode$pathom$connect$planner$find_missing_ancestor(graph,missing){
var map__64239 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"missing","missing",362507769),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"missing","missing",362507769)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"missing","missing",362507769),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null,null,null);
var map__64239__$1 = cljs.core.__destructure_map(map__64239);
var argspec64235 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64239__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec64236 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64239__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec64235)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1031 find-missing-ancestor's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec64235,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,missing], null));
} else {
}

var f64238 = (function (graph__$1,missing__$1){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(missing__$1))){
return com.wsscode.pathom.connect.planner.get_attribute_node(graph__$1,cljs.core.first(missing__$1));
} else {
return com.wsscode.pathom.connect.planner.first_common_ancestor(graph__$1,cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(com.wsscode.pathom.connect.planner.get_attribute_node,graph__$1)),missing__$1));
}
});
var ret64237 = f64238(graph,missing);
if(cljs.core.truth_(retspec64236)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1031 find-missing-ancestor's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec64236,ret64237);
} else {
}

return ret64237;
});
/**
 * Start a recursive call to process the dependencies required by the resolver. It
 *   sets the ::run-next data at the env, it will be used to link the nodes after they
 *   are created in the process.
 */
com.wsscode.pathom.connect.planner.compute_missing_chain = (function com$wsscode$pathom$connect$planner$compute_missing_chain(graph,p__64241,missing){
var map__64242 = p__64241;
var map__64242__$1 = cljs.core.__destructure_map(map__64242);
var env = map__64242__$1;
var graph_before_missing_chain = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64242__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph-before-missing-chain","com.wsscode.pathom.connect.planner/graph-before-missing-chain",1272805834));

if(cljs.core.seq(missing)){
var map__64243 = (function (){var G__64244 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(graph,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
var G__64245 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$4(cljs.core.update.cljs$core$IFn$_invoke$arity$4(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,com.wsscode.pathom.connect.planner.pc_attr),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next-trail","com.wsscode.pathom.connect.planner/run-next-trail",-1115570698),com.wsscode.pathom.misc.sconj,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243).cljs$core$IFn$_invoke$arity$1(graph)),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","attr-deps-trail","com.wsscode.pathom.connect.planner/attr-deps-trail",1387730776),com.wsscode.pathom.misc.sconj,com.wsscode.pathom.connect.planner.pc_attr.cljs$core$IFn$_invoke$arity$1(env)),com.wsscode.pathom.connect.planner.ast_node,edn_query_language.core.query__GT_ast(cljs.core.vec(missing)));
return (com.wsscode.pathom.connect.planner.compute_run_graph_STAR_.cljs$core$IFn$_invoke$arity$2 ? com.wsscode.pathom.connect.planner.compute_run_graph_STAR_.cljs$core$IFn$_invoke$arity$2(G__64244,G__64245) : com.wsscode.pathom.connect.planner.compute_run_graph_STAR_.call(null,G__64244,G__64245));
})();
var map__64243__$1 = cljs.core.__destructure_map(map__64243);
var graph_SINGLEQUOTE_ = map__64243__$1;
var index_attrs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64243__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097));
var still_missing = cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (){var or__5045__auto__ = index_attrs;
if(cljs.core.truth_(or__5045__auto__)){
return or__5045__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),missing);
var all_provided_QMARK_ = cljs.core.not(cljs.core.seq(still_missing));
if(all_provided_QMARK_){
var ancestor = com.wsscode.pathom.connect.planner.find_missing_ancestor(graph_SINGLEQUOTE_,missing);
if(cljs.core.truth_(ancestor)){
} else {
throw (new Error(["Assert failed: ","Error finding ancestor during missing chain computation","\n","ancestor"].join('')));
}

var G__64246 = com.wsscode.pathom.connect.planner.merge_nodes_run_next(graph_SINGLEQUOTE_,env,ancestor,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243).cljs$core$IFn$_invoke$arity$1(graph)], null));
if(cljs.core.truth_(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453).cljs$core$IFn$_invoke$arity$1(com.wsscode.pathom.connect.planner.get_root_node(graph_SINGLEQUOTE_)))){
return com.wsscode.pathom.connect.planner.merge_node_requires(G__64246,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243).cljs$core$IFn$_invoke$arity$1(graph_SINGLEQUOTE_),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289),cljs.core.zipmap(missing,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY))], null));
} else {
return G__64246;
}
} else {
var map__64247 = com.wsscode.pathom.connect.planner.mark_node_unreachable(graph_before_missing_chain,graph,graph_SINGLEQUOTE_,env);
var map__64247__$1 = cljs.core.__destructure_map(map__64247);
var out_SINGLEQUOTE_ = map__64247__$1;
var unreachable_syms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64247__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-syms","com.wsscode.pathom.connect.planner/unreachable-syms",152766399));
var unreachable_attrs = cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__64240_SHARP_){
return clojure.set.subset_QMARK_(com.wsscode.pathom.connect.planner.all_attribute_resolvers(env,p1__64240_SHARP_),unreachable_syms);
}),still_missing);
return cljs.core.update.cljs$core$IFn$_invoke$arity$4(out_SINGLEQUOTE_,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-attrs","com.wsscode.pathom.connect.planner/unreachable-attrs",983807492),cljs.core.into,unreachable_attrs);
}
} else {
return graph;
}
});
/**
 * Find the runner symbol for a resolver, on normal resolvers that is the resolver symbol,
 *   but for foreign resolvers it uses its ::pc/dynamic-sym.
 */
com.wsscode.pathom.connect.planner.runner_node_sym = (function com$wsscode$pathom$connect$planner$runner_node_sym(p__64248,sym){
var map__64249 = p__64248;
var map__64249__$1 = cljs.core.__destructure_map(map__64249);
var index_resolvers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64249__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256));
var resolver = cljs.core.get.cljs$core$IFn$_invoke$arity$2(index_resolvers,sym);
var or__5045__auto__ = com.wsscode.pathom.connect.planner.pc_dyn_sym.cljs$core$IFn$_invoke$arity$1(resolver);
if(cljs.core.truth_(or__5045__auto__)){
return or__5045__auto__;
} else {
return sym;
}
});
com.wsscode.pathom.connect.planner.compute_resolver_graph = (function com$wsscode$pathom$connect$planner$compute_resolver_graph(p__64250,env,resolver){
var map__64251 = p__64250;
var map__64251__$1 = cljs.core.__destructure_map(map__64251);
var graph = map__64251__$1;
var unreachable_syms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64251__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-syms","com.wsscode.pathom.connect.planner/unreachable-syms",152766399));
var resolver_SINGLEQUOTE_ = com.wsscode.pathom.connect.planner.runner_node_sym(env,resolver);
if(cljs.core.contains_QMARK_(unreachable_syms,resolver_SINGLEQUOTE_)){
return graph;
} else {
var env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(env,com.wsscode.pathom.connect.planner.pc_sym,resolver_SINGLEQUOTE_,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword("com.wsscode.pathom.connect.planner","source-sym","com.wsscode.pathom.connect.planner/source-sym",-32676302),resolver], 0));
var node = com.wsscode.pathom.connect.planner.create_resolver_node(graph,env__$1);
return com.wsscode.pathom.connect.planner.compute_root_or(com.wsscode.pathom.connect.planner.include_node(graph,env__$1,node),env__$1,node);

}
});
com.wsscode.pathom.connect.planner.compute_input_resolvers_graph = (function com$wsscode$pathom$connect$planner$compute_input_resolvers_graph(graph,p__64254,inputs,resolvers){
var map__64255 = p__64254;
var map__64255__$1 = cljs.core.__destructure_map(map__64255);
var env = map__64255__$1;
var available_data = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64255__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117));
var missing = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$1((function (p1__64252_SHARP_){
return cljs.core.contains_QMARK_(available_data,p1__64252_SHARP_);
})),inputs);
var env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","input","com.wsscode.pathom.connect.planner/input",713704915),cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__64253_SHARP_){
return cljs.core.PersistentHashMap.fromArrays([p1__64253_SHARP_],[cljs.core.PersistentArrayMap.EMPTY]);
})),inputs));
if(cljs.core.contains_QMARK_(inputs,com.wsscode.pathom.connect.planner.pc_attr.cljs$core$IFn$_invoke$arity$1(env__$1))){
return graph;
} else {
var _LT__GT_ = graph;
var _LT__GT___$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(_LT__GT_,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
var _LT__GT___$2 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (graph__$1,resolver){
return com.wsscode.pathom.connect.planner.compute_resolver_graph(graph__$1,env__$1,resolver);
}),_LT__GT___$1,resolvers);
if(cljs.core.truth_(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243).cljs$core$IFn$_invoke$arity$1(_LT__GT___$2))){
return com.wsscode.pathom.connect.planner.compute_root_or(com.wsscode.pathom.connect.planner.compute_missing_chain(_LT__GT___$2,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph-before-missing-chain","com.wsscode.pathom.connect.planner/graph-before-missing-chain",1272805834),graph),missing),env__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243).cljs$core$IFn$_invoke$arity$1(graph)], null));
} else {
return com.wsscode.pathom.connect.planner.set_root_node(_LT__GT___$2,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243).cljs$core$IFn$_invoke$arity$1(graph));
}
}
});
/**
 * Walks the graph run next chain until it finds the node that's providing the
 *   attribute.
 */
com.wsscode.pathom.connect.planner.node_for_attribute_in_chain = (function com$wsscode$pathom$connect$planner$node_for_attribute_in_chain(graph,p__64257,root){
var map__64258 = p__64257;
var map__64258__$1 = cljs.core.__destructure_map(map__64258);
var env = map__64258__$1;
var attribute = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64258__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075));
var node_id = root;
while(true){
var map__64259 = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id);
var map__64259__$1 = cljs.core.__destructure_map(map__64259);
var run_next = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64259__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163));
var requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64259__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289));
var run_and = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64259__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453));
if(cljs.core.truth_(run_and)){
return cljs.core.some(((function (node_id,map__64259,map__64259__$1,run_next,requires,run_and,map__64258,map__64258__$1,env,attribute){
return (function (p1__64256_SHARP_){
return (com.wsscode.pathom.connect.planner.node_for_attribute_in_chain.cljs$core$IFn$_invoke$arity$3 ? com.wsscode.pathom.connect.planner.node_for_attribute_in_chain.cljs$core$IFn$_invoke$arity$3(graph,env,p1__64256_SHARP_) : com.wsscode.pathom.connect.planner.node_for_attribute_in_chain.call(null,graph,env,p1__64256_SHARP_));
});})(node_id,map__64259,map__64259__$1,run_next,requires,run_and,map__64258,map__64258__$1,env,attribute))
,(function (){var G__64260 = run_and;
if(cljs.core.truth_(run_next)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [run_next], null),G__64260);
} else {
return G__64260;
}
})());
} else {
if(cljs.core.contains_QMARK_(requires,attribute)){
return node_id;
} else {
if(cljs.core.truth_(run_next)){
var G__64854 = run_next;
node_id = G__64854;
continue;
} else {
return null;
}
}
}
break;
}
});
com.wsscode.pathom.connect.planner.set_node_source_for_attrs = (function com$wsscode$pathom$connect$planner$set_node_source_for_attrs(graph,p__64261){
var map__64262 = p__64261;
var map__64262__$1 = cljs.core.__destructure_map(map__64262);
var env = map__64262__$1;
var attribute = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64262__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075));
var temp__5802__auto__ = com.wsscode.pathom.connect.planner.node_for_attribute_in_chain(graph,env,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243).cljs$core$IFn$_invoke$arity$1(graph));
if(cljs.core.truth_(temp__5802__auto__)){
var node_id = temp__5802__auto__;
return cljs.core.update.cljs$core$IFn$_invoke$arity$5(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","source-for-attrs","com.wsscode.pathom.connect.planner/source-for-attrs",629277833)], null),com.wsscode.pathom.misc.sconj,attribute),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097),cljs.core.assoc,attribute,cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(graph,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097),attribute], null),node_id));
} else {
return graph;
}
});
/**
 * Computes ancestor chain for a given node, it only walks as long as there is a single
 *   parent on the node, if there is a fork (multiple after-nodes) it will stop.
 */
com.wsscode.pathom.connect.planner.node_direct_ancestor_chain = (function com$wsscode$pathom$connect$planner$node_direct_ancestor_chain(graph,node_id){
var node_id_SINGLEQUOTE_ = node_id;
var visited = cljs.core.PersistentHashSet.EMPTY;
var chain = cljs.core.List.EMPTY;
while(true){
if(cljs.core.contains_QMARK_(visited,node_id_SINGLEQUOTE_)){
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["Ancestors Cycle detected",visited,node_id_SINGLEQUOTE_], 0));

return chain;
} else {
var map__64264 = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id_SINGLEQUOTE_);
var map__64264__$1 = cljs.core.__destructure_map(map__64264);
var after_nodes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64264__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057));
var next_id = cljs.core.first(after_nodes);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(after_nodes))){
var G__64855 = next_id;
var G__64856 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(visited,node_id_SINGLEQUOTE_);
var G__64857 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(chain,node_id_SINGLEQUOTE_);
node_id_SINGLEQUOTE_ = G__64855;
visited = G__64856;
chain = G__64857;
continue;
} else {
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(chain,node_id_SINGLEQUOTE_);
}
}
break;
}
});
/**
 * Traverse node after-node chain and returns the most distant resolver ancestor node id.
 *   This only walks though resolver nodes, branch nodes are removed.
 */
com.wsscode.pathom.connect.planner.find_first_ancestor = (function com$wsscode$pathom$connect$planner$find_first_ancestor(graph,node_id){
return cljs.core.first(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664),(function (p1__64266_SHARP_){
return com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,p1__64266_SHARP_);
})),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),(function (p1__64265_SHARP_){
return com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,p1__64265_SHARP_);
})),com.wsscode.pathom.connect.planner.node_direct_ancestor_chain(graph,node_id))));
});
com.wsscode.pathom.connect.planner.push_root_to_ancestor = (function com$wsscode$pathom$connect$planner$push_root_to_ancestor(graph,node_id){
return com.wsscode.pathom.connect.planner.set_root_node(graph,com.wsscode.pathom.connect.planner.find_first_ancestor(graph,node_id));
});
com.wsscode.pathom.connect.planner.compute_attribute_graph_STAR_ = (function com$wsscode$pathom$connect$planner$compute_attribute_graph_STAR_(p__64267,p__64268){
var map__64269 = p__64267;
var map__64269__$1 = cljs.core.__destructure_map(map__64269);
var graph = map__64269__$1;
var root = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64269__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
var map__64270 = p__64268;
var map__64270__$1 = cljs.core.__destructure_map(map__64270);
var env = map__64270__$1;
var index_oir = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64270__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746));
var attribute = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64270__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075));
if(cljs.core.truth_(com.wsscode.pathom.connect.planner.get_attribute_node(graph,attribute))){
var node_id = com.wsscode.pathom.connect.planner.get_attribute_node(graph,attribute);
return com.wsscode.pathom.connect.planner.compute_root_and(com.wsscode.pathom.connect.planner.push_root_to_ancestor(com.wsscode.pathom.connect.planner.merge_node_requires(graph,node_id,cljs.core.PersistentArrayMap.createAsIfByAssoc([attribute,cljs.core.PersistentArrayMap.EMPTY])),node_id),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),root], null));
} else {
var graph_SINGLEQUOTE_ = (function (){var _LT__GT_ = graph;
var _LT__GT___$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(_LT__GT_,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
var _LT__GT___$2 = cljs.core.reduce_kv((function (graph__$1,inputs,resolvers){
return com.wsscode.pathom.connect.planner.compute_input_resolvers_graph(graph__$1,env,inputs,resolvers);
}),_LT__GT___$1,cljs.core.get.cljs$core$IFn$_invoke$arity$2(index_oir,attribute));
return com.wsscode.pathom.connect.planner.set_node_source_for_attrs(_LT__GT___$2,env);
})();
if(cljs.core.truth_(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243).cljs$core$IFn$_invoke$arity$1(graph_SINGLEQUOTE_))){
return com.wsscode.pathom.connect.planner.compute_root_and(graph_SINGLEQUOTE_,env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),root], null));
} else {
return com.wsscode.pathom.connect.planner.set_root_node(graph_SINGLEQUOTE_,root);
}

}
});
/**
 * Compute the run graph for a given attribute.
 */
com.wsscode.pathom.connect.planner.compute_attribute_graph = (function com$wsscode$pathom$connect$planner$compute_attribute_graph(p__64271,p__64272){
var map__64273 = p__64271;
var map__64273__$1 = cljs.core.__destructure_map(map__64273);
var graph = map__64273__$1;
var unreachable_attrs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64273__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-attrs","com.wsscode.pathom.connect.planner/unreachable-attrs",983807492));
var map__64274 = p__64272;
var map__64274__$1 = cljs.core.__destructure_map(map__64274);
var env = map__64274__$1;
var map__64275 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64274__$1,new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957));
var map__64275__$1 = cljs.core.__destructure_map(map__64275);
var attr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64275__$1,new cljs.core.Keyword(null,"key","key",-1516042587));
var available_data = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64274__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117));
var attr_deps_trail = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64274__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","attr-deps-trail","com.wsscode.pathom.connect.planner/attr-deps-trail",1387730776));
var index_oir = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64274__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746));
var env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,com.wsscode.pathom.connect.planner.pc_attr,attr);
if(((cljs.core.contains_QMARK_(available_data,attr)) || (((cljs.core.contains_QMARK_(unreachable_attrs,attr)) || (cljs.core.contains_QMARK_(attr_deps_trail,attr)))))){
return graph;
} else {
if(cljs.core.contains_QMARK_(index_oir,attr)){
return com.wsscode.pathom.connect.planner.compute_attribute_graph_STAR_(graph,env__$1);
} else {
return com.wsscode.pathom.connect.planner.add_unreachable_attr(graph,attr);

}
}
});
com.wsscode.pathom.connect.planner.compute_run_graph_STAR_ = (function com$wsscode$pathom$connect$planner$compute_run_graph_STAR_(graph,env){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (graph__$1,ast){
if(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"prop","prop",-515168332),null,new cljs.core.Keyword(null,"join","join",-758861890),null], null), null),new cljs.core.Keyword(null,"type","type",1174270348).cljs$core$IFn$_invoke$arity$1(ast))){
return com.wsscode.pathom.connect.planner.compute_attribute_graph(graph__$1,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),ast));
} else {
return graph__$1;
}
}),graph,cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(edn_query_language.core.ident_QMARK_,new cljs.core.Keyword(null,"key","key",-1516042587)),new cljs.core.Keyword(null,"children","children",-940561982).cljs$core$IFn$_invoke$arity$1(com.wsscode.pathom.connect.planner.ast_node.cljs$core$IFn$_invoke$arity$1(env))));
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","compute-run-graph","com.wsscode.pathom.connect.planner/compute-run-graph",475659728,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"arity-2","arity-2",-1366521503),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null))),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null))),new cljs.core.Keyword(null,"arity-1","arity-1",105892478),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null)))),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"arity-2","arity-2",-1366521503),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null))),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null))),new cljs.core.Keyword(null,"arity-1","arity-1",105892478),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null)))),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"arity-2","arity-2",-1366521503),new cljs.core.Keyword(null,"arity-1","arity-1",105892478)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null))),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null))),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"env","env",-1815813235)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.nilable_impl(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__64285){
return cljs.core.map_QMARK_(G__64285);
})], null),(function (G__64285){
return cljs.core.map_QMARK_(G__64285);
}),cljs.core.PersistentVector.EMPTY,cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null)))], null),null])),null),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__64286){
return cljs.core.map_QMARK_(G__64286);
}),(function (G__64286){
return cljs.core.contains_QMARK_(G__64286,new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957));
}),(function (G__64286){
return cljs.core.contains_QMARK_(G__64286,new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746));
})], null),(function (G__64286){
return ((cljs.core.map_QMARK_(G__64286)) && (((cljs.core.contains_QMARK_(G__64286,new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957))) && (cljs.core.contains_QMARK_(G__64286,new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746))))));
}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null))),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null))], null)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"env","env",-1815813235)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__64287){
return cljs.core.map_QMARK_(G__64287);
}),(function (G__64287){
return cljs.core.contains_QMARK_(G__64287,new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957));
}),(function (G__64287){
return cljs.core.contains_QMARK_(G__64287,new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746));
})], null),(function (G__64287){
return ((cljs.core.map_QMARK_(G__64287)) && (((cljs.core.contains_QMARK_(G__64287,new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957))) && (cljs.core.contains_QMARK_(G__64287,new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746))))));
}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null)]))], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null))], null))], null),null),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"arity-2","arity-2",-1366521503),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null))),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null))),new cljs.core.Keyword(null,"arity-1","arity-1",105892478),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null)))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null,null));


/**
 * Generates a run plan for a given environment, the environment should contain the
 *   indexes in it (::pc/index-oir and ::pc/index-resolvers). It computes a plan to execute
 *   one level of an AST, the AST must be provided via the key :edn-query-language.ast/node.
 * 
 *     (compute-run-graph (assoc indexes :edn-query-language.ast/node ...))
 * 
 *   The resulting graph will look like this:
 * 
 *  ::nodes {1 {::node-id 1}}
 *   
 */
com.wsscode.pathom.connect.planner.compute_run_graph = (function com$wsscode$pathom$connect$planner$compute_run_graph(var_args){
var G__64289 = arguments.length;
switch (G__64289) {
case 2:
return com.wsscode.pathom.connect.planner.compute_run_graph.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 1:
return com.wsscode.pathom.connect.planner.compute_run_graph.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
default:
throw (new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));

}
});

(com.wsscode.pathom.connect.planner.compute_run_graph.cljs$core$IFn$_invoke$arity$2 = (function (graph,env){
var map__64290 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null))),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"env","env",-1815813235)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.nilable_impl(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__64291){
return cljs.core.map_QMARK_(G__64291);
})], null),(function (G__64291){
return cljs.core.map_QMARK_(G__64291);
}),cljs.core.PersistentVector.EMPTY,cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null)))], null),null])),null),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__64292){
return cljs.core.map_QMARK_(G__64292);
}),(function (G__64292){
return cljs.core.contains_QMARK_(G__64292,new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957));
}),(function (G__64292){
return cljs.core.contains_QMARK_(G__64292,new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746));
})], null),(function (G__64292){
return ((cljs.core.map_QMARK_(G__64292)) && (((cljs.core.contains_QMARK_(G__64292,new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957))) && (cljs.core.contains_QMARK_(G__64292,new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746))))));
}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null))),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null))),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null,null);
var map__64290__$1 = cljs.core.__destructure_map(map__64290);
var retspec64278 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64290__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
var argspec64277 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64290__$1,new cljs.core.Keyword(null,"args","args",1315556576));
if(cljs.core.truth_(argspec64277)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1238 compute-run-graph's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec64277,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,env], null));
} else {
}

var f64280 = (function (graph__$1,env__$1){
return com.wsscode.pathom.connect.planner.compute_run_graph_STAR_(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([com.wsscode.pathom.connect.planner.base_graph(),graph__$1], 0)),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([com.wsscode.pathom.connect.planner.base_env(),env__$1], 0)));
});
var ret64279 = f64280(graph,env);
if(cljs.core.truth_(retspec64278)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1238 compute-run-graph's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec64278,ret64279);
} else {
}

return ret64279;
}));

(com.wsscode.pathom.connect.planner.compute_run_graph.cljs$core$IFn$_invoke$arity$1 = (function (env){
var map__64293 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"env","env",-1815813235)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__64294){
return cljs.core.map_QMARK_(G__64294);
}),(function (G__64294){
return cljs.core.contains_QMARK_(G__64294,new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957));
}),(function (G__64294){
return cljs.core.contains_QMARK_(G__64294,new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746));
})], null),(function (G__64294){
return ((cljs.core.map_QMARK_(G__64294)) && (((cljs.core.contains_QMARK_(G__64294,new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957))) && (cljs.core.contains_QMARK_(G__64294,new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746))))));
}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null)]))], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null,null);
var map__64293__$1 = cljs.core.__destructure_map(map__64293);
var argspec64281 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64293__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec64282 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64293__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec64281)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1238 compute-run-graph's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec64281,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [env], null));
} else {
}

var f64284 = (function (env__$1){
return com.wsscode.pathom.connect.planner.compute_run_graph_STAR_(com.wsscode.pathom.connect.planner.base_graph(),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([com.wsscode.pathom.connect.planner.base_env(),env__$1], 0)));
});
var ret64283 = f64284(env);
if(cljs.core.truth_(retspec64282)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1238 compute-run-graph's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec64282,ret64283);
} else {
}

return ret64283;
}));

(com.wsscode.pathom.connect.planner.compute_run_graph.cljs$lang$maxFixedArity = 2);

cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","prepare-ast","com.wsscode.pathom.connect.planner/prepare-ast",-158664909,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null)),new cljs.core.Keyword(null,"ast","ast",-860334068),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957)),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null)),new cljs.core.Keyword(null,"ast","ast",-860334068),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"env","env",-1815813235),new cljs.core.Keyword(null,"ast","ast",-860334068)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__64300){
return cljs.core.map_QMARK_(G__64300);
})], null),(function (G__64300){
return cljs.core.map_QMARK_(G__64300);
}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null)])),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null)),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null)),new cljs.core.Keyword(null,"ast","ast",-860334068),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),null,null),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),null,null,null));


/**
 * Prepare AST from query. This will lift placeholder nodes, convert
 *   query to AST and remove children keys that are already present in the current
 *   entity.
 * @type {function(!cljs.core.IMap, *): *}
 */
com.wsscode.pathom.connect.planner.prepare_ast = (function com$wsscode$pathom$connect$planner$prepare_ast(env,ast){
var map__64301 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null)),new cljs.core.Keyword(null,"ast","ast",-860334068),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"env","env",-1815813235),new cljs.core.Keyword(null,"ast","ast",-860334068)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__64302){
return cljs.core.map_QMARK_(G__64302);
})], null),(function (G__64302){
return cljs.core.map_QMARK_(G__64302);
}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null)])),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null)),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null)),new cljs.core.Keyword(null,"ast","ast",-860334068),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),null,null),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),null,null,null);
var map__64301__$1 = cljs.core.__destructure_map(map__64301);
var retspec64297 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64301__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
var argspec64296 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64301__$1,new cljs.core.Keyword(null,"args","args",1315556576));
if(cljs.core.truth_(argspec64296)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1271 prepare-ast's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec64296,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [env,ast], null));
} else {
}

var f64299 = (function (env__$1,ast__$1){
var entity = com.wsscode.pathom.core.entity.cljs$core$IFn$_invoke$arity$1(env__$1);
return cljs.core.update.cljs$core$IFn$_invoke$arity$3(com.wsscode.pathom.core.lift_placeholders_ast(env__$1,ast__$1),new cljs.core.Keyword(null,"children","children",-940561982),(function (children){
return cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$1((function (p1__64295_SHARP_){
return cljs.core.contains_QMARK_(entity,new cljs.core.Keyword(null,"key","key",-1516042587).cljs$core$IFn$_invoke$arity$1(p1__64295_SHARP_));
})),children);
}));
});
var ret64298 = f64299(env,ast);
if(cljs.core.truth_(retspec64297)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1271 prepare-ast's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec64297,ret64298);
} else {
}

return ret64298;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","graph-provides","com.wsscode.pathom.connect.planner/graph-provides",1698174299,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"arg1","arg1",951899358),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null))),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("com.wsscode.pathom.parser","provides","com.wsscode.pathom.parser/provides",1167350507)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"arg1","arg1",951899358),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"arg1","arg1",951899358)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__64308){
return cljs.core.map_QMARK_(G__64308);
}),(function (G__64308){
return cljs.core.contains_QMARK_(G__64308,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097));
})], null),(function (G__64308){
return ((cljs.core.map_QMARK_(G__64308)) && (cljs.core.contains_QMARK_(G__64308,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)))], null),null]))], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"arg1","arg1",951899358),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.parser","provides","com.wsscode.pathom.parser/provides",1167350507),new cljs.core.Keyword("com.wsscode.pathom.parser","provides","com.wsscode.pathom.parser/provides",1167350507),null,null),new cljs.core.Keyword("com.wsscode.pathom.parser","provides","com.wsscode.pathom.parser/provides",1167350507),null,null,null));


/**
 * Get a set with all provided attributes from the graph.
 * @type {function(!cljs.core.IMap): *}
 */
com.wsscode.pathom.connect.planner.graph_provides = (function com$wsscode$pathom$connect$planner$graph_provides(p__64309){
var map__64310 = p__64309;
var map__64310__$1 = cljs.core.__destructure_map(map__64310);
var arg_64303 = map__64310__$1;
var index_attrs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64310__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097));
var map__64311 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"arg1","arg1",951899358),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"arg1","arg1",951899358)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__64312){
return cljs.core.map_QMARK_(G__64312);
}),(function (G__64312){
return cljs.core.contains_QMARK_(G__64312,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097));
})], null),(function (G__64312){
return ((cljs.core.map_QMARK_(G__64312)) && (cljs.core.contains_QMARK_(G__64312,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)))], null),null]))], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"arg1","arg1",951899358),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.parser","provides","com.wsscode.pathom.parser/provides",1167350507),new cljs.core.Keyword("com.wsscode.pathom.parser","provides","com.wsscode.pathom.parser/provides",1167350507),null,null),new cljs.core.Keyword("com.wsscode.pathom.parser","provides","com.wsscode.pathom.parser/provides",1167350507),null,null,null);
var map__64311__$1 = cljs.core.__destructure_map(map__64311);
var argspec64304 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64311__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec64305 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64311__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec64304)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1287 graph-provides's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),true], null),argspec64304,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg_64303], null));
} else {
}

var f64307 = (function (p__64313){
var map__64314 = p__64313;
var map__64314__$1 = cljs.core.__destructure_map(map__64314);
var arg_64303__$1 = map__64314__$1;
var index_attrs__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64314__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097));
return cljs.core.set(cljs.core.keys(index_attrs__$1));
});
var ret64306 = f64307(arg_64303);
if(cljs.core.truth_(retspec64305)){
com.fulcrologic.guardrails.core.run_check(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1287 graph-provides's",new cljs.core.Keyword(null,"tap>?","tap>?",212454486),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false,new cljs.core.Keyword(null,"expound-opts","expound-opts",623087481),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"args?","args?",-1963723548),false], null),retspec64305,ret64306);
} else {
}

return ret64306;
});

//# sourceMappingURL=com.wsscode.pathom.connect.planner.js.map
