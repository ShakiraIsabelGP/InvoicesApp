{"version":3,"sources":["com/app/model/account.cljc"],"mappings":"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","names":["options__35388__auto__","_","props","com.fulcrologic.fulcro.components/wrapped-render","com.fulcrologic.fulcro.components/props","js/com","js/com.app","js/com.app.model","js/com.app.model.account","js/com.app.model.account.AccountQuery","com.fulcrologic.fulcro.components/react-constructor","cljs.core.get","com.fulcrologic.fulcro.components/configure-component!","com.app.model.account/AccountQuery","com.fulcrologic.rad.attributes/new-attribute","cljs.core/with-meta","com.app.model.account/id","com.fulcrologic.rad.attributes-options/identity?","com.fulcrologic.rad.attributes-options/schema","com.app.model.account/email","com.fulcrologic.rad.attributes-options/identities","com.fulcrologic.rad.attributes-options/required?","com.app.model.account/active?","com.fulcrologic.rad.form-options/default-value","com.app.model.account/password","com.app.model.account/password-salt","com.app.model.account/password-iterations","com.app.model.account/name","com.fulcrologic.rad.form-options/field-label","cljs.core.update","cljs.core.merge","cljs.core.fnil","cljs.core/conj","com.app.model.account/avatar","com.fulcrologic.rad.form-options/field-style","com.app.model.account/files","com.fulcrologic.rad.attributes-options/target","com.fulcrologic.rad.attributes-options/cardinality","com.app.model.account/all-accounts","com.fulcrologic.rad.attributes-options/pc-output","com.fulcrologic.rad.attributes-options/pc-resolve","p__63070","map__63071","cljs.core/--destructure-map","query-params","env","com.app.model.account/account-invoices","p__63072","map__63073","com.app.model.account/sendemail","com.fulcrologic.fulcro.mutations/->Mutation","com.fulcrologic.fulcro.mutations/mutate","fulcro-mutation-env-symbol","map__63074","p__63075","map__63076","*after-render*-orig-val__63077","com.fulcrologic.fulcro.raw.components/*after-render*","*after-render*-temp-val__63078","*after-render*-orig-val__63079","*after-render*-temp-val__63080","temp__5804__auto__","com.fulcrologic.fulcro.algorithms.lookup/app-algorithm","default-action","email","result","response","cljs.core.get_in","status","cljs.core._EQ_","js/alert","com.app.model.account/logout","*after-render*-orig-val__63081","*after-render*-temp-val__63082","com.app.model.account/login","p__63083","map__63084","*after-render*-orig-val__63085","*after-render*-temp-val__63086","p__63087","map__63088","*after-render*-orig-val__63089","*after-render*-temp-val__63090","*after-render*-orig-val__63093","*after-render*-temp-val__63094","params","app","state","map__63091","zone-id","G__63092","cljs.core/deref","com.fulcrologic.rad.authorization/logged-in!","com.fulcrologic.rad.authorization/failed!","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","com.fulcrologic.fulcro.mutations.returning","com.fulcrologic.rad.authorization/Session","com.app.model.account/check-session","p__63095","map__63096","*after-render*-orig-val__63097","*after-render*-temp-val__63098","*after-render*-orig-val__63102","*after-render*-temp-val__63103","map__63099","map__63100","provider","G__63101","com.fulcrologic.fulcro.ui_state_machines.trigger_BANG_","com.fulcrologic.rad.authorization/machine-id","com.app.model.account/set-account-active","map__63104","p__63105","map__63106","*after-render*-orig-val__63107","*after-render*-temp-val__63108","*after-render*-orig-val__63109","*after-render*-temp-val__63110","id","active?","cljs.core.swap_BANG_","cljs.core/assoc-in","com.app.model.account/attributes"],"sourcesContent":["(ns com.app.model.account\n  (:refer-clojure :exclude [name])\n  (:require\n    #?@(:clj\n        [[com.wsscode.pathom.connect :as pc :refer [defmutation]]\n         [com.app.model.authorization :as exauth]\n         [com.app.model.mail :refer [sendmail]]\n         [com.app.components.dbqueries :as queries]]\n        :cljs\n        [[com.fulcrologic.fulcro.mutations :as m :refer [defmutation]]])\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [com.wsscode.pathom.connect :as pc]\n    [com.fulcrologic.rad.form :as form]\n    [com.fulcrologic.rad.form-options :as fo]\n    [com.fulcrologic.rad.attributes :as attr :refer [defattr]]\n    [com.fulcrologic.rad.attributes-options :as ao]\n    [com.fulcrologic.rad.authorization :as auth]\n    [com.fulcrologic.rad.middleware.save-middleware :as save-middleware]\n    [com.fulcrologic.rad.blob :as blob]\n    [taoensso.timbre :as log]\n    [com.fulcrologic.fulcro.ui-state-machines :as uism]\n    [com.fulcrologic.rad.type-support.date-time :as datetime]))\n\n(defsc AccountQuery [_ _]\n       {:query [:account/id :account/name :account/email]\n        :ident :account/id})\n\n(defattr id :account/id :uuid\n         {ao/identity? true\n          ao/schema :production})\n\n(defattr email :account/email :string\n         {ao/identities #{:account/id}\n          ao/required? true\n          ao/schema :production\n          :com.fulcrologic.rad.database-adapters.datomic/attribute-schema\n          {:db/unique :db.unique/value}})\n\n(defattr active? :account/active? :boolean\n         {ao/identities #{:account/id}\n          ao/schema :production\n          fo/default-value true})\n\n(defattr password :password/hashed-value :string\n         {ao/required? true\n          ao/identities #{:account/id}\n          ::auth/permissions (fn [_] #{})\n          ao/schema :production})\n\n(defattr password-salt :password/salt :string\n         {::auth/permissions (fn [_] #{})\n          ao/schema :production\n          ao/identities #{:account/id}\n          ao/required? true})\n\n(defattr password-iterations :password/iterations :int\n         {ao/identities  #{:account/id}\n          ::auth/permissions (fn [_] #{})\n          ao/schema :production\n          ao/required? true})\n\n(defattr name :account/name :string\n         {fo/field-label \"Name\"\n          ao/identities  #{:account/id}\n          ao/schema      :production\n          ao/required?   true})\n\n(blob/defblobattr avatar :account/avatar :avatar-images :remote\n                  {ao/identities  #{:account/id}\n                   ao/schema      :production\n                   fo/field-style ::blob/image-upload})\n\n(defattr files :account/files :ref\n         {ao/target      :file/id\n          ao/cardinality :many\n          ao/identities  #{:account/id}\n          ao/schema      :production})\n\n(defattr all-accounts :account/all-accounts :ref\n         {ao/target     :account/id\n          ao/pc-output  [{:account/all-accounts [:account/id]}]\n          ao/pc-resolve (fn [{:keys [query-params] :as env} _]\n                          #?(:clj\n                             {:account/all-accounts (queries/get-all-accounts env query-params)}))})\n\n(defattr account-invoices :account/invoices :ref\n         {ao/target     :account/id\n          ao/pc-output  [{:account/invoices [:invoice/id]}]\n          ao/pc-resolve (fn [{:keys [query-params] :as env} _]\n                          #?(:clj\n                             {:account/invoices (queries/get-customer-invoices env query-params)}))})\n\n\n#?(:clj\n   (defmutation sendemail [env {:account/keys [email]}]\n                {::pc/params #{:account/email}\n                 ::pc/output [:account/email :response]}\n                (let [send (sendmail email)\n                      response (get send :status)]\n                (if (= response 202)\n                  {:account/email email\n                   :response \"Done\"}\n                  {:response \"Error\"})))\n\n   :cljs\n   (defmutation sendemail [{:account/keys [email]}]\n     (ok-action [{:keys [env result]}]\n                    (let [response (get-in result [:body `sendemail])\n                          status (get response :response)]\n                      (if (= status \"Done\")\n                        (js/alert \"Email Sent Successfully\")\n                        (js/alert \"Error\"))))\n     (remote [env] true)))\n\n\n#?(:clj\n   (defmutation logout [env _]\n                {}\n                (exauth/logout! env))\n   :cljs\n   (defmutation logout [_]\n     (remote [env]\n             true)))\n\n#?(:clj\n   (defmutation login [env params]\n                {::pc/params #{:username :password}}\n                (exauth/login! env params))\n   :cljs\n   (defmutation login [params]\n     (ok-action [{:keys [app state]}]\n                (let [{:time-zone/keys [zone-id]\n                       ::auth/keys     [status]} (some-> state deref ::auth/authorization :local)]\n                  (if (= status :success)\n                    (do\n                      (auth/logged-in! app :local))\n                    (auth/failed! app :local))))\n     (error-action [{:keys [app]}]\n                   (log/error \"Login failed.\")\n                   (auth/failed! app :local))\n     (remote [env]\n             (m/returning env auth/Session))))\n\n(declare disable-account)\n\n#?(:clj\n   (defmutation check-session [env _]\n                {}\n                (exauth/check-session! env))\n   :cljs\n   (defmutation check-session [_]\n     (ok-action [{:keys [state app result]}]\n                (let [{::auth/keys [provider]} (get-in result [:body `check-session])\n                      {:time-zone/keys [zone-id]\n                       ::auth/keys     [status]} (some-> state deref ::auth/authorization (get provider))]\n                  (uism/trigger! app auth/machine-id :event/session-checked {:provider provider})))\n     (remote [env]\n             (m/returning env auth/Session))))\n\n\n#?(:clj\n   (defmutation set-account-active [env {:account/keys [id active?]}]\n                {::pc/params #{:account/id}\n                 ::pc/output [:account/id]}\n                (form/save-form* env {::form/id        id\n                                      ::form/master-pk :account/id\n                                      ::form/delta     {[:account/id id] {:account/active? {:before (not active?) :after (boolean active?)}}}}))\n   :cljs\n   (defmutation set-account-active [{:account/keys [id active?]}]\n     (action [{:keys [state]}]\n             (swap! state assoc-in [:account/id id :account/active?] active?))\n     (remote [_] true)))\n\n(def attributes [id name email password password-iterations password-salt active?\n                 all-accounts avatar files account-invoices])\n\n#?(:clj\n   (def resolvers [sendemail login logout set-account-active check-session]))\n"]}