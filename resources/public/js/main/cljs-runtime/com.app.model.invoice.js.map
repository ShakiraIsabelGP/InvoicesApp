{"version":3,"sources":["com/app/model/invoice.cljc"],"mappings":";AAeA,2BAAA,AAAAA,6CAAA,8DAAA,sDAAA,AAAAC,oBAAA,uGAAA,mDAAA,mEAAA,2CAAA,6EAAA,riBAASC,gQACCC,4DACAC;AAEV,6BAAA,AAAAJ,6CAAA,iEAAA,0DAAA,AAAAC,oBAAA,gDAAA,iHAAA,sEAAA,iKAAA,wEAAA,uDAAA,iFAAA,gIAAA,mEAAA,2CAAA,6EAAA,5mCAASI,knBAGCC,4DACAC,qNACAH;AAEV,mCAAA,AAAAJ,6CAAA,8EAAA,mDAAA,AAAAC,oBAAA,8FAAA,iEAAA,sKAAA,2CAAA,qEAAA,oEAAA,9tBAASO,qRACCC,kZAEAH,4DACAI,oDAAU,WAAKC,EAAEC,MAAMC;AAAb,AAAgB,SAAK,AAACC,wBAAQH,QAAG,sBAAA,rBAAM,AAACI,gBAAMJ;uDAJlE,0FAAA,uGAAA,iFAAA,gIAAA,mEAAA,2CAAA,6EAAA,joBAKUK,2FACAC,wGACAV,qNACAH;AAEV,8BAAA,AAAAJ,6CAAA,oEAAA,2DAAA,AAAAC,oBAAA,kGAAA,iFAAA,gIAAA,jhBAASiB,8QACCX,qNACAH,+GACAe,mDAAmB,WAAKC,OAAOT;AAAZ,AAAe,OAACU,gGAA2BV;2DAHxE,OAAA,2CAAA,6EAAA,vLAIUW;AAEV,iCAAA,AAAAtB,6CAAA,yEAAA,mDAAA,AAAAC,oBAAA,mGAAA,gGAAA,qHAAA,uDAAA,iFAAA,gIAAA,mEAAA,2CAAA,6EAAA,z9BAASsB,8QACCN,qGACAR,4GACAH,4DACAC,qNACAH;AAQV,qCAAA,AAAAJ,6CAAA,kFAAA,mDAAA,AAAAC,oBAAA,8FAAA,+GAAA,mFAAA,2CAAA,kFAAA,mFAAA,3tBAASuB,2RACCf,4GACAgB,0aACAC,kDAAc,WAAAC,SAAoCM;AAApC,AAAA,IAAAL,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;UAAAA,NAA+BI;mBAA/B,AAAAF,4CAAAF,eAAA,1EAAaG;AAAb,AAAA;KAHxB,2CAAA,6EAAA;AAQA,mCAAA,nCAAKG,sHAAYhC,yBAAGG,2BAAKG,iCAAWe,+BAASC,mCAAaN","names":["com.fulcrologic.rad.attributes/new-attribute","cljs.core/with-meta","com.app.model.invoice/id","com.fulcrologic.rad.attributes-options/identity?","com.fulcrologic.rad.attributes-options/schema","com.app.model.invoice/date","com.fulcrologic.rad.attributes-options/required?","com.fulcrologic.rad.attributes-options/identities","com.app.model.invoice/line-items","com.fulcrologic.rad.attributes-options/target","com.fulcrologic.rad.attributes-options/valid?","v","props","k","cljs.core/vector?","cljs.core/count","com.fulcrologic.rad.form-options/validation-message","com.fulcrologic.rad.attributes-options/cardinality","com.app.model.invoice/total","com.fulcrologic.rad.report-options/field-formatter","report","com.fulcrologic.rad.type_support.decimal.numeric__GT_currency_str","com.fulcrologic.rad.attributes-options/read-only?","com.app.model.invoice/customer","com.app.model.invoice/all-invoices","com.fulcrologic.rad.attributes-options/pc-output","com.fulcrologic.rad.attributes-options/pc-resolve","p__60758","map__60759","cljs.core/--destructure-map","cljs.core.get","query-params","env","_","com.app.model.invoice/attributes"],"sourcesContent":["(ns com.app.model.invoice\n  (:require\n    #?(:clj [com.app.components.dbqueries :as queries])\n    [cljc.java-time.local-date :as ld]\n    [cljc.java-time.local-date-time :as ldt]\n    [com.fulcrologic.rad.attributes :refer [defattr]]\n    [com.fulcrologic.rad.attributes-options :as ao]\n    [com.fulcrologic.rad.form :as form]\n    [com.fulcrologic.rad.form-options :as fo]\n    [com.fulcrologic.rad.report-options :as ro]\n    [com.fulcrologic.rad.type-support.date-time :as datetime]\n    [com.fulcrologic.rad.type-support.decimal :as math]\n    [com.wsscode.pathom.connect :as pc]\n    [taoensso.encore :as enc]))\n\n(defattr id :invoice/id :uuid\n         {ao/identity? true\n          ao/schema    :production})\n\n(defattr date :invoice/date :instant\n         {::form/field-style :date-at-noon\n          ::datetime/default-time-zone \"America/Bogota\"\n          ao/required? true\n          ao/identities #{:invoice/id}\n          ao/schema :production})\n\n(defattr line-items :invoice/line-items :ref\n         {ao/target :line-item/id\n          :com.fulcrologic.rad.database-adapters.datomic/attribute-schema {:db/isComponent true}\n          ao/required? true\n          ao/valid? (fn [v props k] (and (vector? v) (pos? (count v))))\n          fo/validation-message \"You must have a least one line item.\"\n          ao/cardinality  :many\n          ao/identities #{:invoice/id}\n          ao/schema :production})\n\n(defattr total :invoice/total :decimal\n         {ao/identities      #{:invoice/id}\n          ao/schema          :production\n          ro/field-formatter (fn [report v] (math/numeric->currency-str v))\n          ao/read-only?      true})\n\n(defattr customer :invoice/customer :ref\n         {ao/cardinality :one\n          ao/target      :account/id\n          ao/required?   true\n          ao/identities  #{:invoice/id}\n          ao/schema      :production})\n\n#?(:clj\n   (pc/defresolver customer-id [env {:invoice/keys [id]}]\n                   {::pc/input  #{:invoice/id}\n                    ::pc/output [:account/id]}\n                   {:account/id (queries/get-invoice-customer-id env id)}))\n\n(defattr all-invoices :invoice/all-invoices :ref\n         {ao/target     :invoice/id\n          ao/pc-output  [{:invoice/all-invoices [:invoice/id]}]\n          ao/pc-resolve (fn [{:keys [query-params] :as env} _]\n                          #?(:clj\n                             {:invoice/all-invoices (queries/get-all-invoices env query-params)}))})\n\n\n(def attributes [id date line-items customer all-invoices total])\n\n#?(:clj\n   (def resolvers [customer-id]))\n\n"]}