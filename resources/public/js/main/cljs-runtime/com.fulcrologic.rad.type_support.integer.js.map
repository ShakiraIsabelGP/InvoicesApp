{"version":3,"sources":["com/fulcrologic/rad/type_support/integer.cljc"],"mappings":";AAMA,AAAA,AAAAA,yBAAA,AAAA,qJAAA,AAAA,4fAAA,AAAAC,2BAAA,AAAAC,wDAAA,AAAA,mOAAA,AAAAC,yBAAA,mFAAA,qDAAA,mHAAA,AAAA,6KAAA,KAAA,MAAA,AAAA,mOAAA,AAAAD,wDAAA,AAAA,6FAAA,KAAA,MAAA,AAAA,wEAAA,KAAA,AAAA,KAAA,7qBAIGa,2jBAAWC;;AAJd,AAAA;AAAA;;;;;sDAAA,tDAAOH,oHAGJC;AAHH,AAAA,IAAAV,aAAA,AAAAH,2BAAA,AAAAC,wDAAA,AAAA,mOAAA,AAAAC,yBAAA,mFAAA,qDAAA,mHAAA,AAAA,6KAAA,KAAA,MAAA,AAAA,mOAAA,AAAAD,wDAAA,AAAA,6FAAA,KAAA,MAAA,AAAA,wEAAA,KAAA,AAAA,KAAA,7qBAIGa,2jBAAWC;IAJdZ,iBAAA,AAAAC,4BAAAD;IAAAE,eAAA,AAAAC,4CAAAH,eAAA;IAAAI,eAAA,AAAAD,4CAAAH,eAAA;AAAA,AAAA,oBAAAI;AAAA,AAAA,AAAAC,0CAAA,2CAAA,2DAAA,+DAAA,sDAAA,KAAA,0DAAA,MAAA,2DAAA,MAAA,oEAAA,mCAAA,wDAAA,aAAAD,aAAA,mFAGGM;;AAHH;;AAAA,IAAAJ,SAAA,WAGGI;AAHH,AAAA,IAAA,AAAA,OAMWG,0BAAWH;gBANtB,QAAAH,JAMyCO;AANzC,AAAA;;IAAAN,WAAA,AAAAF,OAGGI;AAHH,AAAA,oBAAAR;AAAA,AAAA,AAAAG,0CAAA,2CAAA,2DAAA,+DAAA,sDAAA,KAAA,0DAAA,MAAA,2DAAA,MAAA,oEAAA,mCAAA,wDAAA,cAAAH,aAAAM;;AAAA;;AAAAA;;AAUA,AAAKO,qDAAUN","names":["cljs.spec.alpha/def-impl","cljs.spec.alpha/fspec-impl","cljs.spec.alpha.spec_impl","cljs.spec.alpha/cat-impl","map__83945","cljs.core/--destructure-map","retspec83942","cljs.core.get","argspec83941","com.fulcrologic.guardrails.core/run-check","f83944","e83946","ret83943","com.fulcrologic.rad.type-support.integer/parse-long","v","cljs.core/string?","cljs.core/int?","cognitect.transit/integer","_","com.fulcrologic.rad.type-support.integer/parse-int"],"sourcesContent":["(ns com.fulcrologic.rad.type-support.integer\n  (:refer-clojure :exclude [parse-long])\n  (:require\n    [com.fulcrologic.guardrails.core :refer [>defn =>]]\n    [cognitect.transit :as ct]))\n\n(>defn parse-long\n  \"Parse a string into an integer value. In CLJS this can return a Number or a goog.math.Long\n   if it would overflow a js Number. Returns 0 if it cannot be parsed.\"\n  [v]\n  [string? => int?]\n  #?(:cljs\n     (try (ct/integer v) (catch :default _ 0))\n     :clj\n     (try (Long/parseLong v) (catch Exception _ 0))))\n\n(def parse-int parse-long)\n"]}